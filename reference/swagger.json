{
  "tags": [
    {
      "name": "[Public]",
      "description": "Public APIs"
    },
    {
      "name": "[Public] Docs",
      "description": "Public APIs for Waybills, Invoices, EPODs and other Documentation"
    },
    {
      "name": "[Public] Order",
      "description": "Public APIs for Order Tracking"
    },
    {
      "name": "[Auth]",
      "description": "Authentication APIs"
    },
    {
      "name": "[Map]",
      "description": "Maps APIs"
    },
    {
      "name": "[Launcher]",
      "description": "Launcher APIs"
    },
    {
      "name": "[Sender]",
      "description": "Sender APIs"
    },
    {
      "name": "[Sender] Batch",
      "description": "Sender Batch APIs"
    },
    {
      "name": "[Sender] Order",
      "description": "Sender Order APIs"
    },
    {
      "name": "[Worker]",
      "description": "Worker APIs"
    },
    {
      "name": "[Worker] Task",
      "description": "Worker Task APIs"
    },
    {
      "name": "[Worker] TaskGroup",
      "description": "Worker TaskGroup APIs"
    },
    {
      "name": "[Worker] SubTask",
      "description": "Worker SubTask APIs"
    },
    {
      "name": "[Dispatcher]",
      "description": "Dispatcher APIs"
    },
    {
      "name": "[Dispatcher] Company",
      "description": "Dispatcher APIs for Company Management"
    },
    {
      "name": "[Dispatcher] Role",
      "description": "Dispatcher APIs for Role Management"
    },
    {
      "name": "[Dispatcher] User",
      "description": "Dispatcher APIs for User Management"
    },
    {
      "name": "[Dispatcher] Partner",
      "description": "Dispatcher APIs for Partner Management"
    },
    {
      "name": "[Dispatcher] Sender",
      "description": "Dispatcher APIs for Sender Management"
    },
    {
      "name": "[Dispatcher] CorporateSender",
      "description": "Dispatcher APIs for Corporate Sender Management"
    },
    {
      "name": "[Dispatcher] Webhooks",
      "description": "Manage Webhooks"
    },
    {
      "name": "[Dispatcher] Webhook",
      "description": "Manage Webhook"
    },
    {
      "name": "[Dispatcher] Worker",
      "description": "Dispatcher APIs for Worker Management"
    },
    {
      "name": "[Dispatcher] WorkerTeam",
      "description": "Dispatcher APIs for Worker Team Management"
    },
    {
      "name": "[Dispatcher] Batch",
      "description": "Dispatcher APIs for Batch Management"
    },
    {
      "name": "[Dispatcher] Order",
      "description": "Dispatcher APIs for Order Management"
    },
    {
      "name": "[Dispatcher] OrderItem",
      "description": "Dispatcher APIs for OrderItem Management"
    },
    {
      "name": "[Dispatcher] ItemType",
      "description": "Dispatcher APIs for ItemType Management"
    },
    {
      "name": "[Dispatcher] Task",
      "description": "Dispatcher APIs for Task Management"
    },
    {
      "name": "[Dispatcher] TaskGroup",
      "description": "Dispatcher APIs for TaskGroup Management"
    },
    {
      "name": "[Dispatcher] TaskExceptionReason",
      "description": "Dispatcher APIs for TaskExceptionReason Management"
    },
    {
      "name": "[Dispatcher] SubTask",
      "description": "Dispatcher APIs for SubTask Management"
    },
    {
      "name": "[Dispatcher] SubTaskRule",
      "description": "Dispatcher APIs for SubTaskRule Management"
    },
    {
      "name": "[Dispatcher] Network",
      "description": "Dispatcher APIs for Network Management"
    },
    {
      "name": "[Dispatcher] Search",
      "description": "Dispatcher APIs for Search"
    },
    {
      "name": "[Dispatcher] Broadcast",
      "description": "Broadcast management"
    },
    {
      "name": "[Dispatcher] Trip",
      "description": "Dispatcher APIs for Trip Management"
    }
  ],
  "swagger": "2.0",
  "paths": {
    "/api/v3/dispatcher/trips/{id}/assign": {
      "post": {
        "tags": [
          "[Dispatcher] Trip"
        ],
        "summary": "This endpoint assigns the trip with worker",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Trip id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/TripAssignRequest"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Trip creation request"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TripController.assign",
        "description": ""
      }
    },
    "/api/v3/dispatcher/partners/{cip}/reject_invite": {
      "put": {
        "tags": [
          "[Dispatcher] Partner"
        ],
        "summary": "This endpoint is used to decline a Partner invite",
        "responses": {
          "200": {
            "description": "Partnership invite declined successfully"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "cip",
            "in": "path",
            "description": "Partner CIP"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerController.reject_invite",
        "description": ""
      }
    },
    "/api/v3/sender/info": {
      "get": {
        "tags": [
          "[Sender]"
        ],
        "summary": "This endpoint retrieves a Sender's infomation",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.InfoController.me",
        "description": ""
      }
    },
    "/api/v3/dispatcher/settings/:id": {
      "get": {
        "tags": [
          "[Dispatcher] Planner Setting"
        ],
        "summary": "This endpoint retrieves a setting belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherSettingResponse"
            },
            "description": "Got list of company settings"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Setting ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PlanSettingsController.show",
        "description": ""
      }
    },
    "/api/v3/dispatcher/tasks": {
      "post": {
        "tags": [
          "[Dispatcher] Task"
        ],
        "summary": "This endpoint list tasks of a company",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "from",
            "in": "query",
            "description": "from datetime in ISO8601 format"
          },
          {
            "type": "string",
            "required": false,
            "name": "to",
            "in": "query",
            "description": "to datetime in ISO8601 format"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "include_transfer_properties",
            "in": "query",
            "description": "include info/properties on transfers - slower query, larger response"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "isolate_tasks",
            "in": "query",
            "description": "show or exclude isolate tasks"
          },
          {
            "type": "array",
            "required": false,
            "name": "task_group_states[]",
            "items": {
              "enum": [
                "unassigned",
                "assigned",
                "completed",
                "cancelled"
              ]
            },
            "in": "query",
            "description": "task_group states",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "task_states[]",
            "items": {
              "enum": [
                "created",
                "completed",
                "failed"
              ]
            },
            "in": "query",
            "description": "task states",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "task_types[]",
            "items": {
              "enum": [
                "pickup",
                "dropoff"
              ]
            },
            "in": "query",
            "description": "task types",
            "collectionFormat": "multi"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "show_reported_tasks",
            "in": "query",
            "description": "show reported task - absence means ignore `reported` trait"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "cancelled",
            "in": "query",
            "description": "show cancelled task"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "broadcasted",
            "in": "query",
            "description": "show broadcasted tasks"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "accepted",
            "in": "query",
            "description": "show accepted tasks"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "show_incomplete_info_order_step",
            "in": "query",
            "description": "show incomplete info order_step - absence means ignore `incomplete info` trait"
          },
          {
            "type": "array",
            "required": false,
            "name": "order_item_states[]",
            "items": {
              "enum": [
                "created",
                "processing",
                "completed",
                "cancelled"
              ]
            },
            "in": "query",
            "description": "order_item states",
            "collectionFormat": "multi"
          },
          {
            "x-example": "O-YITPNVRHDNHN",
            "type": "string",
            "required": false,
            "name": "order_number",
            "in": "query",
            "description": "order number"
          },
          {
            "x-example": "YOJ-Q1HWD3LBPT0",
            "type": "string",
            "required": false,
            "name": "order_item_tracking_number",
            "in": "query",
            "description": "order item tracking number"
          },
          {
            "type": "array",
            "required": false,
            "name": "us_partner_company_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of upstream partner company ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "ds_partner_company_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of downstream partner company ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "task_group_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of task_group ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "order_item_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of order_item ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "worker_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of worker ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "trip_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of trip ids",
            "collectionFormat": "multi"
          },
          {
            "x-example": "0,100",
            "type": "string",
            "required": false,
            "name": "item_volume_range",
            "in": "query",
            "description": "item volume defined by min,max in integer"
          },
          {
            "x-example": "0,100",
            "type": "string",
            "required": false,
            "name": "item_weight_range",
            "in": "query",
            "description": "item weight defined by min,max in integer"
          },
          {
            "x-example": "1.4630478,104.7647132,1.0",
            "type": "array",
            "required": false,
            "name": "geo_circles[]",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "array of geo_circle defined by lat,lon,radius in float",
            "collectionFormat": "multi"
          },
          {
            "x-example": "1.4630478,104.7647132,1.0",
            "type": "string",
            "required": false,
            "name": "geo_circle",
            "in": "query",
            "description": "geo_circle defined by lat,lon,radius in float"
          },
          {
            "type": "array",
            "required": false,
            "name": "region_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of region ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "corporate_account_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of corporate account ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "order_item_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "order item ids",
            "collectionFormat": "multi"
          },
          {
            "type": "string",
            "required": false,
            "name": "sort_by",
            "in": "query",
            "enum": [
              "from_time",
              "to_time",
              "completion_time",
              "task_group",
              "order_item_inserted_at",
              "sequence",
              "similarity"
            ],
            "description": "Sorting By"
          },
          {
            "type": "string",
            "required": false,
            "name": "service_type_keys[]",
            "in": "query",
            "enum": [
              "same_day",
              "next_day",
              "express",
              "custom"
            ],
            "description": "array of service types"
          },
          {
            "type": "string",
            "required": false,
            "name": "from_completion_time",
            "in": "query",
            "description": "from completion time"
          },
          {
            "type": "string",
            "required": false,
            "name": "to_completion_time",
            "in": "query",
            "description": "to completion time"
          },
          {
            "type": "array",
            "required": false,
            "name": "associated_task_group_ids[]",
            "in": "query",
            "description": "array of associated task group ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "item_types[]",
            "in": "query",
            "description": "array of item types",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "hub_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of hub ids",
            "collectionFormat": "multi"
          },
          {
            "type": "string",
            "required": false,
            "name": "parent_item_tracking_number",
            "in": "query",
            "description": "Tracking number of pallet or container"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskController.index",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Task"
        ],
        "summary": "This endpoint list tasks of a company",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "from",
            "in": "query",
            "description": "from datetime in ISO8601 format"
          },
          {
            "type": "string",
            "required": false,
            "name": "to",
            "in": "query",
            "description": "to datetime in ISO8601 format"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "include_transfer_properties",
            "in": "query",
            "description": "include info/properties on transfers - slower query, larger response"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "isolate_tasks",
            "in": "query",
            "description": "show or exclude isolate tasks"
          },
          {
            "type": "array",
            "required": false,
            "name": "task_group_states[]",
            "items": {
              "enum": [
                "unassigned",
                "assigned",
                "completed",
                "cancelled"
              ]
            },
            "in": "query",
            "description": "task_group states",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "task_states[]",
            "items": {
              "enum": [
                "created",
                "completed",
                "failed"
              ]
            },
            "in": "query",
            "description": "task states",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "task_types[]",
            "items": {
              "enum": [
                "pickup",
                "dropoff"
              ]
            },
            "in": "query",
            "description": "task types",
            "collectionFormat": "multi"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "show_reported_tasks",
            "in": "query",
            "description": "show reported task - absence means ignore `reported` trait"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "cancelled",
            "in": "query",
            "description": "show cancelled task"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "broadcasted",
            "in": "query",
            "description": "show broadcasted tasks"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "accepted",
            "in": "query",
            "description": "show accepted tasks"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "show_incomplete_info_order_step",
            "in": "query",
            "description": "show incomplete info order_step - absence means ignore `incomplete info` trait"
          },
          {
            "type": "array",
            "required": false,
            "name": "order_item_states[]",
            "items": {
              "enum": [
                "created",
                "processing",
                "completed",
                "cancelled"
              ]
            },
            "in": "query",
            "description": "order_item states",
            "collectionFormat": "multi"
          },
          {
            "x-example": "O-YITPNVRHDNHN",
            "type": "string",
            "required": false,
            "name": "order_number",
            "in": "query",
            "description": "order number"
          },
          {
            "x-example": "YOJ-Q1HWD3LBPT0",
            "type": "string",
            "required": false,
            "name": "order_item_tracking_number",
            "in": "query",
            "description": "order item tracking number"
          },
          {
            "type": "array",
            "required": false,
            "name": "us_partner_company_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of upstream partner company ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "ds_partner_company_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of downstream partner company ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "task_group_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of task_group ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "order_item_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of order_item ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "worker_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of worker ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "trip_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of trip ids",
            "collectionFormat": "multi"
          },
          {
            "x-example": "0,100",
            "type": "string",
            "required": false,
            "name": "item_volume_range",
            "in": "query",
            "description": "item volume defined by min,max in integer"
          },
          {
            "x-example": "0,100",
            "type": "string",
            "required": false,
            "name": "item_weight_range",
            "in": "query",
            "description": "item weight defined by min,max in integer"
          },
          {
            "x-example": "1.4630478,104.7647132,1.0",
            "type": "array",
            "required": false,
            "name": "geo_circles[]",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "array of geo_circle defined by lat,lon,radius in float",
            "collectionFormat": "multi"
          },
          {
            "x-example": "1.4630478,104.7647132,1.0",
            "type": "string",
            "required": false,
            "name": "geo_circle",
            "in": "query",
            "description": "geo_circle defined by lat,lon,radius in float"
          },
          {
            "type": "array",
            "required": false,
            "name": "region_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of region ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "corporate_account_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of corporate account ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "order_item_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "order item ids",
            "collectionFormat": "multi"
          },
          {
            "type": "string",
            "required": false,
            "name": "sort_by",
            "in": "query",
            "enum": [
              "from_time",
              "to_time",
              "completion_time",
              "task_group",
              "order_item_inserted_at",
              "sequence",
              "similarity"
            ],
            "description": "Sorting By"
          },
          {
            "type": "string",
            "required": false,
            "name": "service_type_keys[]",
            "in": "query",
            "enum": [
              "same_day",
              "next_day",
              "express",
              "custom"
            ],
            "description": "array of service types"
          },
          {
            "type": "string",
            "required": false,
            "name": "from_completion_time",
            "in": "query",
            "description": "from completion time"
          },
          {
            "type": "string",
            "required": false,
            "name": "to_completion_time",
            "in": "query",
            "description": "to completion time"
          },
          {
            "type": "array",
            "required": false,
            "name": "associated_task_group_ids[]",
            "in": "query",
            "description": "array of associated task group ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "item_types[]",
            "in": "query",
            "description": "array of item types",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "hub_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of hub ids",
            "collectionFormat": "multi"
          },
          {
            "type": "string",
            "required": false,
            "name": "parent_item_tracking_number",
            "in": "query",
            "description": "Tracking number of pallet or container"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/worker_teams/{id}/add_workers": {
      "post": {
        "tags": [
          "[Dispatcher] WorkerTeam"
        ],
        "summary": "This endpoint adds worker/ workers to Worker Team",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker Team ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherAddWorkersToTeamRequest"
            },
            "required": false,
            "name": "worker_team",
            "in": "body",
            "description": "Worker Team info"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerTeamController.add_workers",
        "description": ""
      }
    },
    "/api/v3/public/users/info": {
      "get": {
        "tags": [
          "[Public]"
        ],
        "summary": "This endpoint retrieves infomation about a Company",
        "responses": {},
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "company_slug",
            "in": "query",
            "description": "Company slug"
          }
        ],
        "operationId": "ApiWeb.V3.UserController.info",
        "description": "",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/v3/dispatcher/search/sender": {
      "get": {
        "tags": [
          "[Dispatcher] Search"
        ],
        "summary": "This endpoint is used to search for a Sender",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 25
          },
          {
            "type": "string",
            "required": true,
            "name": "q",
            "in": "query",
            "description": "search query"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SearchController.sender",
        "description": ""
      }
    },
    "/api/v3/public/verify_otp/": {
      "get": {
        "tags": [
          "[Public]"
        ],
        "summary": "This endpoint verifies the entered OTP code",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VerifyOtpResponse"
            },
            "description": "OTP Verified"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "phone",
            "in": "query",
            "description": "Phone number"
          },
          {
            "type": "string",
            "required": false,
            "name": "otp_code",
            "in": "query",
            "description": "OTP code"
          }
        ],
        "operationId": "ApiWeb.V3.ApiController.verify_otp",
        "description": "",
        "deprecated": true
      }
    },
    "/api/v3/dispatcher/company/configurations": {
      "put": {
        "tags": [
          "[Dispatcher] Company"
        ],
        "summary": "This endpoint updated a configuration",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateConfigurationResponse"
            },
            "description": "Updated configuration"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateConfigurationRequest"
            },
            "required": false,
            "name": "configuration",
            "in": "body",
            "description": "Configuration information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.CompanyController.update_configuration",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/mark_arrival": {
      "post": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint is for marking arrival on tasks",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": "string",
            "required": false,
            "name": "arrival_time",
            "in": "body",
            "description": "Arrival time"
          },
          {
            "schema": {
              "$ref": "#/definitions/CompletionLocation"
            },
            "required": false,
            "name": "arrival_location",
            "in": "body",
            "description": "Arrival location"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.mark_arrival",
        "description": ""
      }
    },
    "/api/v3/dispatcher/plan_settings/{id}": {
      "delete": {
        "tags": [
          "[Dispatcher] Planner Setting"
        ],
        "summary": "This endpoint deletes a setting",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Setting ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PlanSettingsController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/vehicles": {
      "post": {
        "tags": [
          "[Dispatcher] Vehicle"
        ],
        "summary": "This endpoint creates a vehicle",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherVehicleResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateVehicleRequest"
            },
            "required": false,
            "name": "vehicle",
            "in": "body",
            "description": "vehicle info"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.VehicleController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Vehicle"
        ],
        "summary": "This endpoint retrieves a list of vehicles belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherVehiclesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.VehicleController.index",
        "description": ""
      }
    },
    "/api/v3/worker/chat/channel": {
      "put": {
        "tags": [
          "[Worker] Chat"
        ],
        "summary": "This endpoint returns update worker channel data",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": "string",
            "required": false,
            "name": "last_read_at",
            "in": "body",
            "description": "Last read on date in ISO8601 format"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.ChatController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Worker] Chat"
        ],
        "summary": "This endpoint returns list of worker channels",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkerChatMessagesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "last_message_date",
            "in": "query",
            "description": "Last Message date"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.ChatController.channel",
        "description": ""
      }
    },
    "/api/v3/dispatcher/address_items/upload": {
      "post": {
        "tags": [
          "[Dispatcher] Addressbook"
        ],
        "summary": "This endpoint uploads address items of a dispatcher",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CreateAddressItemsResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "file",
            "required": true,
            "name": "file",
            "in": "formData",
            "description": "The file to upload."
          },
          {
            "type": "integer",
            "required": false,
            "name": "sender_id",
            "in": "formData",
            "description": "The id of the sender to create these addresses for. If not given all senders will have accesss to these addresses"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.AddressItemController.upload",
        "description": "",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/api/v3/enterprise/user/{id}/remove_from_enterprise": {
      "post": {
        "tags": [
          "[Enterprise] User"
        ],
        "summary": "This endpoint removes an user from an enterprise",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Enterprise user id"
          }
        ],
        "operationId": "ApiWeb.V3.Enterprise.EnterpriseUserController.remove_user_from_enterprise",
        "description": ""
      }
    },
    "/api/v3/dispatcher/search/worker": {
      "get": {
        "tags": [
          "[Dispatcher] Search"
        ],
        "summary": "This endpoint is used to search for a Worker",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 25
          },
          {
            "type": "string",
            "required": true,
            "name": "q",
            "in": "query",
            "description": "search query"
          },
          {
            "type": "boolean",
            "required": true,
            "name": "take_all",
            "in": "query",
            "description": "get all result"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SearchController.worker",
        "description": ""
      }
    },
    "/api/v3/dispatcher/partners/invites/sent": {
      "get": {
        "tags": [
          "[Dispatcher] Partner"
        ],
        "summary": "This endpoint retrieves a list of sent partnership requests",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherPartners"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          },
          {
            "type": "string",
            "required": false,
            "name": "q",
            "in": "query",
            "description": "Search by company name"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerController.sent_invites",
        "description": ""
      }
    },
    "/api/v3/dispatcher/rates/rate_entries/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint updates a new RateEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RateEntryResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Rate Entry Id"
          },
          {
            "schema": {
              "$ref": "#/definitions/RateEntryRequest"
            },
            "required": false,
            "name": "rate_entry",
            "in": "body",
            "description": "RateEntry"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RateEntryController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint updates a new RateEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RateEntryResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Rate Entry Id"
          },
          {
            "schema": {
              "$ref": "#/definitions/RateEntryRequest"
            },
            "required": false,
            "name": "rate_entry",
            "in": "body",
            "description": "RateEntry"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RateEntryController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint retrieves information about a RateEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RateEntryResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "RateEntry Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RateEntryController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint deletes a RateEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RateEntryResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "RateEntry Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RateEntryController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/vehicle_types2/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] VehicleType"
        ],
        "summary": "This endpoint updates a vehicle type",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherVehicleTypeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "query",
            "description": "id of the vehicle type"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateVehicleTypeRequest"
            },
            "required": false,
            "name": "vehicle_type",
            "in": "body",
            "description": "vehicle type info"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.VehicleTypeController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] VehicleType"
        ],
        "summary": "This endpoint retrieves one vehicle type",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherVehicleTypeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "query",
            "description": "id of the vehicle type"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.VehicleTypeController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] VehicleType"
        ],
        "summary": "This endpoint deletes a vehicle type",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherVehicleTypeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "query",
            "description": "id of the vehicle type"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.VehicleTypeController.delete",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/mark_departure": {
      "post": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint is for marking departure on tasks",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": "string",
            "required": false,
            "name": "departure_time",
            "in": "body",
            "description": "Departure time"
          },
          {
            "schema": {
              "$ref": "#/definitions/CompletionLocation"
            },
            "required": false,
            "name": "departure_location",
            "in": "body",
            "description": "Departure location"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.mark_departure",
        "description": ""
      }
    },
    "/api/v3/dispatcher/partners/{cip}/cancel_invite": {
      "put": {
        "tags": [
          "[Dispatcher] Partner"
        ],
        "summary": "This endpoint is used to cancel a sent Partner invite",
        "responses": {
          "200": {
            "description": "Partnership invite canceled successfully"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "cip",
            "in": "path",
            "description": "Partner CIP"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerController.cancel_invite",
        "description": ""
      }
    },
    "/api/v3/dispatcher/order_items/{number}/logs": {
      "get": {
        "tags": [
          "[Dispatcher] OrderItem"
        ],
        "summary": "this endpoint is used by a Dispatcher to view the logs for a single order_item",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OrderItemsLogsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Order Item id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderItemController.logs",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/schedules/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Schedule"
        ],
        "summary": "This endpoint updates the schedule",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Schedule Id"
          },
          {
            "schema": {
              "$ref": "#/definitions/ScheduleRequest"
            },
            "required": false,
            "name": "schedule",
            "in": "body",
            "description": "Schedule information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ScheduleController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Schedule"
        ],
        "summary": "This endpoint updates the schedule",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Schedule Id"
          },
          {
            "schema": {
              "$ref": "#/definitions/ScheduleRequest"
            },
            "required": false,
            "name": "schedule",
            "in": "body",
            "description": "Schedule information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ScheduleController.update",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Schedule"
        ],
        "summary": "This endpoint deletes the schedule",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Schedule Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ScheduleController.delete",
        "description": ""
      }
    },
    "/api/v3/sender/orders/{number}/cancel": {
      "put": {
        "tags": [
          "[Sender] Order"
        ],
        "summary": "This endpoint cancels an Order",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "x-example": 12345,
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Order number"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.OrderController.cancel",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/bulk_actions/{id}/status": {
      "get": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint checks the status of all actions in a Batch",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BulkActionsStatus"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Batch ID"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.batch_actions_status",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/start": {
      "post": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint allows for the updating of a task",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task Id"
          },
          {
            "schema": "string",
            "required": false,
            "name": "start_time",
            "in": "body",
            "description": "Start time"
          },
          {
            "schema": {
              "$ref": "#/definitions/CompletionLocation"
            },
            "required": false,
            "name": "start_location",
            "in": "body",
            "description": "Start location"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.start_tasks",
        "description": ""
      }
    },
    "/api/v3/dispatcher/order_items/consolidate": {
      "post": {
        "tags": [
          "[Dispatcher] OrderItem"
        ],
        "summary": "this endpoint is used to consolidate one or more items into another one",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderItemController.consolidate",
        "description": ""
      }
    },
    "/api/v3/dispatcher/waybill_templates/{id}": {
      "get": {
        "tags": [
          "[Dispatcher] Waybill Template"
        ],
        "summary": "This endpoint retrieves a waybill template",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WaybillTemplateResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Waybill template id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WaybillTemplateController.show",
        "description": ""
      }
    },
    "/api/v3/dispatcher/addressbook/search": {
      "get": {
        "tags": [
          "[Dispatcher] Addressbook"
        ],
        "summary": "This endpoint lists address items of a company, supporting search",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "array",
            "required": false,
            "name": "address_item_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of address item ids",
            "collectionFormat": "multi"
          },
          {
            "type": "string",
            "required": false,
            "name": "query",
            "in": "query",
            "description": "external_id/contact/address text query"
          },
          {
            "type": "string",
            "required": false,
            "name": "category",
            "in": "query",
            "description": "category of address item"
          },
          {
            "type": "integer",
            "required": false,
            "name": "sender_id",
            "in": "query",
            "description": "sender_id"
          },
          {
            "type": "array",
            "required": false,
            "name": "tags[]",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "array of tags",
            "collectionFormat": "multi"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          },
          {
            "type": "string",
            "required": false,
            "name": "sort_by",
            "in": "query",
            "enum": [
              "external_id"
            ],
            "description": "Sorting By"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.AddressItemController.index",
        "description": ""
      }
    },
    "/api/v3/worker/stops/{id}/tasks": {
      "get": {
        "tags": [
          "[Worker] Stop"
        ],
        "summary": "This endpoint retrieves a list of a Worker's ongoing Tasks by Stop",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TasksResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Stop ID"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Worker.StopController.tasks",
        "description": ""
      }
    },
    "/api/v3/dispatcher/workers/{id}/location_history": {
      "get": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "This endpoint retrieves locations of the worker according to a time window",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherWorkersPathResponse"
            },
            "description": "Got worker"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker ID"
          },
          {
            "type": "string",
            "required": true,
            "name": "from",
            "in": "path",
            "description": "starting time"
          },
          {
            "type": "string",
            "required": true,
            "name": "to",
            "in": "path",
            "description": "ending time"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.location_history",
        "description": ""
      }
    },
    "/api/v3/dispatcher/rates/rate_entries": {
      "post": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint creates a new RateEntry",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RateEntryResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/RateEntryRequest"
            },
            "required": false,
            "name": "rate_entry",
            "in": "body",
            "description": "RateEntry"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RateEntryController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint retrieves a list of RateEntries belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RateEntriesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RateEntryController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/order_items/cancel_multiple": {
      "put": {
        "tags": [
          "[Dispatcher] OrderItem"
        ],
        "summary": "This endpoint is used by a Dispatcher to cancel one or many OrderItems",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "array",
            "required": true,
            "name": "ids",
            "in": "path",
            "description": "Order Item IDs"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderItemController.cancel_multiple",
        "description": ""
      }
    },
    "/api/v3/dispatcher/tasks/ongoing_task_info": {
      "get": {
        "tags": [
          "[Dispatcher] Task"
        ],
        "summary": "This endpoint retrieves metadata of ongoing tasks",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaskMetaResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "x-example": "Singapore",
            "type": "string",
            "required": false,
            "name": "time_zone",
            "in": "query",
            "description": "timezone, if not specified, it will use the timezone in the company setting"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskController.ongoing_tasks_info",
        "description": ""
      }
    },
    "/api/v3/sender/address_items/upload": {
      "post": {
        "tags": [
          "[Sender] Addressbook"
        ],
        "summary": "This endpoint uploads address items of a sender",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CreateAddressItemsResponse"
            },
            "description": "OK"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "file",
            "required": false,
            "name": "file",
            "in": "formData",
            "description": "The file to upload"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.AddressItemController.upload",
        "description": "",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/api/v3/worker/get_companies_theme": {
      "get": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint retrieves a list of all companies along with their theme info",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompaniesThemeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.InfoController.get_companies_theme",
        "description": ""
      }
    },
    "/api/v3/dispatcher/workers/{id}/tasks/failed": {
      "get": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "This endpoint retrieves a list of a Worker's failed Tasks",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker ID"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.failed",
        "description": ""
      }
    },
    "/api/v3/dispatcher/waybill_templates": {
      "post": {
        "tags": [
          "[Dispatcher] Waybill Template"
        ],
        "summary": "This endpoint create a waybill template",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WaybillTemplateResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/WaybillTemplateCreateRequest"
            },
            "required": false,
            "name": "waybill_template",
            "in": "body",
            "description": "waybill template information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WaybillTemplateController.create",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/eta": {
      "post": {
        "tags": [
          "[Worker] ETA"
        ],
        "summary": "This endpoint updates eta for tasks of the worker",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/EtaRequest"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Eta update request"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.EtaController.update_eta",
        "description": ""
      }
    },
    "/api/v3/dispatcher/service_types/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Service Type"
        ],
        "summary": "This endpoint updates a service type",
        "responses": {
          "200": {
            "description": {
              "$ref": "#/definitions/ServiceTypeResponse"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateServiceTypeRequest"
            },
            "required": false,
            "name": "service_type",
            "in": "body",
            "description": "Service type information"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Service type id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ServiceTypeController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Service Type"
        ],
        "summary": "This endpoint updates a service type",
        "responses": {
          "200": {
            "description": {
              "$ref": "#/definitions/ServiceTypeResponse"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateServiceTypeRequest"
            },
            "required": false,
            "name": "service_type",
            "in": "body",
            "description": "Service type information"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Service type id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ServiceTypeController.update",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Service Type"
        ],
        "summary": "This endpoint deletes a service type",
        "responses": {
          "200": {
            "description": "Service type was deleted."
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Service type id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ServiceTypeController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/operations/apply": {
      "post": {
        "tags": [
          "[Dispatcher] Operation"
        ],
        "summary": "This endpoint applies a list of operations to a step list",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ApplyOperationsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/ApplyOperationsRequest"
            },
            "required": false,
            "name": "operation",
            "in": "body",
            "description": "Operation"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OperationController.apply_operations",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/self_assign": {
      "post": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint allows a worker to self assign tasks",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": [
              "YOJ-ABCD"
            ],
            "schema": "array",
            "required": true,
            "name": "tracking_numbers",
            "in": "body",
            "description": "Tracking numbers"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.self_assign",
        "description": ""
      }
    },
    "/api/v3/dispatcher/search": {
      "get": {
        "tags": [
          "[Dispatcher] Search"
        ],
        "summary": "This endpoint is used for global search",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 25
          },
          {
            "type": "string",
            "required": true,
            "name": "q",
            "in": "query",
            "description": "search query"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SearchController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/permissions": {
      "get": {
        "tags": [
          "[Dispatcher] Permissions"
        ],
        "summary": "This endpoint retrieves a list of Permissions",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PermissionController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/network/spokes": {
      "post": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint creates a new Spoke",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SpokeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/SpokeRequest"
            },
            "required": false,
            "name": "spoke",
            "in": "body",
            "description": "Spoke"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.SpokeController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint retrieves a list of Spokes belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SpokesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.SpokeController.index",
        "description": ""
      }
    },
    "/api/v3/worker/stops": {
      "get": {
        "tags": [
          "[Worker] Stop"
        ],
        "summary": "This endpoint retrieves a list of a Worker's ongoing Stops",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/StopsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Worker.StopController.index",
        "description": ""
      }
    },
    "/api/v3/worker/check_for_updates": {
      "get": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint checks if current installed app needs to be updated",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VersionResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "os",
            "in": "query",
            "description": "operating system"
          },
          {
            "type": "integer",
            "required": false,
            "name": "version",
            "in": "query",
            "description": "version"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.InfoController.check_for_updates",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/waybill_templates/{id}": {
      "delete": {
        "tags": [
          "[Dispatcher] Waybill Template"
        ],
        "summary": "This endpoint delete a waybill template",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Waybill template id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WaybillTemplateController.delete",
        "description": ""
      }
    },
    "/api/v3/public/orders/get_slots": {
      "get": {
        "tags": [
          "[Public] Order"
        ],
        "summary": "This endpoint obtains a list of possible slots for an Item",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GetSlotsResponse"
            },
            "description": "Get slots Response"
          },
          "400": {
            "description": {}
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "sample": "next_day",
            "required": false,
            "name": "service_type",
            "in": "query",
            "description": "Service type"
          },
          {
            "x-example": "2020-10-26T10:00:00.000%2B08:00",
            "type": "string",
            "required": false,
            "name": "datetime",
            "in": "query",
            "description": "Date time"
          },
          {
            "x-example": "yojee",
            "type": "string",
            "required": false,
            "name": "slug",
            "in": "query",
            "description": "Company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Public.OrdersController.get_slots",
        "description": "",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/v3/worker/tasks/batches/{id}/status": {
      "get": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint checks the status of all Tasks in a Batch",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BulkCompletionStatus"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Batch ID"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.batch_complete_status",
        "description": ""
      }
    },
    "/api/v3/dispatcher/order_items/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] OrderItem"
        ],
        "summary": "This endpoint is used by a Dispatcher to update an OrderItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OrderItemsShowResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Order Item id"
          },
          {
            "schema": {
              "$ref": "#/definitions/OrderItemsUpdateRequest"
            },
            "required": false,
            "name": "order_item",
            "in": "body",
            "description": "Order Item information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderItemController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] OrderItem"
        ],
        "summary": "This endpoint is used by a Dispatcher to update an OrderItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OrderItemsShowResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Order Item id"
          },
          {
            "schema": {
              "$ref": "#/definitions/OrderItemsUpdateRequest"
            },
            "required": false,
            "name": "order_item",
            "in": "body",
            "description": "Order Item information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderItemController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] OrderItem"
        ],
        "summary": "This endpoint retrieves information about an OrderItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OrderItemsShowResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Order Item id"
          },
          {
            "type": "string",
            "required": false,
            "name": "delivery_trail_sort",
            "in": "query",
            "description": "asc or desc for delivery trail sort",
            "default": "asc"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderItemController.show",
        "description": ""
      }
    },
    "/api/v3/dispatcher/senders": {
      "post": {
        "tags": [
          "[Dispatcher] Sender"
        ],
        "summary": "This endpoint creates a new Sender",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateSenderResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateSenderRequest"
            },
            "required": false,
            "name": "sender",
            "in": "body",
            "description": "Sender information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SenderController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Sender"
        ],
        "summary": "This endpoint retrieves a list of Senders",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherSendersResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "sender_type",
            "in": "query",
            "enum": [
              "individual",
              "organisation"
            ],
            "description": "Sender type (individual/organisation)",
            "default": "individual"
          },
          {
            "type": "string",
            "required": false,
            "name": "email",
            "in": "query",
            "description": "email of sender"
          },
          {
            "type": "string",
            "required": false,
            "name": "q",
            "in": "query",
            "description": "Search by sender name or organisation name"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SenderController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/vehicle_types": {
      "get": {
        "tags": [
          "[Dispatcher] Company"
        ],
        "summary": "This endpoint retrieves a list of VehicleTypes belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyVehicleTypesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.CompanyController.vehicle_types",
        "description": ""
      }
    },
    "/api/v3/dispatcher/webhooks/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Webhook"
        ],
        "summary": "This endpoint updates a webhook",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWebhookResponse"
            },
            "description": "Webhook was updated."
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Webhook ID"
          },
          {
            "schema": {
              "description": "",
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "minLength": 1
                },
                "events": {
                  "type": "array",
                  "items": {
                    "required": [],
                    "properties": {}
                  }
                }
              },
              "required": [
                "url",
                "events"
              ],
              "x-examples": {
                "example-1": {
                  "url": "https://cuong.free.beeceptor.com",
                  "events": [
                    "sender.created",
                    "payment.completed"
                  ]
                }
              }
            },
            "required": false,
            "name": "webhook",
            "in": "body",
            "description": "Webhook information",
            "x-examples": {
              "example-1": {
                "url": "https://cuong.free.beeceptor.com",
                "events": [
                  "sender.created",
                  "payment.completed"
                ]
              }
            }
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WebhookController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Webhook"
        ],
        "summary": "This endpoint retrieves information about a webhook",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWebhookResponse"
            },
            "description": "Got webhook info."
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Webhook ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WebhookController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Webhook"
        ],
        "summary": "Webhook",
        "responses": {
          "200": {
            "description": "Webhook was deleted."
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Webhook ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WebhookController.delete",
        "description": "Manage a single webhook"
      },
      "parameters": [
        {
          "type": "string",
          "name": "id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/api/v3/public/payments/stripe/plans": {
      "get": {
        "tags": [
          "[Public] Payment"
        ],
        "summary": "This endpoint retrieves stripe plans",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [],
        "operationId": "ApiWeb.V3.Public.PaymentsController.plans",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/bulk_actions": {
      "put": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint is used by a Worker to perform actions for multiple tasks",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/BulkActionsRequest"
            },
            "required": false,
            "name": "actions",
            "in": "body",
            "description": "Task actions information"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.bulk_actions",
        "description": ""
      }
    },
    "/api/v3/public/invoices/{order_number}": {
      "get": {
        "tags": [
          "[Public] Docs"
        ],
        "summary": "This endpoint generates an Invoice from an Order number",
        "responses": {
          "200": {
            "description": "Create invoice binary for download"
          },
          "422": {
            "description": {
              "message": "Invoice creation failed!"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "order_number",
            "in": "query",
            "description": "Order number"
          },
          {
            "type": "string",
            "required": false,
            "name": "format",
            "items": {
              "type": "string",
              "enum": [
                "html",
                "pdf"
              ]
            },
            "in": "query",
            "description": "Output format"
          }
        ],
        "operationId": "ApiWeb.V3.Public.InvoiceController.generate",
        "description": ""
      }
    },
    "/api/v3/dispatcher/task_groups/{id}": {
      "get": {
        "tags": [
          "[Dispatcher] TaskGroup"
        ],
        "summary": "This endpoint retrieves information about a TaskGroup",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task group ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskGroupController.show",
        "description": ""
      }
    },
    "/api/v3/public/orders/service_types": {
      "get": {
        "tags": [
          "[Public] Order"
        ],
        "summary": "This endpoint retrieves a company's service_type metadata and non-operating days",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "company_slug",
            "in": "query",
            "description": "Company Slug"
          }
        ],
        "operationId": "ApiWeb.V3.Public.OrdersController.service_types",
        "description": ""
      }
    },
    "/api/v3/dispatcher/order_items": {
      "get": {
        "tags": [
          "[Dispatcher] OrderItem"
        ],
        "summary": "This endpoint retrieves a list of OrderItems",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OrderItemsIndexResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "status",
            "in": "query",
            "description": "status of the order item, can be string or list",
            "default": []
          },
          {
            "type": "string",
            "required": false,
            "name": "service_type",
            "in": "query",
            "description": "service type of the order item, can be string or list",
            "default": []
          },
          {
            "type": "string",
            "required": false,
            "name": "order_id",
            "in": "query",
            "description": "order_id, can be string or an array",
            "default": []
          },
          {
            "type": "string",
            "required": false,
            "name": "sender_id",
            "in": "query",
            "description": "sender_id",
            "default": []
          },
          {
            "type": "array",
            "required": false,
            "name": "tracking_numbers[]",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "array of tracking_numbers",
            "collectionFormat": "multi"
          },
          {
            "type": "string",
            "required": false,
            "name": "from",
            "in": "query",
            "description": "from timestamp",
            "default": []
          },
          {
            "type": "string",
            "required": false,
            "name": "to",
            "in": "query",
            "description": "to timestamp",
            "default": []
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderItemController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/partner_transfer/dispatcher/reject_order/{order_number}": {
      "put": {
        "tags": [
          "[Dispatcher] Partner Transfer Order"
        ],
        "summary": "This endpoint is used to reject a Transfer Order",
        "responses": {
          "200": {
            "description": "Transfer Order rejected successfully"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "order_number",
            "in": "path",
            "description": "Order number"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerTransferController.reject_transfer",
        "description": ""
      }
    },
    "/api/v3/dispatcher/webhooks": {
      "post": {
        "tags": [
          "[Dispatcher] Webhook"
        ],
        "summary": "Webhooks",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWebhookResponse"
            },
            "description": "Webhook was created."
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWebhookRequest"
            },
            "required": false,
            "name": "webhook",
            "in": "body",
            "description": "Webhook information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WebhookController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Webhook"
        ],
        "summary": "Webhooks",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherWebhooksResponse"
            },
            "description": "OK",
            "examples": {
              "example-1": {
                "pagination": {
                  "total_pages": 2,
                  "total_count": 1,
                  "limit_value": 1,
                  "current_page": 1
                },
                "data": [
                  {
                    "url": "https://cuong.free.beeceptor.com",
                    "updated_at": "2018-10-23T07:57:27.538169Z",
                    "status": "active",
                    "secret_token": "AA-BB-CC",
                    "inserted_at": "2018-10-23T07:57:27.538169Z",
                    "events": [
                      "sender.created",
                      "payment.completed"
                    ],
                    "company_id": 1
                  }
                ]
              }
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WebhookController.index",
        "description": "This endpoint retrieves a list of webhooks"
      },
      "parameters": []
    },
    "/api/v3/dispatcher/users": {
      "post": {
        "tags": [
          "[Dispatcher] User"
        ],
        "summary": "This endpoint creates a new Dispatcher",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateUserResponse"
            },
            "description": "Created the company user"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateUserRequest"
            },
            "required": false,
            "name": "user",
            "in": "body",
            "description": "Company user information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.UserController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] User"
        ],
        "summary": "This endpoint retrieves a list of Dispatchers belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherIndexUserResponse"
            },
            "description": "Got list of company users"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.UserController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/workers": {
      "post": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "This endpoint creates a new Worker",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWorkerResponse"
            },
            "description": "Created worker"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWorkerRequest"
            },
            "required": false,
            "name": "order",
            "in": "body",
            "description": "Worker information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "This endpoint retrieves a list of Workers",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherWorkersResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          },
          {
            "type": "string",
            "required": false,
            "name": "sort",
            "in": "query",
            "description": "the field to sort (id/distance/capacity_load etc.)",
            "default": [
              105,
              100
            ]
          },
          {
            "type": "string",
            "required": false,
            "name": "order",
            "in": "query",
            "description": "asc, or desc",
            "default": [
              97,
              115,
              99
            ]
          },
          {
            "type": "string",
            "required": false,
            "name": "status",
            "in": "query",
            "description": "driver status",
            "default": []
          },
          {
            "type": "string",
            "required": false,
            "name": "from",
            "in": "query",
            "description": "from timestamp",
            "default": []
          },
          {
            "type": "string",
            "required": false,
            "name": "to",
            "in": "query",
            "description": "to timestamp",
            "default": []
          },
          {
            "type": "string",
            "required": false,
            "name": "last_seen_from",
            "in": "query",
            "description": "from last seen of worker",
            "default": []
          },
          {
            "type": "string",
            "required": false,
            "name": "last_seen_to",
            "in": "query",
            "description": "to last seen of worker",
            "default": []
          },
          {
            "type": "string",
            "required": false,
            "name": "name",
            "in": "query",
            "description": "worker name",
            "default": []
          },
          {
            "type": "string",
            "required": false,
            "name": "target_location",
            "in": "query",
            "description": "Geospatial coordinates of a location",
            "default": "1.3617837,103.8527606"
          },
          {
            "type": "float",
            "required": false,
            "name": "with_in",
            "in": "query",
            "description": "Length of range (with target_location at center) in meters",
            "default": "2000"
          },
          {
            "type": "array",
            "required": false,
            "name": "worker_team_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of worker_team ids",
            "collectionFormat": "multi"
          },
          {
            "type": "integer",
            "required": false,
            "name": "exclude_worker_team_id",
            "in": "query",
            "description": "Excludes workers that belongs to the worker team"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "include_polyline",
            "in": "query",
            "description": "Include polyline of worker's current active sequence in the response",
            "default": false
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/order_items/{id}/jobs/update_multi": {
      "put": {
        "tags": [
          "[Dispatcher] OrderItem"
        ],
        "summary": "this endpoint is used to update multiple jobs",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderItemController.jobs_update_multi",
        "description": ""
      }
    },
    "/api/v3/worker/task/{id}/mark_as_failed": {
      "post": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint marks a Task as failed by creating an associated TaskException",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task Id"
          },
          {
            "x-example": [
              "Sender not available"
            ],
            "schema": "array",
            "required": true,
            "name": "descriptions",
            "in": "body",
            "description": "Task Exception descriptions"
          },
          {
            "schema": "string",
            "required": false,
            "name": "completion_time",
            "in": "body",
            "description": "Completion time"
          },
          {
            "schema": {
              "$ref": "#/definitions/CompletionLocation"
            },
            "required": false,
            "name": "location",
            "in": "body",
            "description": "Mark location"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.mark_as_failed",
        "description": ""
      }
    },
    "/api/v3/sender/batches/check_status": {
      "get": {
        "tags": [
          "[Sender] Batch"
        ],
        "summary": "This endpoint checks the status of a Batch",
        "responses": {},
        "parameters": [
          {
            "type": "integer",
            "required": false,
            "name": "batch_id",
            "in": "query",
            "description": "Batch Id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.BatchController.check_status",
        "description": ""
      }
    },
    "/api/v3/dispatcher/workers/{id}/assign_vehicle": {
      "put": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "this endpoint is used by a dispatcher to assign a vehicle to a driver",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherAssignVehicleRequest"
            },
            "required": false,
            "name": "worker",
            "in": "body",
            "description": "Assignment info"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.assign_vehicle",
        "description": ""
      }
    },
    "/api/v3/sender/orders/completed": {
      "get": {
        "tags": [
          "[Sender] Order"
        ],
        "summary": "This endpoint retrieves all completed Orders of a Sender",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Sender.OrderController.completed",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/bulk_complete": {
      "put": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint is used by a Worker to complete multiple Tasks",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/BulkTaskCompletionRequest"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Task Completion information"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.bulk_complete",
        "description": ""
      }
    },
    "/api/v3/sender/orders/{number}/payments": {
      "post": {
        "tags": [
          "[Sender] Order"
        ],
        "summary": "This endpoint creates a payment request",
        "responses": {
          "200": {
            "description": "Payment successful"
          },
          "422": {
            "description": "Payment failed!"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "schema": {
              "$ref": "#/definitions/CreatePaymentRequest"
            },
            "required": false,
            "name": "payment",
            "in": "body",
            "description": "Payment information"
          },
          {
            "x-example": "cGc2RUIwSUZsTGRHQXpzUTJ4WTZ6Zz09",
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Order Number"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.PaymentsController.create",
        "description": ""
      }
    },
    "/api/v3/dispatcher/batches/get_orders": {
      "get": {
        "tags": [
          "[Dispatcher] Batch"
        ],
        "summary": "This endpoint retrieves detailed information about a Batch",
        "responses": {},
        "parameters": [
          {
            "type": "integer",
            "required": false,
            "name": "batch_id",
            "in": "query",
            "description": "Batch Id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.BatchController.get_orders",
        "description": ""
      }
    },
    "/api/v3/public/orders/item_types": {
      "get": {
        "tags": [
          "[Public] Order"
        ],
        "summary": "This endpoint retrieves item types of a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyItemTypesResponse"
            },
            "description": "Got a complete list of the company's item types"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "company_slug",
            "in": "query",
            "description": "Company Slug"
          }
        ],
        "operationId": "ApiWeb.V3.Public.OrdersController.item_types",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/display_settings": {
      "put": {
        "tags": [
          "[Dispatcher] Company"
        ],
        "summary": "This endpoint updates a Company's display_settings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyInfoResponse"
            },
            "description": "Updated the company display_settings"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/CompanyUpdateDisplaySettingsRequest"
            },
            "required": false,
            "name": "settings",
            "in": "body",
            "description": "Company display_settings object"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.CompanyController.update_display_settings",
        "description": ""
      }
    },
    "/api/v3/dispatcher/task_groups/{task_group_id}/tasks/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Task"
        ],
        "summary": "This endpoint updates a Task's details",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task ID"
          },
          {
            "type": "integer",
            "required": true,
            "name": "task_group_id",
            "in": "path",
            "description": "Task group ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskController.update",
        "description": ""
      }
    },
    "/api/v3/dispatcher/item_types/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] ItemType"
        ],
        "summary": "This endpoint update a item type of current company of user",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ItemTypeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "id of the item type"
          },
          {
            "schema": {
              "$ref": "#/definitions/CreateItemTypeRequest"
            },
            "required": false,
            "name": "item_type",
            "in": "body",
            "description": "Item Type"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ItemTypeController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] ItemType"
        ],
        "summary": "This endpoint retrieves a item type of current company of user",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ItemTypeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "id of the item type"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ItemTypeController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] ItemType"
        ],
        "summary": "This endpoint delete a item type of current company of user",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "id of the item type"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ItemTypeController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/task_exception_reasons/{id}": {
      "delete": {
        "tags": [
          "[Dispatcher] TaskExceptionReason"
        ],
        "summary": "This endpoint deletes a TaskExceptionReason",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaskExceptionReasonResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "TaskExceptionReason Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskExceptionReasonController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/trips/{id}/start": {
      "post": {
        "tags": [
          "[Dispatcher] Trip"
        ],
        "summary": "This endpoint starts the trip",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Trip id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TripController.start",
        "description": ""
      }
    },
    "/api/v3/dispatcher/task_groups/unassigned": {
      "get": {
        "tags": [
          "[Dispatcher] TaskGroup"
        ],
        "summary": "This endpoint retrieves a list of unassigned TaskGroups",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UnassignedTaskGroupsIndexResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "task_group_ids",
            "in": "query",
            "description": "an array of task_group_id for task group"
          },
          {
            "type": "string",
            "required": false,
            "name": "from",
            "in": "query",
            "description": "from datetime in ISO8601 format"
          },
          {
            "type": "string",
            "required": false,
            "name": "to",
            "in": "query",
            "description": "to datetime in ISO8601 format"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 25
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskGroupController.unassigned",
        "description": ""
      }
    },
    "/api/v3/sender/orders/cancel": {
      "post": {
        "tags": [
          "[Sender] Order"
        ],
        "summary": "This endpoint cancels an Order",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "x-example": "O-12345",
            "schema": "string",
            "required": false,
            "name": "order_number",
            "in": "body",
            "description": "Order number"
          },
          {
            "x-example": "ext12345",
            "schema": "string",
            "required": false,
            "name": "order_external_id",
            "in": "body",
            "description": "Order external id"
          },
          {
            "x-example": "YOJ-12345",
            "schema": "string",
            "required": false,
            "name": "tracking_number",
            "in": "body",
            "description": "Tracking number"
          },
          {
            "x-example": "ext3333",
            "schema": "string",
            "required": false,
            "name": "external_customer_id",
            "in": "body",
            "description": "External customer id"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.OrderController.cancel_order",
        "description": "This API is used to cancel an order. Require input one of 4 fields(order_number, order_external_id, tracking_number, external_customer_id)"
      }
    },
    "/api/v3/sender/orders": {
      "post": {
        "tags": [
          "[Sender] Order"
        ],
        "summary": "This endpoint creates an Order",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SenderCreateOrderResponse"
            },
            "description": "Create order response success"
          },
          "422": {
            "description": {
              "message": "Order creation failed!"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "schema": {
              "$ref": "#/definitions/SenderCreateOrderRequest"
            },
            "required": false,
            "name": "order",
            "in": "body",
            "description": "Order information"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.OrderController.create",
        "description": ""
      }
    },
    "/api/v3/dispatcher/network/regions_in_charge": {
      "get": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint retrieves a list of Regions which dispatcher is in charge of",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RegionsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.RegionController.regions_in_charge",
        "description": ""
      }
    },
    "/api/v3/dispatcher/trips": {
      "post": {
        "tags": [
          "[Dispatcher] Trip"
        ],
        "summary": "This endpoint creates the trip with planned tasks",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/TripCreateRequest"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Trip creation request"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TripController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Trip"
        ],
        "summary": "This endpoint retrieves a list of a Trips",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TripsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 100
          },
          {
            "type": "string",
            "required": false,
            "name": "name",
            "in": "query",
            "description": "Trip name"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "live_encoded_polyline",
            "in": "query",
            "description": "Include live encoded polyline in response"
          },
          {
            "type": "string",
            "required": false,
            "name": "sort",
            "in": "query",
            "enum": [
              "start_time"
            ],
            "description": "Sort By"
          },
          {
            "type": "string",
            "required": false,
            "name": "order",
            "in": "query",
            "enum": [
              "asc",
              "desc"
            ],
            "description": "asc, or desc"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TripController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/partners/{id}/mark_active": {
      "put": {
        "tags": [
          "[Dispatcher] Partner"
        ],
        "summary": "This endpoint is used to mark a partnership active",
        "responses": {
          "200": {
            "description": "Mark partnership active successfully"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Partnership ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerController.mark_active",
        "description": ""
      }
    },
    "/api/v3/worker/task_groups": {
      "get": {
        "tags": [
          "[Worker] TaskGroup"
        ],
        "summary": "This endpoint retrieves a list of a Worker's TaskGroups",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaskGroupResponse"
            },
            "description": "Filter task group by statuses"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "array",
            "required": false,
            "name": "status",
            "in": "query",
            "description": "An array of statuses, e.g: [broadcasted, assigned, accepted, completed, cancelled]"
          },
          {
            "x-example": "accepted_time",
            "type": "string",
            "required": false,
            "name": "sort_by",
            "in": "query",
            "description": "Sort results, e.g: [id, accepted_time]"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskGroupController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/workers/create_multi": {
      "post": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "This endpoint creates many Workers",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateMultipleWorkersResponse"
            },
            "description": "OK"
          },
          "422": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateMultipleWorkersErrorResponse"
            },
            "description": "Error"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateMultipleWorkersRequest"
            },
            "required": false,
            "name": "worker",
            "in": "body",
            "description": "Many workers information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.create_multiple",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/task_type_mappings/{id}": {
      "delete": {
        "tags": [
          "[Dispatcher] Company"
        ],
        "summary": "This endpoint deletes a task type mapping",
        "responses": {
          "200": {
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task type mapping id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskTypeMappingController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/partnership_info": {
      "put": {
        "tags": [
          "[Dispatcher] Partner"
        ],
        "summary": "This endpoint updates a Company's partnership information",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherPartnershipInfo"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherPartnershipInfoUpdate"
            },
            "required": false,
            "name": "partner",
            "in": "body",
            "description": "Dispatcher company partnership info"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerController.update_partnership_info",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Partner"
        ],
        "summary": "This endpoint retrieves a Company's partnership information",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherPartnershipInfo"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerController.partnership_info",
        "description": ""
      }
    },
    "/api/v3/dispatcher/sub_tasks/bulk_complete": {
      "put": {
        "tags": [
          "[Dispatcher] SubTask"
        ],
        "summary": "This endpoint completes several sub_tasks",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubTaskResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/SubTaskBulkRequest"
            },
            "required": false,
            "name": "sub_task",
            "in": "body",
            "description": "SubTask"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SubTaskController.complete_multi_sub_tasks",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company": {
      "get": {
        "tags": [
          "[Dispatcher] Company"
        ],
        "summary": "This endpoint retrieves infomation about a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyInfoResponse"
            },
            "description": "Got the company info"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.CompanyController.show",
        "description": ""
      }
    },
    "/api/v3/dispatcher/tasks/quick_assign": {
      "post": {
        "tags": [
          "[Dispatcher] Task"
        ],
        "summary": "This endpoint assigns a tasks (non optimized) to a worker / route",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/QuickAssignRequest"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Quick assign request"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.AllocationController.quick_assign",
        "description": ""
      }
    },
    "/api/v3/dispatcher/power/tasks": {
      "post": {
        "tags": [
          "[Dispatcher] PowerTask"
        ],
        "summary": "This endpoint list tasks of a company",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "from",
            "in": "query",
            "description": "from datetime in ISO8601 format"
          },
          {
            "type": "string",
            "required": false,
            "name": "to",
            "in": "query",
            "description": "to datetime in ISO8601 format"
          },
          {
            "type": "string",
            "required": false,
            "name": "inserted_after",
            "in": "query",
            "description": "after inserted datetime in ISO8601 format"
          },
          {
            "type": "string",
            "required": true,
            "name": "task_query_type",
            "in": "query",
            "enum": [
              "unassigned",
              "assigned",
              "completed",
              "not_completed",
              "transferred",
              "all"
            ],
            "description": "task states"
          },
          {
            "type": "string",
            "required": true,
            "name": "query_version",
            "in": "query",
            "description": "query version"
          },
          {
            "type": "boolean",
            "required": true,
            "name": "include_count",
            "in": "query",
            "description": "include count"
          },
          {
            "type": "array",
            "required": false,
            "name": "item_types[]",
            "items": {
              "enum": [
                "Document",
                "Pallet",
                "Container",
                "Package"
              ]
            },
            "in": "query",
            "description": "item types"
          },
          {
            "type": "array",
            "required": false,
            "name": "order_item_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "order item ids",
            "collectionFormat": "multi"
          },
          {
            "type": "string",
            "required": false,
            "name": "sort_by",
            "in": "query",
            "enum": [
              "similarity"
            ],
            "description": "Sorting By"
          },
          {
            "type": "array",
            "required": false,
            "name": "task_states[]",
            "items": {
              "enum": [
                "created",
                "completed",
                "failed"
              ]
            },
            "in": "query",
            "description": "task states",
            "collectionFormat": "multi"
          },
          {
            "x-example": "1.4630478,104.7647132,1.0",
            "type": "array",
            "required": false,
            "name": "geo_circles[]",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "array of geo_circle defined by lat,lon,radius in float",
            "collectionFormat": "multi"
          },
          {
            "x-example": "1.4630478,104.7647132,1.0",
            "type": "string",
            "required": false,
            "name": "geo_circle",
            "in": "query",
            "description": "geo_circle defined by lat,lon,radius in float"
          },
          {
            "type": "array",
            "required": false,
            "name": "us_partner_company_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of upstream partner company ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "ds_partner_company_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of downstream partner company ids",
            "collectionFormat": "multi"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "show_incomplete_info_order_step",
            "in": "query",
            "description": "show incomplete info order_step - absence means ignore `incomplete info` trait"
          },
          {
            "type": "string",
            "required": false,
            "name": "from_completion_time",
            "in": "query",
            "description": "from completion time"
          },
          {
            "type": "string",
            "required": false,
            "name": "to_completion_time",
            "in": "query",
            "description": "to completion time"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "show_reported_tasks",
            "in": "query",
            "description": "show reported task - absence means ignore `reported` trait"
          },
          {
            "type": "array",
            "required": false,
            "name": "related_task_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array related task ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "worker_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of worker ids",
            "collectionFormat": "multi"
          },
          {
            "type": "integer",
            "required": false,
            "name": "id_after",
            "in": "query",
            "description": "after id"
          },
          {
            "type": "integer",
            "required": false,
            "name": "id_before",
            "in": "query",
            "description": "before id"
          },
          {
            "type": "integer",
            "required": false,
            "name": "order_id_before",
            "in": "query",
            "description": "before order id"
          },
          {
            "type": "integer",
            "required": false,
            "name": "step_sequence_after",
            "in": "query",
            "description": "after sequence step"
          },
          {
            "type": "string",
            "required": false,
            "name": "custom_fields1",
            "in": "query",
            "description": "external customer id"
          },
          {
            "type": "string",
            "required": false,
            "name": "custom_fields3",
            "in": "query",
            "description": "external customer id 3"
          },
          {
            "type": "string",
            "required": false,
            "name": "parent_item_tracking_number",
            "in": "query",
            "description": "Tracking number of pallet or container"
          },
          {
            "type": "array",
            "required": false,
            "name": "region_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of region ids",
            "collectionFormat": "multi"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "include_transfer_properties",
            "in": "query",
            "description": "include info/properties on transfers - slower query, larger response"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "show_incomplete_info_order_step",
            "in": "query",
            "description": "show incomplete info order_step - absence means ignore `incomplete info` trait"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "show_reported_tasks",
            "in": "query",
            "description": "show reported task - absence means ignore `reported` trait"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "accepted",
            "in": "query",
            "description": "show accepted tasks"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "broadcasted",
            "in": "query",
            "description": "show broadcasted tasks"
          },
          {
            "type": "array",
            "required": false,
            "name": "hub_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of hub ids",
            "collectionFormat": "multi"
          },
          {
            "x-example": "YOJ-Q1HWD3LBPT0",
            "type": "string",
            "required": false,
            "name": "order_item_tracking_number",
            "in": "query",
            "description": "order item tracking number"
          },
          {
            "x-example": "O-YITPNVRHDNHN",
            "type": "string",
            "required": false,
            "name": "order_number",
            "in": "query",
            "description": "order number"
          },
          {
            "type": "integer",
            "required": true,
            "name": "limit",
            "in": "query",
            "description": "limit, max is 500",
            "default": 30
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PowerController.tasks",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] PowerTask"
        ],
        "summary": "This endpoint list tasks of a company",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "from",
            "in": "query",
            "description": "from datetime in ISO8601 format"
          },
          {
            "type": "string",
            "required": false,
            "name": "to",
            "in": "query",
            "description": "to datetime in ISO8601 format"
          },
          {
            "type": "string",
            "required": false,
            "name": "inserted_after",
            "in": "query",
            "description": "after inserted datetime in ISO8601 format"
          },
          {
            "type": "string",
            "required": true,
            "name": "task_query_type",
            "in": "query",
            "enum": [
              "unassigned",
              "assigned",
              "completed",
              "not_completed",
              "transferred",
              "all"
            ],
            "description": "task states"
          },
          {
            "type": "string",
            "required": true,
            "name": "query_version",
            "in": "query",
            "description": "query version"
          },
          {
            "type": "boolean",
            "required": true,
            "name": "include_count",
            "in": "query",
            "description": "include count"
          },
          {
            "type": "array",
            "required": false,
            "name": "item_types[]",
            "items": {
              "enum": [
                "Document",
                "Pallet",
                "Container",
                "Package"
              ]
            },
            "in": "query",
            "description": "item types"
          },
          {
            "type": "array",
            "required": false,
            "name": "order_item_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "order item ids",
            "collectionFormat": "multi"
          },
          {
            "type": "string",
            "required": false,
            "name": "sort_by",
            "in": "query",
            "enum": [
              "similarity"
            ],
            "description": "Sorting By"
          },
          {
            "type": "array",
            "required": false,
            "name": "task_states[]",
            "items": {
              "enum": [
                "created",
                "completed",
                "failed"
              ]
            },
            "in": "query",
            "description": "task states",
            "collectionFormat": "multi"
          },
          {
            "x-example": "1.4630478,104.7647132,1.0",
            "type": "array",
            "required": false,
            "name": "geo_circles[]",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "array of geo_circle defined by lat,lon,radius in float",
            "collectionFormat": "multi"
          },
          {
            "x-example": "1.4630478,104.7647132,1.0",
            "type": "string",
            "required": false,
            "name": "geo_circle",
            "in": "query",
            "description": "geo_circle defined by lat,lon,radius in float"
          },
          {
            "type": "array",
            "required": false,
            "name": "us_partner_company_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of upstream partner company ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "ds_partner_company_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of downstream partner company ids",
            "collectionFormat": "multi"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "show_incomplete_info_order_step",
            "in": "query",
            "description": "show incomplete info order_step - absence means ignore `incomplete info` trait"
          },
          {
            "type": "string",
            "required": false,
            "name": "from_completion_time",
            "in": "query",
            "description": "from completion time"
          },
          {
            "type": "string",
            "required": false,
            "name": "to_completion_time",
            "in": "query",
            "description": "to completion time"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "show_reported_tasks",
            "in": "query",
            "description": "show reported task - absence means ignore `reported` trait"
          },
          {
            "type": "array",
            "required": false,
            "name": "related_task_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array related task ids",
            "collectionFormat": "multi"
          },
          {
            "type": "array",
            "required": false,
            "name": "worker_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of worker ids",
            "collectionFormat": "multi"
          },
          {
            "type": "integer",
            "required": false,
            "name": "id_after",
            "in": "query",
            "description": "after id"
          },
          {
            "type": "integer",
            "required": false,
            "name": "id_before",
            "in": "query",
            "description": "before id"
          },
          {
            "type": "integer",
            "required": false,
            "name": "order_id_before",
            "in": "query",
            "description": "before order id"
          },
          {
            "type": "integer",
            "required": false,
            "name": "step_sequence_after",
            "in": "query",
            "description": "after sequence step"
          },
          {
            "type": "string",
            "required": false,
            "name": "custom_fields1",
            "in": "query",
            "description": "external customer id"
          },
          {
            "type": "string",
            "required": false,
            "name": "custom_fields3",
            "in": "query",
            "description": "external customer id 3"
          },
          {
            "type": "string",
            "required": false,
            "name": "parent_item_tracking_number",
            "in": "query",
            "description": "Tracking number of pallet or container"
          },
          {
            "type": "array",
            "required": false,
            "name": "region_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of region ids",
            "collectionFormat": "multi"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "include_transfer_properties",
            "in": "query",
            "description": "include info/properties on transfers - slower query, larger response"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "show_incomplete_info_order_step",
            "in": "query",
            "description": "show incomplete info order_step - absence means ignore `incomplete info` trait"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "show_reported_tasks",
            "in": "query",
            "description": "show reported task - absence means ignore `reported` trait"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "accepted",
            "in": "query",
            "description": "show accepted tasks"
          },
          {
            "x-example": "true / false",
            "type": "boolean",
            "required": false,
            "name": "broadcasted",
            "in": "query",
            "description": "show broadcasted tasks"
          },
          {
            "type": "array",
            "required": false,
            "name": "hub_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of hub ids",
            "collectionFormat": "multi"
          },
          {
            "x-example": "YOJ-Q1HWD3LBPT0",
            "type": "string",
            "required": false,
            "name": "order_item_tracking_number",
            "in": "query",
            "description": "order item tracking number"
          },
          {
            "x-example": "O-YITPNVRHDNHN",
            "type": "string",
            "required": false,
            "name": "order_number",
            "in": "query",
            "description": "order number"
          },
          {
            "type": "integer",
            "required": true,
            "name": "limit",
            "in": "query",
            "description": "limit, max is 500",
            "default": 30
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PowerController.tasks",
        "description": ""
      }
    },
    "/api/v3/dispatcher/workers/batches": {
      "post": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "this endpoint is used by a dispatcher to create multiple workers",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "file",
            "required": false,
            "name": "file",
            "in": "formData",
            "description": "The file to upload"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.bulk_create",
        "description": "",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/api/v3/public/labels/order_item/{tracking_number}": {
      "get": {
        "tags": [
          "[Public] Docs"
        ],
        "summary": "This endpoint generates a Label from a tracking number",
        "responses": {
          "200": {
            "description": "Label to be downloaded."
          },
          "422": {
            "description": {
              "message": "Label creation failed!"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "tracking_number",
            "in": "query",
            "description": "Tracking number"
          },
          {
            "type": "string",
            "required": false,
            "name": "format",
            "items": {
              "type": "string",
              "enum": [
                "html",
                "pdf"
              ]
            },
            "in": "query",
            "description": "Output format"
          }
        ],
        "operationId": "ApiWeb.V3.Public.LabelController.generate_from_tracking_number",
        "description": ""
      }
    },
    "/api/v3/dispatcher/sub_task_rules/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] SubTaskRule"
        ],
        "summary": "This endpoint updates a SubTaskRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateRuleResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Sub Task Rule ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateRuleRequest"
            },
            "required": false,
            "name": "sub_task_rule",
            "in": "body",
            "description": "Sub Task Rule information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SubTaskRuleController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] SubTaskRule"
        ],
        "summary": "This endpoint retrieves information about a SubTaskRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateRuleResponse"
            },
            "description": "Got sub task rule"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Sub Task Rule ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SubTaskRuleController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] SubTaskRule"
        ],
        "summary": "This endpoint marks a SubTaskRule as invalidated",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Sub Task Rule ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SubTaskRuleController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/network/hubs/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint updates a Hub",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HubResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Hub Id"
          },
          {
            "schema": {
              "$ref": "#/definitions/HubRequest"
            },
            "required": false,
            "name": "hub",
            "in": "body",
            "description": "Hub"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.HubController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint updates a Hub",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HubResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Hub Id"
          },
          {
            "schema": {
              "$ref": "#/definitions/HubRequest"
            },
            "required": false,
            "name": "hub",
            "in": "body",
            "description": "Hub"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.HubController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint retrieves information about a Hub",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HubResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Hub Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.HubController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint deletes a Hub",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HubResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Hub Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.HubController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/item_types": {
      "post": {
        "tags": [
          "[Dispatcher] ItemType"
        ],
        "summary": "This endpoint create a item type of current company of user",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ItemTypeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/CreateItemTypeRequest"
            },
            "required": false,
            "name": "item_type",
            "in": "body",
            "description": "Item Type"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ItemTypeController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] ItemType"
        ],
        "summary": "This endpoint retrieves item types of current company of user; if no params page and page_size then return all items",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ItemTypesResponse"
            },
            "description": "Got a list of the company's item types"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": false,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": false,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          },
          {
            "type": "string",
            "required": false,
            "name": "q",
            "in": "query",
            "description": "search query"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ItemTypeController.index",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/ongoing_task_info": {
      "get": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint retrieves metadata of ongoing tasks",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaskMetaResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "x-example": "Singapore",
            "type": "string",
            "required": false,
            "name": "time_zone",
            "in": "query",
            "description": "timezone, if not specified, it will use the timezone in the company setting"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.ongoing_tasks_info",
        "description": ""
      }
    },
    "/api/v3/dispatcher/saved_filters/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Saved Filter"
        ],
        "summary": "This endpoint updates a Saved Filter",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/SavedFilterUpdateRequest"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Saved Filter update request"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SavedFilterController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Saved Filter"
        ],
        "summary": "This endpoint updates a Saved Filter",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/SavedFilterUpdateRequest"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Saved Filter update request"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SavedFilterController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Saved Filter"
        ],
        "summary": "This endpoint shows the Saved Filter details",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SavedFilterResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Saved Filter id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SavedFilterController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Saved Filter"
        ],
        "summary": "This endpoint deletes a Saved Filter",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SavedFilterResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Saved Filter Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SavedFilterController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/master_vehicle_types": {
      "get": {
        "tags": [
          "[Dispatcher] VehicleType"
        ],
        "summary": "This endpoint retrieves a list of master vehicle types",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherMasterVehicleTypesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.VehicleTypeController.routing_vehicle_profiles",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/subscriptions/{id}": {
      "delete": {
        "tags": [
          "[Dispatcher] Subscription"
        ],
        "summary": "This endpoint cancels a subscription for a company",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Subscription id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PaymentController.cancel_subscription",
        "description": ""
      }
    },
    "/api/v3/public/orders/get_service_hubs": {
      "get": {
        "tags": [
          "[Public] Order"
        ],
        "summary": "This endpoint retrieves a company's hubs that can service a location",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "company_slug",
            "in": "query",
            "description": "Company Slug"
          }
        ],
        "operationId": "ApiWeb.V3.Public.OrdersController.get_service_hubs",
        "description": ""
      }
    },
    "/api/v3/dispatcher/order_items/{id}/hierarchy": {
      "get": {
        "tags": [
          "[Dispatcher] OrderItem"
        ],
        "summary": "Fetch item hierarchy based on consolidation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OrderItemsHierarchyResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Order Item id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderItemController.hierarchy",
        "description": ""
      }
    },
    "/api/v3/public/password/edit": {
      "get": {
        "tags": [
          "[Public] Password"
        ],
        "summary": "Validate if reset password token is still valid",
        "responses": {
          "200": {
            "description": {
              "message": "ok"
            }
          },
          "422": {
            "description": {
              "message": "Invalid token!"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "reset_password_token",
            "in": "query",
            "description": "Reset password token"
          }
        ],
        "operationId": "ApiWeb.V3.Public.PasswordController.edit",
        "description": ""
      }
    },
    "/api/v3/dispatcher/users/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] User"
        ],
        "summary": "This endpoint updates a Dispatcher's information",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateUserResponse"
            },
            "description": "Updated the company user"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Dispatcher ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateUserRequest"
            },
            "required": false,
            "name": "user",
            "in": "body",
            "description": "Company user information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.UserController.update",
        "description": ""
      }
    },
    "/api/v3/dispatcher/operations/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Operation"
        ],
        "summary": "This endpoint updates an operation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Operation id"
          },
          {
            "schema": {
              "$ref": "#/definitions/CreateOperationRequest"
            },
            "required": false,
            "name": "operation",
            "in": "body",
            "description": "Operation"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OperationController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Operation"
        ],
        "summary": "This endpoint updates an operation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Operation id"
          },
          {
            "schema": {
              "$ref": "#/definitions/CreateOperationRequest"
            },
            "required": false,
            "name": "operation",
            "in": "body",
            "description": "Operation"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OperationController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Operation"
        ],
        "summary": "This endpoint returns details for an operation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Operation id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OperationController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Operation"
        ],
        "summary": "This endpoint soft deletes an operation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Operation id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OperationController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/tasks/bulk_complete": {
      "put": {
        "tags": [
          "[Dispatcher] Task"
        ],
        "summary": "this endpoint is used by a dispatcher to complete multiple tasks",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/BulkTaskCompletionRequestByDispatcher"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Task Completion information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskController.bulk_complete",
        "description": ""
      }
    },
    "/api/v3/enterprise/user/{id}/update": {
      "put": {
        "tags": [
          "[Enterprise] User"
        ],
        "summary": "This endpoint updates an enterprise user (optionally with dispatcher in companies)",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EnterpriseUserResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/CreateEnterpriseUserRequest"
            },
            "required": false,
            "name": "enterprise_user",
            "in": "body",
            "description": "Enterprise user information"
          }
        ],
        "operationId": "ApiWeb.V3.Enterprise.EnterpriseUserController.update_enterprise_user",
        "description": ""
      }
    },
    "/api/v3/dispatcher/broadcasts": {
      "post": {
        "tags": [
          "[Dispatcher] Broadcast"
        ],
        "summary": "This endpoint creates a Broadcast for a TaskGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BroadcastResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/BroadcastRequest"
            },
            "required": false,
            "name": "broadcast",
            "in": "body",
            "description": "Broadcast"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.BroadcastController.create",
        "description": ""
      }
    },
    "/api/v3/dispatcher/orders/{number}/cancel": {
      "put": {
        "tags": [
          "[Dispatcher] Order"
        ],
        "summary": "This endpoint cancels an Order",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 12345,
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Order number"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderController.cancel",
        "description": ""
      }
    },
    "/api/v3/worker/store_device_token": {
      "put": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint stores a Worker's device token",
        "responses": {
          "200": {
            "description": "Stored device token successfully"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": "string",
            "required": true,
            "name": "device_token",
            "in": "body",
            "description": "Device token"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.UserController.store_device_token",
        "description": ""
      }
    },
    "/api/v3/dispatcher/senders/delete_multi": {
      "post": {
        "tags": [
          "[Dispatcher] Sender"
        ],
        "summary": "This endpoint bulk deletes Senders",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": [
              1,
              2,
              3
            ],
            "schema": "array",
            "required": true,
            "name": "sender_ids",
            "in": "body",
            "description": "Sender ids"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SenderController.delete_multiple",
        "description": ""
      }
    },
    "/api/v3/dispatcher/tasks/allocate": {
      "post": {
        "tags": [
          "[Dispatcher] Task"
        ],
        "summary": "This endpoint assigns/reassigns a tasks from planner to a recommended worker",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/AllocationRequest"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Allocation request"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.AllocationController.allocate",
        "description": ""
      }
    },
    "/api/v3/dispatcher/driver_manifest": {
      "get": {
        "tags": [
          "[Dispatcher] Driver Manifest Jwt"
        ],
        "summary": "this endpoint generate driver manifest url by issuing a jwt token for dashboard and report that expires in one hour",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": false,
            "name": "worker_id",
            "in": "query",
            "description": "Worker ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.DashboardController.generate_driver_manifest_url",
        "description": ""
      }
    },
    "/api/v3/dispatcher/network/hubs": {
      "post": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint creates a new Hub",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HubResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/HubRequest"
            },
            "required": false,
            "name": "hub",
            "in": "body",
            "description": "Hub"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.HubController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint retrieves a list of Hubs belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/HubsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.HubController.index",
        "description": ""
      }
    },
    "/api/v3/public/pods/order/{order_number}": {
      "get": {
        "tags": [
          "[Public] Docs"
        ],
        "summary": "This endpoint generates a Pod from an Order number",
        "responses": {
          "200": {
            "description": "Pod to be downloaded."
          },
          "422": {
            "description": {
              "message": "Pod creation failed!"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "order_number",
            "in": "query",
            "description": "Order number"
          },
          {
            "type": "string",
            "required": false,
            "name": "format",
            "items": {
              "type": "string",
              "enum": [
                "html",
                "pdf"
              ]
            },
            "in": "query",
            "description": "Output format"
          }
        ],
        "operationId": "ApiWeb.V3.Public.PodController.generate_from_order_number",
        "description": ""
      }
    },
    "/api/v3/dispatcher/sub_task_rules": {
      "post": {
        "tags": [
          "[Dispatcher] SubTaskRule"
        ],
        "summary": "This endpoint creates a new SubTaskRule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateRuleResponse"
            },
            "description": "Created sub task rule"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateRuleRequest"
            },
            "required": false,
            "name": "sub_task_rule",
            "in": "body",
            "description": "Sub Task Rule information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SubTaskRuleController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] SubTaskRule"
        ],
        "summary": "This endpoint retrieves a list of SubTaskRules",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherRulesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SubTaskRuleController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/broadcasts/{id}": {
      "post": {
        "tags": [
          "[Dispatcher] Broadcast"
        ],
        "summary": "This endpoint expires a Broadcast",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Broadcast ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.BroadcastController.expire_broadcast",
        "description": ""
      }
    },
    "/api/v3/dispatcher/task_groups/assign_multiple": {
      "put": {
        "tags": [
          "[Dispatcher] TaskGroup"
        ],
        "summary": "This endpoint assigns multiple TaskGroups to a Worker",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "array",
            "required": false,
            "name": "ids",
            "in": "query",
            "description": "array of task_group ids"
          },
          {
            "type": "integer",
            "required": false,
            "name": "worker_id",
            "in": "query",
            "description": "Worker ID"
          },
          {
            "type": "string",
            "required": false,
            "name": "price_currency",
            "in": "query",
            "description": "Price's currency"
          },
          {
            "type": "number",
            "required": false,
            "name": "price_amount",
            "in": "query",
            "description": "Price's amount"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskGroupController.assign_multiple",
        "description": ""
      }
    },
    "/api/v3/public/jwt/auth_token": {
      "post": {
        "tags": [
          "[Public] Jwt"
        ],
        "summary": "this endpoint issues a new jwt token using a refresh token",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RefreshTokenResponse"
            },
            "description": "returns a newly generated JWTs"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": "string",
            "required": false,
            "name": "refresh_token",
            "in": "body",
            "description": "Refresh token"
          }
        ],
        "operationId": "ApiWeb.V3.Public.JwtController.refresh_token",
        "description": ""
      }
    },
    "/api/v3/dispatcher/chat/worker_channel/{worker_id}": {
      "get": {
        "tags": [
          "[Dispatcher] Chat"
        ],
        "summary": "This endpoint returns list of worker channels",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherChatMessagesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "worker_id",
            "in": "path",
            "description": "Worker ID"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ChatController.worker_channel",
        "description": ""
      }
    },
    "/api/v3/public/track_item/{number}": {
      "get": {
        "tags": [
          "[Public] Order"
        ],
        "summary": "This endpoint retrieves tracking information for an Order Item",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TrackOrderItemResponse"
            },
            "description": "Got tracking data"
          }
        },
        "parameters": [
          {
            "x-example": "",
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Tracking number"
          }
        ],
        "operationId": "ApiWeb.V3.ApiController.track_item",
        "description": ""
      }
    },
    "/api/v3/dispatcher/rates/metadata": {
      "get": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint retrieves metadata for setting up rates",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RatesController.metadata",
        "description": ""
      }
    },
    "/api/v3/dispatcher/order_items/{order_item_id}/sub_tasks": {
      "get": {
        "tags": [
          "[Dispatcher] SubTask"
        ],
        "summary": "This endpoint retrieves a list of SubTasks for an OrderItem",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherSubTasksResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "order_item_id",
            "in": "path",
            "description": "Order Item ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SubTaskController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/service_types": {
      "post": {
        "tags": [
          "[Dispatcher] Service Type"
        ],
        "summary": "This endpoint creates a service type",
        "responses": {
          "200": {
            "description": {
              "$ref": "#/definitions/ServiceTypeResponse"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateServiceTypeRequest"
            },
            "required": false,
            "name": "service_type",
            "in": "body",
            "description": "Service type information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ServiceTypeController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Company"
        ],
        "summary": "This endpoint retrieves service types of a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyServiceTypesResponse"
            },
            "description": "Got a complete list of the company's service types"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.CompanyController.service_types",
        "description": ""
      }
    },
    "/api/v3/dispatcher/order_items/{id}/update_multi": {
      "put": {
        "tags": [
          "[Dispatcher] OrderItem"
        ],
        "summary": "This endpoint is used by a Dispatcher to update an OrderItem with multi leg",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OrderItemsShowResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Order Item id"
          },
          {
            "schema": {
              "$ref": "#/definitions/OrderItemsUpdateMultiRequest"
            },
            "required": false,
            "name": "order_item",
            "in": "body",
            "description": "Order Item information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderItemController.update_multi_leg",
        "description": ""
      }
    },
    "/api/v3/dispatcher/route_schedules/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Route Schedules"
        ],
        "summary": "This endpoint updates a route schedule and its associated points",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherRouteScheduleResponse"
            },
            "description": ""
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Route schedule id"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherRouteScheduleRequest"
            },
            "required": false,
            "name": "route_schedule",
            "in": "body",
            "description": "Route schedule information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.RouteScheduleController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Route Schedules"
        ],
        "summary": "This endpoint updates a route schedule and its associated points",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherRouteScheduleResponse"
            },
            "description": ""
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Route schedule id"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherRouteScheduleRequest"
            },
            "required": false,
            "name": "route_schedule",
            "in": "body",
            "description": "Route schedule information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.RouteScheduleController.update",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Route Schedules"
        ],
        "summary": "This endpoint deletes a route schedule and its associated points",
        "responses": {
          "200": {
            "description": "Route schedule has been deleted"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Route schedule id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.RouteScheduleController.delete",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/validate_completion": {
      "get": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint is used by a Worker to check multiple Tasks whether they are ready for completion",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BulkTasksValidateCompletionResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": [
              1,
              2
            ],
            "type": "array",
            "required": true,
            "name": "task_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of Task IDs",
            "collectionFormat": "multi"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.validate_completion",
        "description": ""
      }
    },
    "/api/v3/dispatcher/batches": {
      "post": {
        "tags": [
          "[Dispatcher] Batch"
        ],
        "summary": "This endpoint is used by a Dispatcher to upload a batch file",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "file",
            "required": false,
            "name": "file",
            "in": "formData",
            "description": "The file to upload"
          },
          {
            "type": "integer",
            "required": false,
            "name": "uploader_id",
            "in": "query",
            "description": "Uploader Id"
          },
          {
            "type": "string",
            "required": false,
            "name": "external_id",
            "in": "query",
            "description": "External Id"
          },
          {
            "type": "string",
            "required": false,
            "name": "container_no",
            "in": "query",
            "description": "Container Number"
          },
          {
            "type": "string",
            "required": false,
            "name": "type",
            "in": "query",
            "description": "Type",
            "default": "point_to_point"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.BatchController.create",
        "description": "",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/api/v3/dispatcher/trips/{id}/cancel": {
      "post": {
        "tags": [
          "[Dispatcher] Trip"
        ],
        "summary": "This endpoint invalidate the trip",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Trip id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TripController.cancel",
        "description": ""
      }
    },
    "/api/v3/dispatcher/organisations/{organisation_id}/senders/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] CorporateSender"
        ],
        "summary": "This endpoint updates a Corporate User",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateCorporateSenderResponse"
            },
            "description": "Updated the corporate user"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "organisation_id",
            "in": "path",
            "description": "Organisation ID"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Dispatcher ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateCorporateSenderRequest"
            },
            "required": false,
            "name": "corporate_user",
            "in": "body",
            "description": "Corporate User information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrganisationController.update_corporate_sender",
        "description": ""
      }
    },
    "/api/v3/public/payments/stripe_key": {
      "get": {
        "tags": [
          "[Public] Payment"
        ],
        "summary": "This endpoint retrieves the Stripe publishable key",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          }
        ],
        "operationId": "ApiWeb.V3.Public.PaymentsController.stripe_key",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/payment/card": {
      "post": {
        "tags": [
          "[Dispatcher] Subscription"
        ],
        "summary": "This endpoint adds a card/payment source for a company",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": "token_1234",
            "schema": "string",
            "required": true,
            "name": "card_token",
            "in": "body",
            "description": "Plan name"
          },
          {
            "x-example": "stripe",
            "schema": "string",
            "required": true,
            "name": "provider_type",
            "in": "body",
            "description": "Payment provider type"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PaymentController.add_card",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Subscription"
        ],
        "summary": "This endpoint retrieves the primary card for a company",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": "stripe",
            "schema": "string",
            "required": true,
            "name": "provider_type",
            "in": "body",
            "description": "Payment provider type"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PaymentController.get_card",
        "description": ""
      }
    },
    "/api/v3/dispatcher/tasks/batches/{id}/status": {
      "get": {
        "tags": [
          "[Dispatcher] Task"
        ],
        "summary": "This endpoint checks the status of all Tasks in a Batch",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BulkCompletionStatus"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Batch ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskController.batch_complete_status",
        "description": ""
      }
    },
    "/api/v3/worker/update": {
      "put": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint updates a Worker's information",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkerResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": "string",
            "required": false,
            "name": "status",
            "in": "body",
            "description": "Worker's status"
          },
          {
            "schema": "file",
            "required": false,
            "name": "avatar",
            "in": "body",
            "description": "Worker's avatar"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.UserController.update",
        "description": ""
      }
    },
    "/api/v3/public/task_type_mappings": {
      "get": {
        "tags": [
          "[Public]"
        ],
        "summary": "This endpoint retrieves the task type mappings for a company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListTaskTypeMappingsResponse"
            },
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "company_slug",
            "in": "query",
            "description": "Company Slug"
          }
        ],
        "operationId": "ApiWeb.V3.ApiController.get_task_type_mappings",
        "description": ""
      }
    },
    "/api/v3/dispatcher/search/dispatcher": {
      "get": {
        "tags": [
          "[Dispatcher] Search"
        ],
        "summary": "This endpoint is used to search for a Sender Admins",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 25
          },
          {
            "type": "string",
            "required": true,
            "name": "q",
            "in": "query",
            "description": "search query"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SearchController.dispatcher",
        "description": ""
      }
    },
    "/api/v3/public/pods/order_item/{tracking_number}": {
      "get": {
        "tags": [
          "[Public] Docs"
        ],
        "summary": "This endpoint generates a Pod from a tracking number",
        "responses": {
          "200": {
            "description": "Pod to be downloaded."
          },
          "422": {
            "description": {
              "message": "Pod creation failed!"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "tracking_number",
            "in": "query",
            "description": "Tracking number"
          },
          {
            "type": "string",
            "required": false,
            "name": "format",
            "items": {
              "type": "string",
              "enum": [
                "html",
                "pdf",
                "zip"
              ]
            },
            "in": "query",
            "description": "Output format"
          }
        ],
        "operationId": "ApiWeb.V3.Public.PodController.generate_from_tracking_number",
        "description": ""
      }
    },
    "/api/v3/public/labels/order/{order_number}": {
      "get": {
        "tags": [
          "[Public] Docs"
        ],
        "summary": "This endpoint generates a Label from an Order number",
        "responses": {
          "200": {
            "description": "Label to be downloaded."
          },
          "422": {
            "description": {
              "message": "Label creation failed!"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "order_number",
            "in": "query",
            "description": "Order number"
          },
          {
            "type": "string",
            "required": false,
            "name": "format",
            "items": {
              "type": "string",
              "enum": [
                "html",
                "pdf"
              ]
            },
            "in": "query",
            "description": "Output format"
          }
        ],
        "operationId": "ApiWeb.V3.Public.LabelController.generate_from_order_number",
        "description": ""
      }
    },
    "/api/v3/dispatcher/chat/send_message": {
      "post": {
        "tags": [
          "[Dispatcher] Chat"
        ],
        "summary": "Dispatcher sends message",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherChatMessageResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": "string",
            "required": false,
            "name": "message",
            "in": "body",
            "description": "Text Message"
          },
          {
            "schema": "file",
            "required": false,
            "name": "attachment",
            "in": "body",
            "description": "Attachment"
          },
          {
            "schema": "string",
            "required": false,
            "name": "channel_id",
            "in": "body",
            "description": "Channel id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ChatController.send_message",
        "description": ""
      }
    },
    "/api/v3/dispatcher/workers/{id}/tasks/assigned": {
      "get": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "This endpoint retrieves a list of a Worker's assigned Tasks",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker ID"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.assigned",
        "description": ""
      }
    },
    "/api/v3/public/orders/company_info": {
      "get": {
        "tags": [
          "[Public] Order"
        ],
        "summary": "This endpoint retrieves information about a Company",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "company_slug",
            "in": "query",
            "description": "Company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Public.OrdersController.company_info",
        "description": ""
      }
    },
    "/api/v3/dispatcher/partner_transfer/sender/create_order": {
      "post": {
        "tags": [
          "[Dispatcher] Partner Transfer Order"
        ],
        "summary": "This endpoint is used to create a Transfer Order",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherPartnerTransferCreateResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherPartnerTransferCreate"
            },
            "required": false,
            "name": "transfer_order",
            "in": "body",
            "description": "Transfer Order Information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerTransferController.create_transfer",
        "description": ""
      }
    },
    "/api/v3/enterprise/user": {
      "post": {
        "tags": [
          "[Enterprise] User"
        ],
        "summary": "This endpoint creates an enterprise user (optionally with dispatcher in companies)",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EnterpriseUserResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/CreateEnterpriseUserRequest"
            },
            "required": false,
            "name": "enterprise_user",
            "in": "body",
            "description": "Enterprise user information"
          }
        ],
        "operationId": "ApiWeb.V3.Enterprise.EnterpriseUserController.create_enterprise_user",
        "description": ""
      }
    },
    "/api/v3/dispatcher/dispatchers/create_multi": {
      "post": {
        "tags": [
          "[Dispatcher] User"
        ],
        "summary": "This endpoint creates many Dispatchers",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateMultipleUsersResponse"
            },
            "description": "OK"
          },
          "422": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateMultipleUsersErrorResponse"
            },
            "description": "Error"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateMultipleUsersRequest"
            },
            "required": false,
            "name": "dis",
            "in": "body",
            "description": "Bulk users information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.DispatcherController.create_multiple",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/assets": {
      "post": {
        "tags": [
          "[Dispatcher] Company"
        ],
        "summary": "This endpoint is used to upload branding assets for a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyUploadAssetsResponse"
            },
            "description": "Uploaded the company asset"
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "file",
            "required": true,
            "name": "file",
            "in": "formData",
            "description": "The file to upload."
          },
          {
            "type": "string",
            "required": true,
            "name": "file_type",
            "in": "formData",
            "description": "The file type"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.CompanyController.upload_assets",
        "description": "",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/api/v3/sender/route_schedules/search": {
      "get": {
        "tags": [
          "[Sender] Route Schedules"
        ],
        "summary": "This endpoint retrieves a list of route schedules based on search parameters",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SenderSearchRouteScheduleResponse"
            },
            "description": ""
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "address",
            "in": "query",
            "description": "address to be searched"
          },
          {
            "type": "string",
            "required": true,
            "name": "arrival_time",
            "in": "query",
            "description": "arrival datetime string (UTC)"
          },
          {
            "type": "string",
            "required": true,
            "name": "departure_time",
            "in": "query",
            "description": "departure datetime string (UTC)"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.RouteScheduleController.search",
        "description": ""
      }
    },
    "/api/v3/dispatcher/trips/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Trip"
        ],
        "summary": "This endpoint updates the trip details along with trip tasks",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TripResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Trip id"
          },
          {
            "schema": {
              "$ref": "#/definitions/TripCreateRequest"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Trip creation request"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TripController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Trip"
        ],
        "summary": "This endpoint updates the trip details along with trip tasks",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TripResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Trip id"
          },
          {
            "schema": {
              "$ref": "#/definitions/TripCreateRequest"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Trip creation request"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TripController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Trip"
        ],
        "summary": "This endpoint shows the trip details",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TripResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Trip id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TripController.show",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/settings": {
      "put": {
        "tags": [
          "[Dispatcher] Company"
        ],
        "summary": "This endpoint updates a Company's settings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyInfoResponse"
            },
            "description": "Updated the company setting"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/CompanyUpdateSettingsRequest"
            },
            "required": false,
            "name": "settings",
            "in": "body",
            "description": "Company settings object"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.CompanyController.update_settings",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/tags": {
      "get": {
        "tags": [
          "[Dispatcher] Tag"
        ],
        "summary": "This endpoint searchs tags belonging a company with the type",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherSearchTagResponse"
            },
            "description": "Got list of company vehicle"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "q",
            "in": "query",
            "description": "search query"
          },
          {
            "x-example": "vehicle",
            "type": "string",
            "required": false,
            "name": "type",
            "in": "query",
            "description": "type of tag"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TagController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/senders/create_multi": {
      "post": {
        "tags": [
          "[Dispatcher] Sender"
        ],
        "summary": "This endpoint creates many Senders",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateMultipleSendersResponse"
            },
            "description": "OK"
          },
          "422": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateMultipleSendersErrorResponse"
            },
            "description": "Error"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateMultipleSendersRequest"
            },
            "required": false,
            "name": "sender",
            "in": "body",
            "description": "Create multiple senders information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SenderController.create_multiple",
        "description": ""
      }
    },
    "/api/v3/dispatcher/vehicle_types2": {
      "post": {
        "tags": [
          "[Dispatcher] VehicleType"
        ],
        "summary": "This endpoint creates a vehicle type",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherVehicleTypeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateVehicleTypeRequest"
            },
            "required": false,
            "name": "vehicle_type",
            "in": "body",
            "description": "vehicle type info"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.VehicleTypeController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] VehicleType"
        ],
        "summary": "This endpoint retrieves a list of vehicle_types",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherVehicleTypesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "include_worker_count",
            "in": "query",
            "description": "is include worker count"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "include_vehicle_count",
            "in": "query",
            "description": "is include vehicle count"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.VehicleTypeController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/partner_transfer/sender/withdraw_order/{order_number}": {
      "put": {
        "tags": [
          "[Dispatcher] Partner Transfer Order"
        ],
        "summary": "This endpoint is used to cancel a pending Order transfer",
        "responses": {
          "200": {
            "description": "Transfer Order canceled successfully"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "order_number",
            "in": "path",
            "description": "Order number"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerTransferController.withdraw_transfer",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/settings/task_exception_other_reason": {
      "put": {
        "tags": [
          "[Dispatcher] Company"
        ],
        "summary": "This endpoint updates a Company's task exception other reason settings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyInfoResponse"
            },
            "description": "Updated the company setting"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/CompanyUpdateSettingTaskExceptionOtherReasonRequest"
            },
            "required": false,
            "name": "settings",
            "in": "body",
            "description": "Company task exception other reason settings object"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.CompanyController.update_task_exception_reason_settings",
        "description": ""
      }
    },
    "/api/v3/dispatcher/batches/check_status": {
      "get": {
        "tags": [
          "[Dispatcher] Batch"
        ],
        "summary": "This endpoint checks the status of a Batch",
        "responses": {},
        "parameters": [
          {
            "type": "integer",
            "required": false,
            "name": "batch_id",
            "in": "query",
            "description": "Batch Id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.BatchController.check_status",
        "description": ""
      }
    },
    "/api/v3/public/rates/rate_charge_types": {
      "get": {
        "tags": [
          "RateChargeType"
        ],
        "summary": "This endpoint retrieves a list of RateChargeTypes belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RateChargeTypesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Public.Rates.RateChargeTypeController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/rates/rate_charge_types": {
      "post": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint bulk creates RateChargeTypes",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/RateChargeTypesRequest"
            },
            "required": false,
            "name": "rate_charge_type",
            "in": "body",
            "description": "RateChargeTypes"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RateChargeTypeController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint retrieves a list of RateChargeTypes belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RateChargeTypesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RateChargeTypeController.index",
        "description": ""
      }
    },
    "/api/v3/worker/stops/{id}": {
      "put": {
        "tags": [
          "[Worker] Stop"
        ],
        "summary": "This endpoint updates a Stop",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TasksResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Stop ID"
          },
          {
            "schema": "string",
            "required": false,
            "name": "arrival_time",
            "in": "body",
            "description": "Arrival time"
          },
          {
            "schema": "string",
            "required": false,
            "name": "departure_time",
            "in": "body",
            "description": "Departure time"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.StopController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Worker] Stop"
        ],
        "summary": "This endpoint retrieves a list of a Worker's ongoing Tasks by Stop",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/StopResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Stop ID"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.StopController.show",
        "description": ""
      }
    },
    "/api/v3/public/orders/price": {
      "post": {
        "tags": [
          "[Public] Order"
        ],
        "summary": "This endpoint obtains a price quote for an Order",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GetPricesResponse"
            },
            "description": "Get Prices Response"
          },
          "500": {
            "description": {}
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GetPricesRequest"
            },
            "required": true,
            "name": "order",
            "in": "body",
            "description": "Order details"
          }
        ],
        "operationId": "ApiWeb.V3.Public.OrdersController.get_prices_for_single_item",
        "description": "",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/v3/public/orders/validate": {
      "post": {
        "tags": [
          "[Public] Order"
        ],
        "summary": "This endpoint is used in public to check order data whether they are valid or not ",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ValidateOrderResponse"
            },
            "description": {
              "data": {}
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/ValidateOrderRequest"
            },
            "required": false,
            "name": "order",
            "in": "body",
            "description": "Order information"
          }
        ],
        "operationId": "ApiWeb.V3.Public.OrdersController.validate_order",
        "description": ""
      }
    },
    "/api/v3/dispatcher/manifests/worker/{worker_id}": {
      "get": {
        "tags": [
          "[Dispatcher] Docs"
        ],
        "summary": "This endpoint generates a Manifest for a Worker",
        "responses": {
          "200": {
            "description": "Worker manifest to be downloaded."
          },
          "422": {
            "description": {
              "message": "Worker manifest creation failed!"
            }
          }
        },
        "parameters": [
          {
            "type": "integer",
            "required": false,
            "name": "worker_id",
            "in": "query",
            "description": "Worker ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ManifestController.generate_worker_manifest",
        "description": ""
      }
    },
    "/api/v3/dispatcher/batches/batched": {
      "post": {
        "tags": [
          "[Dispatcher] Batched batch single sender"
        ],
        "summary": "This endpoint is used by a Dispatcher to upload a batch (list) of batch upload files by a single sender",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "file",
            "required": false,
            "name": "files[file[n]]",
            "in": "formData",
            "description": "The list of files to upload (array)"
          },
          {
            "type": "integer",
            "required": false,
            "name": "data[uploader_id[n]]",
            "in": "query",
            "description": "Uploader ID for corresponding batch file. Ensure even indexing."
          },
          {
            "type": "string",
            "required": false,
            "name": "data[external_id[n]]",
            "in": "query",
            "description": "External ID for corresponding batch file. Ensure even indexing."
          },
          {
            "type": "string",
            "required": false,
            "name": "data[container_no[n]]",
            "in": "query",
            "description": "Container Number for corresponding batch file. Ensure even indexing."
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.BatchController.create_batched",
        "description": "",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/api/v3/dispatcher/partners/{cip}/send_invite": {
      "put": {
        "tags": [
          "[Dispatcher] Partner"
        ],
        "summary": "This endpoint is used to send a Partner invite",
        "responses": {
          "200": {
            "description": "Partnership invite sent successfully"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "cip",
            "in": "path",
            "description": "Partner CIP"
          },
          {
            "schema": "boolean",
            "required": true,
            "name": "request_view_activities",
            "in": "body",
            "description": "Ask for downstream partner to share status (control tower)"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerController.send_invite",
        "description": ""
      }
    },
    "/api/v3/worker/companies": {
      "get": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint retrieves a list of Companies that a phone number is registered as a Worker in",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompaniesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.InfoController.companies",
        "description": ""
      }
    },
    "/api/v3/worker/chat/send_message": {
      "post": {
        "tags": [
          "[Worker] Chat"
        ],
        "summary": "This endpoint returns update worker channel data",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkerChatMessageResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": "string",
            "required": false,
            "name": "message",
            "in": "body",
            "description": "Text Message"
          },
          {
            "schema": "file",
            "required": false,
            "name": "attachment",
            "in": "body",
            "description": "Attachment"
          },
          {
            "x-example": "2018-10-23T02:22:45.962654Z",
            "schema": "string",
            "required": false,
            "name": "created_at",
            "in": "body",
            "description": "Created time"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.ChatController.send_message",
        "description": ""
      }
    },
    "/api/v3/dispatcher/task_groups/{id}/step_items/{step_id}": {
      "get": {
        "tags": [
          "[Dispatcher] TaskGroup"
        ],
        "summary": "This endpoint retrieves detailed information for Items in a TaskGroup",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task Group ID"
          },
          {
            "type": "integer",
            "required": true,
            "name": "step_id",
            "in": "path",
            "description": "Step ID"
          },
          {
            "type": "string",
            "required": true,
            "name": "type",
            "in": "query",
            "description": "Pickup/Dropoff"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskGroupController.step_items",
        "description": ""
      }
    },
    "/api/v3/dispatcher/orders/{number}": {
      "put": {
        "tags": [
          "[Dispatcher] Order"
        ],
        "summary": "This endpoint is used by a Dispatcher to update an Order",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateOrderResponse"
            },
            "description": "Create order response success"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 12345,
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Order number"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateOrderRequest"
            },
            "required": false,
            "name": "order",
            "in": "body",
            "description": "Order information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Order"
        ],
        "summary": "This endpoint retrieves information about an Order",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherOrderResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Order Number"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderController.show",
        "description": ""
      }
    },
    "/api/v3/dispatcher/service_time_conditions": {
      "post": {
        "tags": [
          "[Dispatcher] Service Time Condition"
        ],
        "summary": "This endpoint creates a new Service Time Condition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateSenderResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateSenderRequest"
            },
            "required": false,
            "name": "sender",
            "in": "body",
            "description": "Sender information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ServiceTimeConditionController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Service Time Condition"
        ],
        "summary": "This endpoint retrieves a list of Service times conditions",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherSendersResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ServiceTimeConditionController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/search/order": {
      "get": {
        "tags": [
          "[Dispatcher] Search"
        ],
        "summary": "This endpoint is used to search for an Order",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 25
          },
          {
            "type": "string",
            "required": true,
            "name": "q",
            "in": "query",
            "description": "search query"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SearchController.order",
        "description": ""
      }
    },
    "/api/v3/dispatcher/roles": {
      "post": {
        "tags": [
          "[Dispatcher] Role"
        ],
        "summary": "This endpoint creates a new Role",
        "responses": {
          "200": {
            "description": {
              "$ref": "#/definitions/DispatcherCreateRoleResponse"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateRoleRequest"
            },
            "required": false,
            "name": "role",
            "in": "body",
            "description": "Role information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.RoleController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Role"
        ],
        "summary": "This endpoint retrieves a list of Roles",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherIndexRoleResponse"
            },
            "description": "Got list of roles"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.RoleController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/batches/{id}/continue": {
      "put": {
        "tags": [
          "[Dispatcher] Batch"
        ],
        "summary": "This endpoint continues submiting a Batch regardless of being given missing info",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BatchContinueResponse"
            },
            "description": "Batch in progress"
          }
        },
        "parameters": [
          {
            "type": "integer",
            "required": false,
            "name": "id",
            "in": "query",
            "description": "Batch Id"
          },
          {
            "type": "file",
            "required": false,
            "name": "file",
            "in": "formData",
            "description": "The file to upload"
          },
          {
            "type": "integer",
            "required": false,
            "name": "external_id",
            "in": "query",
            "description": "[optional] External id"
          },
          {
            "type": "integer",
            "required": false,
            "name": "container_no",
            "in": "query",
            "description": "[optional] Container no"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.BatchController.continue",
        "description": ""
      }
    },
    "/api/v3/sender/batches": {
      "post": {
        "tags": [
          "[Sender] Batch"
        ],
        "summary": "This endpoint is used by a Sender to upload a batch file",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "type": "file",
            "required": false,
            "name": "file",
            "in": "formData",
            "description": "The file to upload"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.BatchController.create",
        "description": "",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/api/v3/dispatcher/task_groups/assigned": {
      "get": {
        "tags": [
          "[Dispatcher] TaskGroup"
        ],
        "summary": "This endpoint retrieves a list of assigned TaskGroups",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AssignedTaskGroupsIndexResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "status",
            "in": "query",
            "description": "an array of status for task group, ie: [assigned, accepted, completed, cancelled], defaults to [assigned]"
          },
          {
            "type": "string",
            "required": false,
            "name": "worker_type",
            "in": "query",
            "description": "Worker contract type (employee/freelancer)"
          },
          {
            "type": "integer",
            "required": false,
            "name": "current_vehicle_type_id",
            "in": "query",
            "description": "Worker vehicle type id"
          },
          {
            "type": "string",
            "required": false,
            "name": "task_group_ids",
            "in": "query",
            "description": "an array of task_group_id for task group"
          },
          {
            "type": "string",
            "required": false,
            "name": "from",
            "in": "query",
            "description": "from datetime in ISO8601 format"
          },
          {
            "type": "string",
            "required": false,
            "name": "to",
            "in": "query",
            "description": "to datetime in ISO8601 format"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 25
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskGroupController.assigned",
        "description": ""
      }
    },
    "/api/v3/worker/sub_tasks": {
      "put": {
        "tags": [
          "[Worker] SubTask"
        ],
        "summary": "This endpoint completes a SubTask, this api behave the same when Put and Post",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkerSubTaskResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/WorkerSubTaskRequest"
            },
            "required": false,
            "name": "sub_task",
            "in": "body",
            "description": "SubTask completed"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.SubTaskController.update",
        "description": ""
      },
      "post": {
        "tags": [
          "[Worker] SubTask"
        ],
        "summary": "This endpoint completes a SubTask, this api behave the same when Put and Post",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkerSubTaskResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/WorkerSubTaskRequest"
            },
            "required": false,
            "name": "sub_task",
            "in": "body",
            "description": "Subtask completed"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.SubTaskController.create",
        "description": ""
      }
    },
    "/api/v3/auth/signin": {
      "post": {
        "tags": [
          "[Auth]"
        ],
        "summary": "This endpoint allows a registered user to log in",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/AuthResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "company_slug",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/SigninRequest"
            },
            "required": false,
            "name": "hub",
            "in": "body",
            "description": "Account info"
          }
        ],
        "operationId": "ApiWeb.V3.AuthController.signin",
        "description": ""
      }
    },
    "/api/v3/worker/task_groups/{id}/reject": {
      "put": {
        "tags": [
          "[Worker] TaskGroup"
        ],
        "summary": "This endpoint is used by a Worker to reject an assigned TaskGroup",
        "responses": {
          "200": {
            "description": "Reject a task group successfully"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task group ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/AcceptRejectLocation"
            },
            "required": false,
            "name": "location",
            "in": "body",
            "description": "Reject location"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskGroupController.reject",
        "description": ""
      }
    },
    "/api/v3/enterprise/user/{id}/remove_from_companies": {
      "post": {
        "tags": [
          "[Enterprise] User"
        ],
        "summary": "This endpoint removes an enterprise user from companies (as a dispatcher)",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Enterprise user id"
          },
          {
            "x-example": [
              "yojee",
              "sila"
            ],
            "schema": "array",
            "required": true,
            "name": "companies",
            "in": "body",
            "description": "List of company slugs"
          }
        ],
        "operationId": "ApiWeb.V3.Enterprise.EnterpriseUserController.remove_enterprise_user_from_companies",
        "description": ""
      }
    },
    "/api/v3/worker/vehicles/{id}/select": {
      "put": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint is used by a Worker to select a Vehicle",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Vehicle ID"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.VehicleController.select",
        "description": ""
      }
    },
    "/api/v3/dispatcher/search/order_item": {
      "get": {
        "tags": [
          "[Dispatcher] Search"
        ],
        "summary": "This endpoint is used to search for an OrderItem",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 25
          },
          {
            "type": "string",
            "required": true,
            "name": "q",
            "in": "query",
            "description": "search query"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SearchController.order_item",
        "description": ""
      }
    },
    "/api/v3/dispatcher/chat/channel/{channel_id}": {
      "get": {
        "tags": [
          "[Dispatcher] Chat"
        ],
        "summary": "This endpoint return channel information",
        "responses": {},
        "parameters": [
          {
            "type": "integer",
            "required": true,
            "name": "channel_id",
            "in": "path",
            "description": "Channel ID"
          },
          {
            "type": "string",
            "required": false,
            "name": "last_message_date",
            "in": "query",
            "description": "Last Message date"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ChatController.channel",
        "description": ""
      }
    },
    "/api/v3/dispatcher/orders/cancel": {
      "post": {
        "tags": [
          "[Dispatcher] Order"
        ],
        "summary": "This endpoint cancels an Order by external id or order number",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCancelOrderRequest"
            },
            "required": false,
            "name": "cancel_order",
            "in": "body",
            "description": "cancel order"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderController.cancel_order",
        "description": ""
      }
    },
    "/api/v3/sender/address_items": {
      "put": {
        "tags": [
          "[Sender] Addressbook"
        ],
        "summary": "This endpoint updates address items of a sender",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UpdateAddressItemsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "schema": {
              "$ref": "#/definitions/UpdateAddressItemsRequest"
            },
            "required": false,
            "name": "address_items",
            "in": "body",
            "description": "Address Items"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.AddressItemController.update",
        "description": ""
      },
      "post": {
        "tags": [
          "[Sender] Addressbook"
        ],
        "summary": "This endpoint creates address items of a sender",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CreateAddressItemsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "schema": {
              "$ref": "#/definitions/CreateAddressItemsRequest"
            },
            "required": false,
            "name": "address_items",
            "in": "body",
            "description": "Address Items"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.AddressItemController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Sender] Addressbook"
        ],
        "summary": "This endpoint lists address items of a sender, supporting search",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IndexAddressItemsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "type": "array",
            "required": false,
            "name": "address_item_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of address item ids",
            "collectionFormat": "multi"
          },
          {
            "type": "string",
            "required": false,
            "name": "query",
            "in": "query",
            "description": "external_id/contact/address text query"
          },
          {
            "type": "string",
            "required": false,
            "name": "category",
            "in": "query",
            "description": "category of address item"
          },
          {
            "type": "array",
            "required": false,
            "name": "tags[]",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "array of tags",
            "collectionFormat": "multi"
          },
          {
            "type": "string",
            "required": false,
            "name": "include_global",
            "in": "query",
            "description": "include global address items",
            "default": false
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Sender.AddressItemController.index",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Sender] Addressbook"
        ],
        "summary": "This endpoint deletes address items of a sender",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeleteAddressItemsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "type": "array",
            "required": true,
            "name": "address_item_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of address_item_ids",
            "collectionFormat": "multi"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.AddressItemController.delete",
        "description": ""
      }
    },
    "/api/v3/sender/batches/get_orders": {
      "get": {
        "tags": [
          "[Dispatcher] Batch"
        ],
        "summary": "This endpoint retrieves detailed information about a Batch",
        "responses": {},
        "parameters": [
          {
            "type": "integer",
            "required": false,
            "name": "batch_id",
            "in": "query",
            "description": "Batch Id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.BatchController.get_orders",
        "description": ""
      }
    },
    "/api/v3/dispatcher/jwt/control_tower": {
      "post": {
        "tags": [
          "[Dispatcher] Jwt"
        ],
        "summary": "this endpoint issues a jwt token that expires in two hours and can be used for live data of partner",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JwtControlTowerIssueResponse"
            },
            "description": "returns generated JWT based on current dispatcher and partner company"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.JwtController.issue_token_control_tower",
        "description": ""
      }
    },
    "/api/v3/public/track/{number}": {
      "get": {
        "tags": [
          "[Public] Order"
        ],
        "summary": "This endpoint retrieves tracking information for an Order",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TrackOrderResponse"
            },
            "description": "Got tracking data"
          }
        },
        "parameters": [
          {
            "x-example": "",
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Tracking number"
          }
        ],
        "operationId": "ApiWeb.V3.ApiController.track_order",
        "description": ""
      }
    },
    "/api/v3/worker/companies/config": {
      "get": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint retrieves configuration information about a Worker's Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyConfigsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.CompanyController.config",
        "description": ""
      }
    },
    "/api/v3/dispatcher/batches/get_order": {
      "get": {
        "tags": [
          "[Dispatcher] Batch"
        ],
        "summary": "This endpoint retrieves detailed information about a Batch",
        "responses": {},
        "parameters": [
          {
            "type": "integer",
            "required": false,
            "name": "batch_id",
            "in": "query",
            "description": "Batch Id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.BatchController.get_order",
        "description": "",
        "deprecated": true
      }
    },
    "/api/v3/worker/info": {
      "put": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint is used to update worker information",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "name",
            "in": "formData",
            "description": "Worker name"
          },
          {
            "type": "string",
            "required": false,
            "name": "email",
            "in": "formData",
            "description": "Worker email"
          },
          {
            "type": "string",
            "required": false,
            "name": "national_id",
            "in": "formData",
            "description": "Worker national id"
          },
          {
            "type": "string",
            "required": false,
            "name": "driver_license",
            "in": "formData",
            "description": "Worker driver license"
          },
          {
            "type": "file",
            "required": false,
            "name": "national_id_photo_front",
            "in": "formData",
            "description": "National id photo proof front file"
          },
          {
            "type": "file",
            "required": false,
            "name": "national_id_photo_back",
            "in": "formData",
            "description": "National id photo proof back file"
          },
          {
            "type": "file",
            "required": false,
            "name": "driver_license_photo_front",
            "in": "formData",
            "description": "Driver license photo front file"
          },
          {
            "type": "file",
            "required": false,
            "name": "driver_license_photo_back",
            "in": "formData",
            "description": "Driver license photo back file"
          },
          {
            "type": "int",
            "required": false,
            "name": "current_vehicle_type_id",
            "in": "formData",
            "description": "Current vehicle type id"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.InfoController.update",
        "description": "",
        "consumes": [
          "multipart/form-data"
        ]
      },
      "get": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint retrieves a Worker's infomation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/InfoResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.InfoController.me",
        "description": ""
      }
    },
    "/api/v3/dispatcher/network/regions/bulk_import": {
      "post": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint bulk imports multiple regions based on KML file",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RegionsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "file",
            "required": false,
            "name": "file",
            "in": "formData",
            "description": "The file to upload"
          },
          {
            "type": "string",
            "required": false,
            "name": "region_type",
            "in": "query",
            "description": "Region Type",
            "default": "operational"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "delete_existing",
            "in": "query",
            "description": "Deleting all existing Region of the same region type",
            "default": false
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.RegionController.bulk_import",
        "description": "",
        "consumes": [
          "multipart/form-data"
        ]
      }
    },
    "/api/v3/dispatcher/task_groups/{task_group_id}/task/{id}/delete_task_exception": {
      "delete": {
        "tags": [
          "[Dispatcher] Task"
        ],
        "summary": "This endpoint deletes a TaskException associated with a Task",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "task_group_id",
            "in": "path",
            "description": "Task Group Id"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task Exception Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskController.delete_task_exception",
        "description": ""
      }
    },
    "/api/v3/dispatcher/search/task": {
      "get": {
        "tags": [
          "[Dispatcher] Search"
        ],
        "summary": "This endpoint is used to search for PowerPlan",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 25
          },
          {
            "type": "string",
            "required": true,
            "name": "q",
            "in": "query",
            "description": "search query"
          },
          {
            "type": "array",
            "required": false,
            "name": "region_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of region ids",
            "collectionFormat": "multi"
          },
          {
            "x-example": "2018-03-10T03:37:08.000000Z",
            "type": "string",
            "required": false,
            "name": "from",
            "in": "query",
            "description": "from time"
          },
          {
            "x-example": "2018-03-11T03:37:08.000000Z",
            "type": "string",
            "required": false,
            "name": "to",
            "in": "query",
            "description": "from time"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SearchController.task",
        "description": ""
      }
    },
    "/api/v3/dispatcher/dispatchers/senders": {
      "get": {
        "tags": [
          "[Dispatcher] CorporateSender"
        ],
        "summary": "This endpoint retrieves a list of Sender Admins and the Organisations they manage",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherSenderAdminsRequest"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.DispatcherController.sender_admins",
        "description": ""
      }
    },
    "/api/v3/worker/statistics": {
      "get": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint retrieves a Worker's Task statistics",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/StatisticsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "range",
            "in": "query",
            "enum": [
              "today",
              "last_week",
              "last_four_weeks"
            ],
            "description": "Time range"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.InfoController.statistics",
        "description": ""
      }
    },
    "/api/v3/dispatcher/worker_teams/{id}/workers": {
      "get": {
        "tags": [
          "[Dispatcher] WorkerTeam"
        ],
        "summary": "This endpoint retrieves a list of a Workers by WorkerTeam",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherWorkersResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker Team ID"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerTeamController.workers",
        "description": ""
      }
    },
    "/api/v3/worker/task_groups/{id}": {
      "get": {
        "tags": [
          "[Worker] TaskGroup"
        ],
        "summary": "This endpoint retrieves information about a TaskGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaskGroupResponse"
            },
            "description": "Show a task group successfully"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task group ID"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskGroupController.show",
        "description": ""
      }
    },
    "/api/v3/dispatcher/rates/get_order_detailed/{number}": {
      "get": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint returns a detailed order payload",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Order Number"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RatesController.get_order_detailed",
        "description": ""
      }
    },
    "/api/v3/dispatcher/worker_teams": {
      "post": {
        "tags": [
          "[Dispatcher] WorkerTeam"
        ],
        "summary": "This endpoint creates a new Worker Team",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWorkerTeamResponse"
            },
            "description": "Created worker team"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWorkerTeamRequest"
            },
            "required": false,
            "name": "worker_team",
            "in": "body",
            "description": "Worker Team info"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerTeamController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] WorkerTeam"
        ],
        "summary": "This endpoint retrieves a list of Worker Teams of the company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherWorkerTeamsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerTeamController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/partners/invites/received": {
      "get": {
        "tags": [
          "[Dispatcher] Partner"
        ],
        "summary": "This endpoint retrieves a list of received partnership requests",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherPartners"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          },
          {
            "type": "string",
            "required": false,
            "name": "q",
            "in": "query",
            "description": "Search by company name"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerController.received_invites",
        "description": ""
      }
    },
    "/api/v3/dispatcher/webhooks/{webhook_id}/webhook_logs/{id}": {
      "get": {
        "tags": [
          "[Dispatcher] WebhookLog"
        ],
        "summary": "This endpoint retrieves information about a webhook log",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WebhookLogsResponse"
            },
            "description": "Got webhook log info."
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Webhook Log ID"
          },
          {
            "type": "integer",
            "required": true,
            "name": "webhook_id",
            "in": "path",
            "description": "Webhook ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WebhookLogController.show",
        "description": ""
      }
    },
    "/api/v3/dispatcher/task_groups/{task_group_id}/task/{id}/mark_as_failed": {
      "post": {
        "tags": [
          "[Dispatcher] Task"
        ],
        "summary": "This endpoint marks a Task as failed by creating an associated TaskException",
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "task_group_id",
            "in": "path",
            "description": "Task Group Id"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task Id"
          },
          {
            "x-example": [
              "Sender not available"
            ],
            "schema": "array",
            "required": true,
            "name": "descriptions",
            "in": "body",
            "description": "Task Exception descriptions"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskController.mark_as_failed",
        "description": ""
      }
    },
    "/api/v3/dispatcher/dashboard": {
      "post": {
        "tags": [
          "[Dispatcher] Dashboard and Report Jwt"
        ],
        "summary": "this endpoint generate dashboard and report url by issuing a jwt token for dashboard and report that expires in one hour",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": "string",
            "required": false,
            "name": "type",
            "in": "body",
            "description": "Type"
          },
          {
            "schema": "map",
            "required": false,
            "name": "report_params",
            "in": "body",
            "description": "Additional params to be provided to the holistics report"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.DashboardController.generate_dashboard_and_report_url",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Dashboard and Report Jwt"
        ],
        "summary": "this endpoint generate dashboard and report url by issuing a jwt token for dashboard and report that expires in one hour",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "type",
            "in": "query",
            "description": "Type"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.DashboardController.generate_dashboard_and_report_url_old",
        "description": "",
        "deprecated": true
      }
    },
    "/api/v3/dispatcher/batches/{id}/cancel": {
      "put": {
        "tags": [
          "[Dispatcher] Batch"
        ],
        "summary": "This endpoint cancel a Batch",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BatchCancelledResponse"
            },
            "description": "Batch cancelled"
          }
        },
        "parameters": [
          {
            "type": "integer",
            "required": false,
            "name": "id",
            "in": "query",
            "description": "Batch Id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.BatchController.cancel",
        "description": ""
      }
    },
    "/api/v3/dispatcher/settings/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Planner Setting"
        ],
        "summary": "This endpoint updates a Dispatcher's information",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherSettingResponse"
            },
            "description": "Updated the company setting"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Setting ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateSettingRequest"
            },
            "required": false,
            "name": "setting",
            "in": "body",
            "description": "Company setting information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PlanSettingsController.update",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/template": {
      "put": {
        "tags": [
          "[Dispatcher] Company Template"
        ],
        "summary": "This endpoint updates a Company's template",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TemplateResponse"
            },
            "description": "Updated the company's template"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/TemplateUpdateRequest"
            },
            "required": false,
            "name": "data",
            "in": "body",
            "description": "Company's template object"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TemplateController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Company Template"
        ],
        "summary": "This endpoint retrieves infomation about a Company's template",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TemplateResponse"
            },
            "description": "Got the company template"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "type",
            "in": "query",
            "description": "point_to_point or single_task"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TemplateController.show",
        "description": ""
      }
    },
    "/api/v3/dispatcher/orders": {
      "post": {
        "tags": [
          "[Dispatcher] Order"
        ],
        "summary": "This endpoint creates an Order",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateOrderResponse"
            },
            "description": "Create order response success"
          },
          "422": {
            "description": {
              "message": "Order creation failed!"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateOrderRequest"
            },
            "required": false,
            "name": "order",
            "in": "body",
            "description": "Order information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Order"
        ],
        "summary": "This endpoint retrieves a list of Orders",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherOrdersResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "status",
            "in": "query",
            "description": "an array of status for order, ie: [created, accepted, completed, cancelled]"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "paid",
            "in": "query",
            "description": "whether the order is paid"
          },
          {
            "type": "string",
            "required": false,
            "name": "from",
            "in": "query",
            "description": "from datetime in ISO8601 format"
          },
          {
            "type": "string",
            "required": false,
            "name": "to",
            "in": "query",
            "description": "to datetime in ISO8601 format"
          },
          {
            "type": "integer",
            "required": false,
            "name": "sender_id",
            "in": "query",
            "description": "Sender ID"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          },
          {
            "type": "string",
            "required": false,
            "name": "order",
            "in": "query",
            "description": "asc, or desc",
            "default": [
              100,
              101,
              115,
              99
            ]
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/orders/get_item_count": {
      "post": {
        "tags": [
          "[Dispatcher] Order"
        ],
        "summary": "This endpoint is used by a Dispatcher to get the order item count for an Order",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": [
              "O-21312312"
            ],
            "schema": "array",
            "required": true,
            "name": "order_numbers",
            "in": "body",
            "description": "Order numbers"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderController.get_item_count",
        "description": ""
      }
    },
    "/api/v3/dispatcher/task_groups/{id}/unassign_worker": {
      "put": {
        "tags": [
          "[Dispatcher] TaskGroup"
        ],
        "summary": "This endpoint unassigns a TaskGroup from a Worker",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task Group ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskGroupController.unassign_worker",
        "description": ""
      }
    },
    "/api/v3/dispatcher/saved_filter": {
      "get": {
        "tags": [
          "[Dispatcher] Saved Filters"
        ],
        "summary": "This endpoint retrieves a list of Saved Filters",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SavedFiltersResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SavedFilterController.index",
        "description": ""
      }
    },
    "/api/v3/sender/orders/{number}": {
      "get": {
        "tags": [
          "[Sender] Order"
        ],
        "summary": "This endpoint retrieves information about an Order",
        "responses": {
          "200": {
            "description": {}
          },
          "500": {
            "description": {}
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "x-example": "cGc2RUIwSUZsTGRHQXpzUTJ4WTZ6Zz09",
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Order Number"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.OrderController.show",
        "description": ""
      }
    },
    "/api/v3/dispatcher/rates/calculate/{rate_entry_id}": {
      "post": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint calculates a rate for multiple rateable payloads",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RatingResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "rate_entry_id",
            "in": "path",
            "description": "Rate Entry Id"
          },
          {
            "schema": {
              "$ref": "#/definitions/RatingRequest"
            },
            "required": false,
            "name": "payloads",
            "in": "body",
            "description": "RatingRequest"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RatesController.calculate",
        "description": ""
      }
    },
    "/api/v3/dispatcher/operations": {
      "post": {
        "tags": [
          "[Dispatcher] Operation"
        ],
        "summary": "This endpoint creates an operation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/CreateOperationRequest"
            },
            "required": false,
            "name": "operation",
            "in": "body",
            "description": "Operation"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OperationController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Operation"
        ],
        "summary": "This endpoint lists operations for a company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListOperationsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OperationController.index",
        "description": ""
      }
    },
    "/api/v3/worker/companies/theme": {
      "get": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint retrieves theme about a Worker's Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyThemeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.CompanyController.get_theme",
        "description": ""
      }
    },
    "/api/v3/dispatcher/network/regions": {
      "post": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint creates a new Region",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RegionResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/RegionRequest"
            },
            "required": false,
            "name": "region",
            "in": "body",
            "description": "Region"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.RegionController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint retrieves a list of Regions belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RegionsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.RegionController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/network/spokes/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint updates a Spoke",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SpokeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Spoke Id"
          },
          {
            "schema": {
              "$ref": "#/definitions/SpokeRequest"
            },
            "required": false,
            "name": "spoke",
            "in": "body",
            "description": "Spoke"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.SpokeController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint updates a Spoke",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SpokeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Spoke Id"
          },
          {
            "schema": {
              "$ref": "#/definitions/SpokeRequest"
            },
            "required": false,
            "name": "spoke",
            "in": "body",
            "description": "Spoke"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.SpokeController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint retrieves information about a Spoke",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SpokeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Spoke Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.SpokeController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint deletes a Spoke",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SpokeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Spoke Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.SpokeController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/rates/rate_charge_types/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint updates RateChargeTypes",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/RateChargeTypesRequest"
            },
            "required": false,
            "name": "rate_charge_type",
            "in": "body",
            "description": "RateChargeTypes"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RateChargeTypeController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint updates RateChargeTypes",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/RateChargeTypesRequest"
            },
            "required": false,
            "name": "rate_charge_type",
            "in": "body",
            "description": "RateChargeTypes"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RateChargeTypeController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] RateChargeType"
        ],
        "summary": "This endpoint retrieves information about a rate charge type",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RateChargeTypeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Rate Charge Type Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RateChargeTypeController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint deletes a RateChargeType",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RateChargeTypeResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "RateChargeType Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RateChargeTypeController.delete",
        "description": ""
      }
    },
    "/api/v3/public/otp/": {
      "get": {
        "tags": [
          "[Public]"
        ],
        "summary": "This endpoint requests an OTP code for logging in",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GetOtpResponse"
            },
            "description": "Got OTP"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "phone",
            "in": "query",
            "description": "Phone number"
          }
        ],
        "operationId": "ApiWeb.V3.ApiController.get_otp",
        "description": ""
      }
    },
    "/api/v3/dispatcher/tasks/eta": {
      "get": {
        "tags": [
          "[Dispatcher] Task"
        ],
        "summary": "This endpoint retrieves eta of tasks",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskController.tasks_eta",
        "description": ""
      }
    },
    "/api/v3/dispatcher/address_items": {
      "put": {
        "tags": [
          "[Dispatcher] Addressbook"
        ],
        "summary": "This endpoint updates address items of a dispatcher",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/UpdateAddressItemsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/UpdateAddressItemsRequest"
            },
            "required": false,
            "name": "address_items",
            "in": "body",
            "description": "Address Items"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.AddressItemController.update",
        "description": ""
      },
      "post": {
        "tags": [
          "[Dispatcher] Addressbook"
        ],
        "summary": "This endpoint creates address items of a dispatcher",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CreateAddressItemsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/CreateAddressItemsRequest"
            },
            "required": false,
            "name": "address_items",
            "in": "body",
            "description": "Address Items"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.AddressItemController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Addressbook"
        ],
        "summary": "This endpoint lists address items of a company, supporting search",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "array",
            "required": false,
            "name": "address_item_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of address item ids",
            "collectionFormat": "multi"
          },
          {
            "type": "string",
            "required": false,
            "name": "query",
            "in": "query",
            "description": "external_id/contact/address text query"
          },
          {
            "type": "string",
            "required": false,
            "name": "category",
            "in": "query",
            "description": "category of address item"
          },
          {
            "type": "integer",
            "required": false,
            "name": "sender_id",
            "in": "query",
            "description": "sender_id"
          },
          {
            "type": "array",
            "required": false,
            "name": "tags[]",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "array of tags",
            "collectionFormat": "multi"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          },
          {
            "type": "string",
            "required": false,
            "name": "sort_by",
            "in": "query",
            "enum": [
              "external_id"
            ],
            "description": "Sorting By"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.AddressItemController.index",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Addressbook"
        ],
        "summary": "This endpoint deletes address items of a dispatcher",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DeleteAddressItemsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "array",
            "required": true,
            "name": "address_item_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of address_item_ids",
            "collectionFormat": "multi"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.AddressItemController.delete",
        "description": ""
      }
    },
    "/api/v3/public/orders/download_sample": {
      "get": {
        "tags": [
          "[Dispatcher] Batch"
        ],
        "summary": "This endpoint downloads a sample batch file of a company",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "company_slug",
            "in": "query",
            "description": "Company Slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "format",
            "in": "query",
            "description": "Template format (csv or xlsx)"
          },
          {
            "type": "string",
            "required": false,
            "name": "type",
            "in": "query",
            "description": "point_to_point or single_task"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Public.OrdersController.download_sample",
        "description": ""
      }
    },
    "/api/v3/dispatcher/workers/batches/{id}/status": {
      "get": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "This endpoint checks the status of all workers in a Batch",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/BulkCompletionStatus"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Batch ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.batch_status",
        "description": ""
      }
    },
    "/api/v3/public/verify_phone_otp/": {
      "post": {
        "tags": [
          "[Public]"
        ],
        "summary": "This endpoint verifies the entered OTP code and returns JWT auth tokens",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VerifyPhoneOtpWithJwtResponse"
            },
            "description": "OTP Verified"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "phone",
            "in": "query",
            "description": "Phone number"
          },
          {
            "type": "string",
            "required": false,
            "name": "otp_code",
            "in": "query",
            "description": "OTP code"
          }
        ],
        "operationId": "ApiWeb.V3.ApiController.verify_otp_with_jwt",
        "description": ""
      },
      "get": {
        "tags": [
          "[Public]"
        ],
        "summary": "This endpoint verifies the entered OTP code",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VerifyPhoneOtpResponse"
            },
            "description": "OTP Verified"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "phone",
            "in": "query",
            "description": "Phone number"
          },
          {
            "type": "string",
            "required": false,
            "name": "otp_code",
            "in": "query",
            "description": "OTP code"
          }
        ],
        "operationId": "ApiWeb.V3.ApiController.verify_phone_otp",
        "description": ""
      }
    },
    "/api/v3/dispatcher/task_groups/{id}/join_chat": {
      "get": {
        "tags": [
          "[Dispatcher] TaskGroup"
        ],
        "summary": "This endpoint adds a Dispatcher to a chat group",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task Group ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskGroupController.join_chat",
        "description": ""
      }
    },
    "/api/v3/worker/task_groups/{id}/accept": {
      "put": {
        "tags": [
          "[Worker] TaskGroup"
        ],
        "summary": "This endpoint is used by a Worker to accept an assigned TaskGroup",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaskGroupsResponse"
            },
            "description": "Accept a task group successfully"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task group ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/AcceptRejectLocation"
            },
            "required": false,
            "name": "location",
            "in": "body",
            "description": "Accept location"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskGroupController.accept",
        "description": ""
      }
    },
    "/api/v3/public/jwt/delivery_tracker": {
      "post": {
        "tags": [
          "[Dispatcher] Jwt"
        ],
        "summary": "this endpoint issues a jwt token that expires in two hours and can be used for live data of delivery",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JwtControlTowerIssueResponse"
            },
            "description": "returns generated JWT based on given tracking number"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": "string",
            "required": false,
            "name": "tracking_number",
            "in": "body",
            "description": "Order item tracking number"
          }
        ],
        "operationId": "ApiWeb.V3.Public.JwtController.issue_token_delivery_tracker",
        "description": ""
      }
    },
    "/api/v3/dispatcher/waybill_templates/{id}/set_active": {
      "put": {
        "tags": [
          "[Dispatcher] Waybill Template"
        ],
        "summary": "This endpoint set active a waybill template",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Waybill template id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WaybillTemplateController.set_active",
        "description": ""
      }
    },
    "/api/v3/dispatcher/organisation_senders": {
      "get": {
        "tags": [
          "[Dispatcher] CorporateSender"
        ],
        "summary": "This endpoint retrieves a list of Organisation Senders",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCorporateSendersResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrganisationController.organisation_senders",
        "description": ""
      }
    },
    "/api/v3/dispatcher/task_groups/{task_group_id}/task/{id}/complete": {
      "post": {
        "tags": [
          "[Dispatcher] Task"
        ],
        "summary": "This endpoint marks a Task as completed by a Dispatcher",
        "responses": {
          "200": {
            "description": "ok"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "task_group_id",
            "in": "path",
            "description": "Task Group Id"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskController.complete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/subscriptions/invoices": {
      "get": {
        "tags": [
          "[Dispatcher] Subscription"
        ],
        "summary": "This endpoint lists subscription invoices for a company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IndexCompanySubscriptionInvoicesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PaymentController.list_subscription_invoices",
        "description": ""
      }
    },
    "/api/v3/dispatcher/info": {
      "get": {
        "tags": [
          "[Dispatcher]"
        ],
        "summary": "This endpoint retrieves a Dispatcher's infomation",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherInfoResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.InfoController.me",
        "description": ""
      }
    },
    "/api/v3/dispatcher/route_schedules": {
      "post": {
        "tags": [
          "[Dispatcher] Route Schedules"
        ],
        "summary": "This endpoint creates a route schedule with points",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherRouteScheduleResponse"
            },
            "description": ""
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherRouteScheduleRequest"
            },
            "required": false,
            "name": "route_schedule",
            "in": "body",
            "description": "Route schedule information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.RouteScheduleController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Route Schedules"
        ],
        "summary": "This endpoint retrieves a list of route schedules",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherIndexRouteScheduleResponse"
            },
            "description": ""
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.RouteScheduleController.index",
        "description": ""
      }
    },
    "/api/v3/sender/orders/ongoing": {
      "get": {
        "tags": [
          "[Sender] Order"
        ],
        "summary": "This endpoint retrieves all ongoing Orders of a Sender",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Sender.OrderController.ongoing",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/vehicles/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Vehicle"
        ],
        "summary": "This endpoint updates a vehicle",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherVehicleResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "query",
            "description": "id of the vehicle"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateVehicleRequest"
            },
            "required": false,
            "name": "vehicle",
            "in": "body",
            "description": "vehicle info"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.VehicleController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Vehicle"
        ],
        "summary": "This endpoint retrieves a vehicles belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherVehicleResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "query",
            "description": "id of the vehicle"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.VehicleController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Vehicle"
        ],
        "summary": "This endpoint deletes a vehicle",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "query",
            "description": "id of the vehicle"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.VehicleController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/workers/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "This endpoint updates a Worker's information",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWorkerResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateWorkerRequest"
            },
            "required": false,
            "name": "worker",
            "in": "body",
            "description": "Worker information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "This endpoint retrieves information about a Worker",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWorkerResponse"
            },
            "description": "Got worker"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "This endpoint deletes a Worker",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/organisations/{id}/senders": {
      "post": {
        "tags": [
          "[Dispatcher] CorporateSender"
        ],
        "summary": "This endpoint creates a new Corporate User",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateCorporateSenderResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Organisation ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateCorporateSenderRequest"
            },
            "required": false,
            "name": "sender",
            "in": "body",
            "description": "Corporate Sender information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrganisationController.create_corporate_sender",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] CorporateSender"
        ],
        "summary": "This endpoint retrieves a list of Corporate Users",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCorporateSendersResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Organisation ID",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrganisationController.corporate_senders",
        "description": ""
      }
    },
    "/api/v3/sender/service_types": {
      "get": {
        "tags": [
          "[Sender] Company"
        ],
        "summary": "This endpoint retrieves service types of a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyServiceTypesResponse"
            },
            "description": "Got a complete list of the company's service types"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.CompanyController.service_types",
        "description": ""
      }
    },
    "/api/v3/dispatcher/worker_teams/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] WorkerTeam"
        ],
        "summary": "This endpoint updates the Worker Team of the company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWorkerTeamResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker Team ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateWorkerTeamRequest"
            },
            "required": false,
            "name": "worker_team",
            "in": "body",
            "description": "Worker Team information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerTeamController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] WorkerTeam"
        ],
        "summary": "This endpoint updates the Worker Team of the company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWorkerTeamResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker Team ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateWorkerTeamRequest"
            },
            "required": false,
            "name": "worker_team",
            "in": "body",
            "description": "Worker Team information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerTeamController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] WorkerTeam"
        ],
        "summary": "This endpoint retrieves the Worker Team of the company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWorkerTeamResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker Team ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerTeamController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] WorkerTeam"
        ],
        "summary": "This endpoint deletes a Worker Team",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker Team ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerTeamController.delete",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/ongoing": {
      "get": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint retrieves a list of a Worker's ongoing Tasks",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TasksResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "from",
            "in": "query",
            "description": "from datetime in ISO8601 format"
          },
          {
            "type": "string",
            "required": false,
            "name": "to",
            "in": "query",
            "description": "to datetime in ISO8601 format"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "task_id_only",
            "in": "query",
            "description": "return only task id",
            "default": false
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.ongoing",
        "description": ""
      }
    },
    "/api/v3/dispatcher/partner_transfer/dispatcher/accept_order/{order_number}": {
      "put": {
        "tags": [
          "[Dispatcher] Partner Transfer Order"
        ],
        "summary": "This endpoint is used to accept a Transfer Order",
        "responses": {
          "200": {
            "description": "Transfer Order accepted successfully"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "order_number",
            "in": "path",
            "description": "Order number"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerTransferController.accept_transfer",
        "description": ""
      }
    },
    "/api/v3/dispatcher/dispatchers/{id}": {
      "delete": {
        "tags": [
          "[Dispatcher] Dispatcher"
        ],
        "summary": "This endpoint deletes a Dispatcher",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Dispatcher ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.DispatcherController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/orders_multi_leg": {
      "post": {
        "tags": [
          "[Dispatcher] Order"
        ],
        "summary": "This endpoint creates an Order with multi-leg support",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateOrderResponse"
            },
            "description": "Create order response success"
          },
          "422": {
            "description": {
              "message": "Order creation failed!"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateOrderMultiLegRequest"
            },
            "required": false,
            "name": "order",
            "in": "body",
            "description": "Order infomation with multileg support"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderController.create_multi_leg",
        "description": ""
      }
    },
    "/api/v3/dispatcher/chat/channels": {
      "get": {
        "tags": [
          "[Dispatcher] Chat"
        ],
        "summary": "This endpoint returns list of dispatcher channels",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ChatController.channels",
        "description": ""
      }
    },
    "/api/v3/worker/location": {
      "put": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint updates a Worker's location",
        "responses": {
          "200": {
            "description": "Worker location updated"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/WorkerLocationUpdateRequest"
            },
            "required": false,
            "name": "sender",
            "in": "body",
            "description": "Location information"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.UserController.location",
        "description": ""
      }
    },
    "/api/v3/dispatcher/task_exception_reasons": {
      "post": {
        "tags": [
          "[Dispatcher] TaskExceptionReason"
        ],
        "summary": "This endpoint creates a new TaskExceptionReason",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaskExceptionReasonResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/TaskExceptionReasonRequest"
            },
            "required": false,
            "name": "description",
            "in": "body",
            "description": "TaskExceptionReason"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskExceptionReasonController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] TaskExceptionReason"
        ],
        "summary": "This endpoint retrieves all TaskExceptionReasons for a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaskExceptionReasonsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskExceptionReasonController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/plans/:id": {
      "get": {
        "tags": [
          "[Dispatcher] Plan"
        ],
        "summary": "This endpoint retrieves a plan belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherPlanResponse"
            },
            "description": "Got list of company plans"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Plan UUID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PlanController.show",
        "description": ""
      }
    },
    "/api/v3/dispatcher/organisations": {
      "post": {
        "tags": [
          "[Dispatcher] CorporateSender"
        ],
        "summary": "This endpoint creates a new corporate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateOrganisationResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateOrganisationRequest"
            },
            "required": false,
            "name": "sender",
            "in": "body",
            "description": "Organisation information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrganisationController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] CorporateSender"
        ],
        "summary": "This endpoint retrieves a list of Corporates (aka Organisations) managed by a Dispatcher",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherOrganisationsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          },
          {
            "type": "string",
            "required": false,
            "name": "q",
            "in": "query",
            "description": "search by name"
          },
          {
            "type": "boolean",
            "required": false,
            "name": "with_users",
            "in": "query",
            "description": "include users or not",
            "default": false
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrganisationController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/order_items/{order_item_id}/sub_tasks/{id}": {
      "get": {
        "tags": [
          "[Dispatcher] SubTask"
        ],
        "summary": "This endpoint retrieves information about a SubTask",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherRuleResponse"
            },
            "description": "Got sub task"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Sub Task ID"
          },
          {
            "type": "integer",
            "required": true,
            "name": "order_item_id",
            "in": "path",
            "description": "Order Item ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SubTaskController.show",
        "description": ""
      }
    },
    "/api/v3/public/orders/get_prices": {
      "post": {
        "tags": [
          "[Public] Order"
        ],
        "summary": "This endpoint obtains a price quote for an multi-item Order",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GetOrderPricesResponse"
            },
            "description": "Get Prices Response"
          },
          "500": {
            "description": {}
          }
        },
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/GetOrderPricesRequest"
            },
            "required": true,
            "name": "order",
            "in": "body",
            "description": "Order details"
          }
        ],
        "operationId": "ApiWeb.V3.Public.OrdersController.get_prices_for_order",
        "description": "",
        "consumes": [
          "application/json"
        ]
      }
    },
    "/api/v3/dispatcher/network/regions/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint updates a Region",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RegionResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Region ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/RegionRequest"
            },
            "required": false,
            "name": "region",
            "in": "body",
            "description": "Region"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.RegionController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint updates a Region",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RegionResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Region ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/RegionRequest"
            },
            "required": false,
            "name": "region",
            "in": "body",
            "description": "Region"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.RegionController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint retrieves information about a Region",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RegionResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Region ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.RegionController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Network"
        ],
        "summary": "This endpoint deletes a Region",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/RegionResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Region ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Network.RegionController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/schedules": {
      "post": {
        "tags": [
          "[Dispatcher] Schedule"
        ],
        "summary": "This endpoint creates a new schedule",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/ScheduleRequest"
            },
            "required": false,
            "name": "schedule",
            "in": "body",
            "description": "Schedule information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ScheduleController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Schedule"
        ],
        "summary": "This endpoint creates a new schedule",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": false,
            "name": "worker_id",
            "in": "query",
            "description": "worker id"
          },
          {
            "type": "integer",
            "required": false,
            "name": "vehicle_id",
            "in": "query",
            "description": "vehicle_id"
          },
          {
            "type": "string",
            "required": false,
            "name": "from",
            "in": "query",
            "description": "from datetime in ISO8601 format"
          },
          {
            "type": "string",
            "required": false,
            "name": "to",
            "in": "query",
            "description": "to datetime in ISO8601 format"
          },
          {
            "type": "array",
            "required": false,
            "name": "types[]",
            "items": {
              "enum": [
                "worker_on",
                "worker_off",
                "vehicle_on",
                "vehicle_off"
              ]
            },
            "in": "query",
            "description": "types",
            "collectionFormat": "multi"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ScheduleController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/plans": {
      "post": {
        "tags": [
          "[Dispatcher] Plan"
        ],
        "summary": "This endpoint creates a new plan",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherPlanResponse"
            },
            "description": "Created the company plan"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreatePlanRequest"
            },
            "required": false,
            "name": "user",
            "in": "body",
            "description": "Company plan information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PlanController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Plan"
        ],
        "summary": "This endpoint retrieves a list of plans belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherIndexPlanResponse"
            },
            "description": "Got list of company plans"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "date",
            "in": "path",
            "description": "Filter date"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PlanController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/jwt": {
      "post": {
        "tags": [
          "[Dispatcher] Jwt"
        ],
        "summary": "this endpoint issues a jwt token that expires in two hours",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/JwtIssueResponse"
            },
            "description": "returns generated JWT based on current dispatcher"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.JwtController.issue_token",
        "description": ""
      }
    },
    "/api/v3/dispatcher/senders/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Sender"
        ],
        "summary": "This endpoint updates a Sender's information",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateSenderResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Sender ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateSenderRequest"
            },
            "required": false,
            "name": "sender",
            "in": "body",
            "description": "Sender information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SenderController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Sender"
        ],
        "summary": "This endpoint updates a Sender's information",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateSenderResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Sender ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateSenderRequest"
            },
            "required": false,
            "name": "sender",
            "in": "body",
            "description": "Sender information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SenderController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Sender"
        ],
        "summary": "This endpoint retrieves information about a Sender",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateSenderResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Sender ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SenderController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Sender"
        ],
        "summary": "This endpoint deletes a Sender",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Sender ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SenderController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/partners/{cip}/accept_invite": {
      "put": {
        "tags": [
          "[Dispatcher] Partner"
        ],
        "summary": "This endpoint is used to accept a Partner invite",
        "responses": {
          "200": {
            "description": "Partnership invite accepted successfully"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "cip",
            "in": "path",
            "description": "Partner CIP"
          },
          {
            "schema": "boolean",
            "required": true,
            "name": "allow_view_activities",
            "in": "body",
            "description": "Allow upstream partner to see live status (control tower)"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerController.accept_invite",
        "description": ""
      }
    },
    "/api/v3/public/password": {
      "put": {
        "tags": [
          "[Public] Password"
        ],
        "summary": "Validate if reset password token is still valid",
        "responses": {
          "200": {
            "description": {
              "message": "Password is updated!"
            }
          },
          "422": {
            "description": {
              "message": "Reset password token is expired, please try again!"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "password",
            "in": "query",
            "description": "New password"
          },
          {
            "type": "string",
            "required": false,
            "name": "reset_password_token",
            "in": "query",
            "description": "Reset password token"
          }
        ],
        "operationId": "ApiWeb.V3.Public.PasswordController.update",
        "description": ""
      },
      "post": {
        "tags": [
          "[Public] Password"
        ],
        "summary": "Create reset password token and send email",
        "responses": {
          "200": {
            "description": {
              "message": "An email has been sent to [email] with further instructions."
            }
          },
          "422": {
            "description": {
              "message": "Email not found!!"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "email",
            "in": "query",
            "description": "Email of the account to reset password"
          },
          {
            "type": "string",
            "required": false,
            "name": "company_slug",
            "in": "query",
            "description": "Company slug, default is yojee"
          },
          {
            "type": "string",
            "required": false,
            "name": "portal",
            "in": "query",
            "description": "Portal: admin, order or book, default is admin"
          }
        ],
        "operationId": "ApiWeb.V3.Public.PasswordController.create",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Public] Password"
        ],
        "summary": "Validate if reset password token is still valid",
        "responses": {
          "200": {
            "description": {
              "message": "Password is updated!"
            }
          },
          "422": {
            "description": {
              "message": "Reset password token is expired, please try again!"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": false,
            "name": "password",
            "in": "query",
            "description": "New password"
          },
          {
            "type": "string",
            "required": false,
            "name": "reset_password_token",
            "in": "query",
            "description": "Reset password token"
          }
        ],
        "operationId": "ApiWeb.V3.Public.PasswordController.update",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/completed": {
      "get": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint retrieves a list of a Worker's completed Tasks",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "range",
            "in": "query",
            "enum": [
              "today",
              "last_week",
              "last_four_weeks"
            ],
            "description": "Time range"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.completed",
        "description": ""
      }
    },
    "/api/v3/dispatcher/companies/config": {
      "get": {
        "tags": [
          "[Dispatcher]"
        ],
        "summary": "This endpoint retrieves configuration information about a Dispatcher's Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/CompanyConfigsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.CompanyController.config",
        "description": ""
      }
    },
    "/api/v3/dispatcher/task_groups/accepted": {
      "get": {
        "tags": [
          "[Dispatcher] TaskGroup"
        ],
        "summary": "This endpoint retrieves a Worker's list of accepted TaskGroups",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": false,
            "name": "worker_id",
            "in": "query",
            "description": "Worker ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskGroupController.accepted",
        "description": ""
      }
    },
    "/api/v3/dispatcher/rates/calculate_order/{number}": {
      "post": {
        "tags": [
          "[Dispatcher] Rates"
        ],
        "summary": "This endpoint resolves an order and calculates price",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Order Number"
          },
          {
            "schema": "string",
            "required": false,
            "name": "rate_entry_id",
            "in": "body",
            "description": "Rate Entry ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.Rates.RatesController.calculate_order",
        "description": ""
      }
    },
    "/api/v3/dispatcher/dispatch_rule": {
      "post": {
        "tags": [
          "[Dispatcher] Dispatch Rule"
        ],
        "summary": "This endpoint creates a dispatch rule",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatchRuleCreateRequest"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Dispatch rule creation request"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.DispatchRuleController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Dispatch Rule"
        ],
        "summary": "This endpoint retrieves a list of dispatch rules",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatchRulesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.DispatchRuleController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/sub_tasks": {
      "put": {
        "tags": [
          "[Dispatcher] SubTask"
        ],
        "summary": "This endpoint completes a SubTask, this api behave the same when Put and Post",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubTaskResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/SubTaskRequest"
            },
            "required": false,
            "name": "sub_task",
            "in": "body",
            "description": "SubTask"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SubTaskController.update",
        "description": ""
      },
      "post": {
        "tags": [
          "[Dispatcher] SubTask"
        ],
        "summary": "This endpoint completes a SubTask, this api behave the same when Put and Post",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/SubTaskResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/SubTaskRequest"
            },
            "required": false,
            "name": "sub_task",
            "in": "body",
            "description": "SubTask"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SubTaskController.create",
        "description": ""
      }
    },
    "/api/v3/sender/addressbook/search": {
      "get": {
        "tags": [
          "[Sender] Addressbook"
        ],
        "summary": "This endpoint lists address items of a sender, supporting search",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/IndexAddressItemsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "type": "array",
            "required": false,
            "name": "address_item_ids[]",
            "items": {
              "type": "integer"
            },
            "in": "query",
            "description": "array of address item ids",
            "collectionFormat": "multi"
          },
          {
            "type": "string",
            "required": false,
            "name": "query",
            "in": "query",
            "description": "external_id/contact/address text query"
          },
          {
            "type": "string",
            "required": false,
            "name": "category",
            "in": "query",
            "description": "category of address item"
          },
          {
            "type": "array",
            "required": false,
            "name": "tags[]",
            "items": {
              "type": "string"
            },
            "in": "query",
            "description": "array of tags",
            "collectionFormat": "multi"
          },
          {
            "type": "string",
            "required": false,
            "name": "include_global",
            "in": "query",
            "description": "include global address items",
            "default": false
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Sender.AddressItemController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/saved_filters": {
      "post": {
        "tags": [
          "[Dispatcher] Saved Filter"
        ],
        "summary": "This endpoint creates a Saved Filter",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/SavedFilterCreateRequest"
            },
            "required": false,
            "name": "saved_filter",
            "in": "body",
            "description": "Saved Filter creation request"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SavedFilterController.create",
        "description": ""
      }
    },
    "/api/v3/public/labels/{tracking_number}": {
      "get": {
        "tags": [
          "[Public] Docs"
        ],
        "summary": "This endpoint generates a Label from a tracking number",
        "responses": {
          "200": {
            "description": "Label to be downloaded."
          },
          "422": {
            "description": {
              "message": "Label creation failed!"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "tracking_number",
            "in": "query",
            "description": "Tracking number"
          },
          {
            "type": "string",
            "required": false,
            "name": "format",
            "items": {
              "type": "string",
              "enum": [
                "html",
                "pdf"
              ]
            },
            "in": "query",
            "description": "Output format"
          }
        ],
        "operationId": "ApiWeb.V3.Public.LabelController.generate_from_tracking_number",
        "description": ""
      }
    },
    "/api/v3/dispatcher/workers/{id}/approve": {
      "put": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "This endpoint is used by a Dispatcher to approve a Worker",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateWorkerResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.approve",
        "description": ""
      }
    },
    "/api/v3/dispatcher/worker_teams/{id}/remove_workers": {
      "post": {
        "tags": [
          "[Dispatcher] WorkerTeam"
        ],
        "summary": "This endpoint removes worker/ workers from Worker Team",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker Team ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherRemoveWorkersToTeamRequest"
            },
            "required": false,
            "name": "worker_team",
            "in": "body",
            "description": "Worker Team info"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerTeamController.remove_workers",
        "description": ""
      }
    },
    "/api/v3/dispatcher/task_groups/{id}/assign_worker": {
      "put": {
        "tags": [
          "[Dispatcher] TaskGroup"
        ],
        "summary": "This endpoint assigns a TaskGroup to a Worker",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task group ID"
          },
          {
            "type": "integer",
            "required": false,
            "name": "worker_id",
            "in": "query",
            "description": "Worker ID"
          },
          {
            "type": "string",
            "required": false,
            "name": "price_currency",
            "in": "query",
            "description": "Price's currency"
          },
          {
            "type": "number",
            "required": false,
            "name": "price_amount",
            "in": "query",
            "description": "Price's amount"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskGroupController.assign_worker",
        "description": ""
      }
    },
    "/api/v3/dispatcher/trips/{id}/complete": {
      "post": {
        "tags": [
          "[Dispatcher] Trip"
        ],
        "summary": "This endpoint completes all the tasks of the trip",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Trip id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TripController.complete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/search/vehicle": {
      "get": {
        "tags": [
          "[Dispatcher] Search"
        ],
        "summary": "This endpoint is used to search for an Vehicle",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 25
          },
          {
            "type": "string",
            "required": true,
            "name": "q",
            "in": "query",
            "description": "search query"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.SearchController.vehicle",
        "description": ""
      }
    },
    "/api/v3/dispatcher/plans/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Plan"
        ],
        "summary": "This endpoint updates a plan",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherPlanResponse"
            },
            "description": "Updated the company plan"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Plan UUID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdatePlanRequest"
            },
            "required": false,
            "name": "plan",
            "in": "body",
            "description": "Company plan information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PlanController.update",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Plan"
        ],
        "summary": "This endpoint deletes a plan",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Plan UUID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PlanController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/settings": {
      "post": {
        "tags": [
          "[Dispatcher] Planner Setting"
        ],
        "summary": "This endpoint creates a new Dispatcher",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherSettingResponse"
            },
            "description": "Created the company setting"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateSettingRequest"
            },
            "required": false,
            "name": "user",
            "in": "body",
            "description": "Company setting information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PlanSettingsController.create",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Planner Setting"
        ],
        "summary": "This endpoint retrieves a list of settings belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherIndexSettingResponse"
            },
            "description": "Got list of company settings"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PlanSettingsController.index",
        "description": ""
      }
    },
    "/api/v3/enterprise/users": {
      "get": {
        "tags": [
          "[Enterprise] User"
        ],
        "summary": "This endpoint returns the enterprise users for an enterprise",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/ListEnterpriseUsersResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "name",
            "in": "query",
            "description": "Name of user"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Enterprise.EnterpriseUserController.enterprise_users",
        "description": ""
      }
    },
    "/api/v3/sender/track_item/{number}": {
      "get": {
        "tags": [
          "[Sender] Track Order Item"
        ],
        "summary": "This endpoint retrieves tracking information for an Order Item",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TrackOrderItemResponse"
            },
            "description": "Got tracking data"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "x-example": "",
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Tracking number"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.TrackController.track_item",
        "description": ""
      }
    },
    "/api/v3/dispatcher/order_items/deconsolidate": {
      "post": {
        "tags": [
          "[Dispatcher] OrderItem"
        ],
        "summary": "this endpoint is used to deconsolidate one or more items from another one",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderItemController.deconsolidate",
        "description": ""
      }
    },
    "/api/v3/dispatcher/order_items/{id}/jobs": {
      "get": {
        "tags": [
          "[Dispatcher] OrderItem"
        ],
        "summary": "this endpoint is used to get the jobs for a single order_item",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OrderItemsJobsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Order Item id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderItemController.jobs",
        "description": ""
      }
    },
    "/api/v3/sender/batches/get_order": {
      "get": {
        "tags": [
          "[Sender] Batch"
        ],
        "summary": "This endpoint retrieves detailed information about a Batch",
        "responses": {},
        "parameters": [
          {
            "type": "integer",
            "required": false,
            "name": "batch_id",
            "in": "query",
            "description": "Batch Id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.BatchController.get_order",
        "description": "",
        "deprecated": true
      }
    },
    "/api/v3/dispatcher/company/configurations/plugin": {
      "put": {
        "tags": [
          "[Dispatcher] Company"
        ],
        "summary": "This endpoint deletes a configuration",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "name",
            "in": "path",
            "description": "Plugin name"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.CompanyController.delete_plugin_configuration",
        "description": ""
      }
    },
    "/api/v3/dispatcher/senders/{id}/order_field_template": {
      "post": {
        "tags": [
          "[Dispatcher] Sender"
        ],
        "summary": "This endpoint deletes an order field template for a sender",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Order field template id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderFieldTemplateController.delete_order_field_template",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Sender"
        ],
        "summary": "This endpoint retrieves a sender's order field template",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/OrderFieldTemplatesResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Sender id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrderFieldTemplateController.show_order_field_template",
        "description": ""
      }
    },
    "/api/v3/dispatcher/workers/:id/tasks/ongoing": {
      "get": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "This endpoint retrieves a list of a Worker's ongoing Tasks",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TasksResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker ID"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.ongoing",
        "description": ""
      }
    },
    "/api/v3/sender/order_items/cancel_multiple": {
      "put": {
        "tags": [
          "[Sender] Order Item"
        ],
        "summary": "This endpoint cancels an Order Item",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "x-example": [
              123,
              321
            ],
            "schema": "string",
            "required": false,
            "name": "ids",
            "in": "body",
            "description": "IDs of order item"
          },
          {
            "x-example": [
              "YOJ-12345",
              "YOJ-12366"
            ],
            "schema": "string",
            "required": false,
            "name": "tracking_numbers",
            "in": "body",
            "description": "Tracking numbers"
          },
          {
            "x-example": [
              "ext3333",
              "ext2222"
            ],
            "schema": "string",
            "required": false,
            "name": "external_customer_ids",
            "in": "body",
            "description": "External customer ids"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.OrderItemController.cancel_multiple",
        "description": "This API is used to cancel an order item. Require input one of 3 fields(ids, tracking_numbers, external_customer_ids)"
      }
    },
    "/api/v3/public/orders/non_operational_zones": {
      "get": {
        "tags": [
          "[Public] Order"
        ],
        "summary": "This endpoint retrieves a company's non-operational zones",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "company_slug",
            "in": "query",
            "description": "Company Slug"
          }
        ],
        "operationId": "ApiWeb.V3.Public.OrdersController.non_operational_zones",
        "description": ""
      }
    },
    "/api/v3/worker/worker_sequence": {
      "get": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint is used by a Worker fetch worker sequence detail",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.WorkerSequenceController.show",
        "description": ""
      }
    },
    "/api/v3/dispatcher/service_time_conditions/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Service Time Condition"
        ],
        "summary": "This endpoint updates a Service Time Condition's information",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateSenderResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Service Time Condition ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateSenderRequest"
            },
            "required": false,
            "name": "service_time_condition",
            "in": "body",
            "description": "Service Time Condition information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ServiceTimeConditionController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Service Time Condition"
        ],
        "summary": "This endpoint retrieves information about Service Time Condition",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherCreateSenderResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Sender ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ServiceTimeConditionController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Service Time Condition"
        ],
        "summary": "This endpoint deletes a Service Time Condition",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Service Time Condition ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ServiceTimeConditionController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/partners/{id}/mark_inactive": {
      "put": {
        "tags": [
          "[Dispatcher] Partner"
        ],
        "summary": "This endpoint is used to mark a partnership inactive",
        "responses": {
          "200": {
            "description": "Mark partnership inactive successfully"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Partnership ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerController.mark_inactive",
        "description": ""
      }
    },
    "/api/v3/dispatcher/dispatch_rule/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Dispatch Rule"
        ],
        "summary": "This endpoint updates a dispatch rule",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatchRuleCreateRequest"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Dispatch rule update request"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.DispatchRuleController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Dispatch Rule"
        ],
        "summary": "This endpoint updates a dispatch rule",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatchRuleCreateRequest"
            },
            "required": false,
            "name": "tasks",
            "in": "body",
            "description": "Dispatch rule update request"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.DispatchRuleController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Dispatch Rule"
        ],
        "summary": "This endpoint shows the dispatch rule details",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatchRuleResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Dispatch Rule id"
          },
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.DispatchRuleController.show",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Dispatch Rule"
        ],
        "summary": "This endpoint deletes a dispatch rule",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatchRuleResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Dispatch Rule Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.DispatchRuleController.delete",
        "description": ""
      }
    },
    "/api/v3/enterprise/user/{id}/add_to_companies": {
      "post": {
        "tags": [
          "[Enterprise] User"
        ],
        "summary": "This endpoint adds an enterprise user to companies (as a dispatcher)",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/EnterpriseUserResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Enterprise user id"
          },
          {
            "schema": {
              "$ref": "#/definitions/AddEnterpriseUserCompanyRequest"
            },
            "required": false,
            "name": "enterprise_user",
            "in": "body",
            "description": "Dispatcher info for enterprise user"
          }
        ],
        "operationId": "ApiWeb.V3.Enterprise.EnterpriseUserController.add_enterprise_user_to_companies",
        "description": ""
      }
    },
    "/api/v3/public/companies": {
      "post": {
        "tags": [
          "[Public] Trial Company"
        ],
        "summary": "This endpoint creates trial company",
        "responses": {
          "200": {
            "description": {
              "message": "Company was created"
            }
          }
        },
        "parameters": [
          {
            "schema": {
              "$ref": "#/definitions/CompanyRequest"
            },
            "required": false,
            "name": "company",
            "in": "body",
            "description": "Trial Company"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherRequest"
            },
            "required": false,
            "name": "dispatcher",
            "in": "body",
            "description": "Dispatcher"
          },
          {
            "schema": {
              "$ref": "#/definitions/OptionsRequest"
            },
            "required": false,
            "name": "options",
            "in": "body",
            "description": "Options"
          }
        ],
        "operationId": "ApiWeb.V3.Public.CompanyController.create",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/task_type_mappings": {
      "put": {
        "tags": [
          "[Dispatcher] Company"
        ],
        "summary": "This endpoint updates a Company's task type mappings",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaskTypeMappingResponse"
            },
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task type mapping id"
          },
          {
            "schema": {
              "$ref": "#/definitions/TaskTypeMappingRequest"
            },
            "required": false,
            "name": "task_type_mapping",
            "in": "body",
            "description": "Task type mapping information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskTypeMappingController.update",
        "description": ""
      },
      "post": {
        "tags": [
          "[Dispatcher] Company"
        ],
        "summary": "This endpoint creates a task type mapping",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TaskTypeMappingResponse"
            },
            "description": "Ok"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/TaskTypeMappingRequest"
            },
            "required": false,
            "name": "task_type_mapping",
            "in": "body",
            "description": "Task type mapping information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TaskTypeMappingController.create",
        "description": ""
      }
    },
    "/api/v3/dispatcher/chat/channel": {
      "put": {
        "tags": [
          "[Dispatcher] Chat"
        ],
        "summary": "This endpoint returns update worker channel data",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": "string",
            "required": false,
            "name": "last_read_at",
            "in": "body",
            "description": "Last read on date in ISO8601 format"
          },
          {
            "schema": "string",
            "required": false,
            "name": "channel_id",
            "in": "body",
            "description": "Channel id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.ChatController.update",
        "description": ""
      }
    },
    "/api/v3/dispatcher/track/{number}": {
      "get": {
        "tags": [
          "[Dispatcher] Track Order"
        ],
        "summary": "This endpoint retrieves tracking information for an Order",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TrackOrderResponse"
            },
            "description": "Got tracking data"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": "",
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Tracking number"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": false,
            "name": "sender_id",
            "in": "query",
            "description": "sender id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TrackController.track_order",
        "description": ""
      }
    },
    "/api/v3/sender/track/{number}": {
      "get": {
        "tags": [
          "[Sender] Track Order"
        ],
        "summary": "This endpoint retrieves tracking information for an Order",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TrackOrderResponse"
            },
            "description": "Got tracking data"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "SENDER_ORGANISATION_SLUG",
            "in": "header",
            "description": "sender organisation slug - required for organisational sender"
          },
          {
            "x-example": "",
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Tracking number"
          }
        ],
        "operationId": "ApiWeb.V3.Sender.TrackController.track_order",
        "description": ""
      }
    },
    "/api/v3/dispatcher/roles/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] Role"
        ],
        "summary": "This endpoint updates a Role",
        "responses": {
          "200": {
            "description": {
              "$ref": "#/definitions/DispatcherCreateRoleResponse"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Role Id"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateRoleRequest"
            },
            "required": false,
            "name": "role",
            "in": "body",
            "description": "Role information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.RoleController.update",
        "description": ""
      },
      "patch": {
        "tags": [
          "[Dispatcher] Role"
        ],
        "summary": "This endpoint updates a Role",
        "responses": {
          "200": {
            "description": {
              "$ref": "#/definitions/DispatcherCreateRoleResponse"
            }
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Role Id"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateRoleRequest"
            },
            "required": false,
            "name": "role",
            "in": "body",
            "description": "Role information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.RoleController.update",
        "description": ""
      },
      "delete": {
        "tags": [
          "[Dispatcher] Role"
        ],
        "summary": "This endpoint deletes a Role",
        "responses": {
          "200": {
            "description": "Role deleted"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Role Id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.RoleController.delete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/waybill_templates/versions": {
      "get": {
        "tags": [
          "[Dispatcher] Waybill Template"
        ],
        "summary": "This endpoint retrieves a list of waybill template version",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WaybillTemplateVersionResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "item_type",
            "in": "query",
            "description": "Item type"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WaybillTemplateController.get_template_versions",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/{id}/complete": {
      "put": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint is used by a Worker to complete a Task",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task ID"
          },
          {
            "schema": "string",
            "required": false,
            "name": "completion_time",
            "in": "body",
            "description": "Completion time"
          },
          {
            "schema": "string",
            "required": false,
            "name": "comment",
            "in": "body",
            "description": "comment for complete a task"
          },
          {
            "schema": {
              "$ref": "#/definitions/CompletionLocation"
            },
            "required": false,
            "name": "location",
            "in": "body",
            "description": "Completion location"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.complete",
        "description": ""
      }
    },
    "/api/v3/dispatcher/webhooks/{webhook_id}/webhook_logs": {
      "get": {
        "tags": [
          "[Dispatcher] WebhookLog"
        ],
        "summary": "This endpoint retrieves a list of WebhookLogs for an Webhook",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WebhookLogsResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "webhook_id",
            "in": "path",
            "description": "Webhook ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WebhookLogController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/check_for_updates": {
      "get": {
        "tags": [
          "[Worker]"
        ],
        "summary": "This endpoint checks if current installed app needs to be updated",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/VersionResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "os",
            "in": "query",
            "description": "operating system"
          },
          {
            "type": "integer",
            "required": false,
            "name": "version",
            "in": "query",
            "description": "version"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.InfoController.check_for_updates",
        "description": ""
      }
    },
    "/api/v3/worker/sub_tasks/bulk_complete": {
      "put": {
        "tags": [
          "[Worker] SubTask"
        ],
        "summary": "This endpoint completes several sub_tasks",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/WorkerSubTaskResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": {
              "$ref": "#/definitions/WorkerSubTaskBulkRequest"
            },
            "required": false,
            "name": "sub_task",
            "in": "body",
            "description": "SubTask"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.SubTaskController.complete_multi_sub_tasks",
        "description": ""
      }
    },
    "/api/v3/dispatcher/partners": {
      "get": {
        "tags": [
          "[Dispatcher] Partner"
        ],
        "summary": "This endpoint retrieves a list of Partners belonging to a Company",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherPartners"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          },
          {
            "type": "string",
            "required": false,
            "name": "type",
            "in": "query",
            "description": "Partnership type"
          },
          {
            "type": "string",
            "required": false,
            "name": "q",
            "in": "query",
            "description": "Search by company name"
          },
          {
            "type": "string",
            "required": false,
            "name": "state",
            "in": "query",
            "description": "Search by company is active or inactive"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PartnerController.index",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/subscriptions": {
      "post": {
        "tags": [
          "[Dispatcher] Subscription"
        ],
        "summary": "This endpoint creates a new subscription for a company",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "schema": "string",
            "required": false,
            "name": "provider_plan_name",
            "in": "body",
            "description": "Plan name"
          },
          {
            "schema": "string",
            "required": false,
            "name": "customer_token",
            "in": "body",
            "description": "Customer token"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PaymentController.create_subscription",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] Subscription"
        ],
        "summary": "This endpoint lists subscriptions for a company",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": "stripe",
            "type": "string",
            "required": true,
            "name": "provider_type",
            "in": "query",
            "description": "Payment provider type"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.PaymentController.list_subscriptions",
        "description": ""
      }
    },
    "/api/v3/dispatcher/workers/{id}/tasks/completed": {
      "get": {
        "tags": [
          "[Dispatcher] Worker"
        ],
        "summary": "This endpoint retrieves a list of a Worker's completed Tasks",
        "responses": {},
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Worker ID"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.WorkerController.completed",
        "description": ""
      }
    },
    "/api/v3/dispatcher/company/configuration": {
      "get": {
        "tags": [
          "[Dispatcher] Company"
        ],
        "summary": "This endpoint retrieves information about a Configuration",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateConfigurationResponse"
            },
            "description": "Got configuration"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.CompanyController.configuration",
        "description": ""
      }
    },
    "/api/v3/worker/task_groups/{task_group_id}/tasks/{id}": {
      "put": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint allows for the updating of a task",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Task Id"
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.update",
        "description": ""
      }
    },
    "/api/v3/dispatcher/organisations/{id}": {
      "put": {
        "tags": [
          "[Dispatcher] CorporateSender"
        ],
        "summary": "This endpoint updates a Corporate",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherOrganisationResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Organisation ID"
          },
          {
            "schema": {
              "$ref": "#/definitions/DispatcherUpdateOrganisationRequest"
            },
            "required": false,
            "name": "organisation",
            "in": "body",
            "description": "Organisation information"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrganisationController.update",
        "description": ""
      },
      "get": {
        "tags": [
          "[Dispatcher] CorporateSender"
        ],
        "summary": "This endpoint retrieves information about an Corporate (aka Organisation)",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/DispatcherOrganisationResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": true,
            "name": "id",
            "in": "path",
            "description": "Organisation ID"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.OrganisationController.show",
        "description": ""
      }
    },
    "/api/v3/dispatcher/track_item/{number}": {
      "get": {
        "tags": [
          "[Dispatcher] Track Order Item"
        ],
        "summary": "This endpoint retrieves tracking information for an Order Item",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TrackOrderItemResponse"
            },
            "description": "Got tracking data"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "x-example": "",
            "type": "string",
            "required": true,
            "name": "number",
            "in": "path",
            "description": "Tracking number"
          },
          {
            "x-example": 1,
            "type": "integer",
            "required": false,
            "name": "sender_id",
            "in": "query",
            "description": "sender id"
          }
        ],
        "operationId": "ApiWeb.V3.Dispatcher.TrackController.track_item",
        "description": ""
      }
    },
    "/api/v3/worker/tasks/history": {
      "get": {
        "tags": [
          "[Worker] Task"
        ],
        "summary": "This endpoint retrieves a Worker's Task history",
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/TasksHistoryResponse"
            },
            "description": "OK"
          }
        },
        "parameters": [
          {
            "type": "string",
            "required": true,
            "name": "ACCESS_TOKEN",
            "in": "header",
            "description": "access token"
          },
          {
            "type": "string",
            "required": true,
            "name": "COMPANY_SLUG",
            "in": "header",
            "description": "company slug"
          },
          {
            "type": "string",
            "required": false,
            "name": "range",
            "in": "query",
            "enum": [
              "today",
              "last_week",
              "last_four_weeks"
            ],
            "description": "Time range"
          },
          {
            "type": "integer",
            "required": true,
            "name": "page",
            "in": "query",
            "description": "Page number",
            "default": 1
          },
          {
            "type": "integer",
            "required": true,
            "name": "page_size",
            "in": "query",
            "description": "Page size",
            "default": 10
          }
        ],
        "operationId": "ApiWeb.V3.Worker.TaskController.history",
        "description": ""
      }
    }
  },
  "info": {
    "version": "3.0",
    "title": "Yojee APIs",
    "produces": "application/json",
    "consumes": "application/json"
  },
  "definitions": {
    "DispatcherCreateCorporateSenderRequest": {
      "type": "object",
      "title": "Corporate Sender Request",
      "properties": {
        "title": {
          "type": "string"
        },
        "sender_type": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "billing_address": {
          "type": "string"
        }
      },
      "example": {
        "title": "Engineer",
        "sender_type": "organisation",
        "phone": "+6598765432",
        "name": "Ralston",
        "email": "secondary_account@abc.com",
        "billing_address": "77 Robinson road, Singapore."
      }
    },
    "QuickAssignRequest": {
      "type": "object",
      "title": "Quick Assign Request",
      "example": {
        "worker_id": 3,
        "trip_id": 51234,
        "task_ids": [
          1,
          3,
          4
        ],
        "price_currency": "SGD",
        "commission": "23.00"
      }
    },
    "WorkerChatMessageResponse": {
      "type": "object",
      "title": "Chat Message Response",
      "properties": {
        "user_profile": {
          "type": "object"
        },
        "inserted_at": {
          "type": "string"
        },
        "incoming": {
          "type": "object"
        },
        "id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "content": {
          "type": "object"
        }
      },
      "example": {
        "user_profile": {
          "user_profile_id": 299,
          "name": "Demond Terry"
        },
        "inserted_at": "2018-10-23T07:57:27.538169Z",
        "incoming": false,
        "id": 133,
        "created_at": "2018-10-23T07:56:00.0Z",
        "content": {
          "type": "image",
          "text": "it has value if it is not attachment and it's type is 'text'",
          "attachment": {
            "thumbnail": "https://s3-ap-southeast-1.amazonaws.com/thumbnail_signature.png",
            "original": "https://s3-ap-southeast-1.amazonaws.com/original_signature.png"
          }
        }
      }
    },
    "RatingRequest": {
      "type": "object",
      "title": "Rating Request",
      "properties": {
        "payloads": {
          "type": "array"
        }
      },
      "example": {
        "payloads": [
          {
            "weight": 10,
            "quantity": 20,
            "pickup_postal_code": "068908",
            "dropoff_postal_code": "159405",
            "distance": 30,
            "currency": "SGD"
          }
        ]
      }
    },
    "DispatcherCreateMultipleUsersResponse": {
      "type": "object",
      "title": "Create Multiple user Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": [
          {
            "user_profile_id": 3499,
            "name": "Nam",
            "inserted_at": "2019-12-09T02:51:25.411608Z",
            "id": 1027,
            "email": "nam@abc.com"
          },
          {
            "user_profile_id": 3500,
            "name": "Nam Hoang",
            "inserted_at": "2019-12-09T02:51:25.831985Z",
            "id": 1028,
            "email": "nam@abcd.com"
          }
        ]
      }
    },
    "CreateAddressItemsRequest": {
      "type": "object",
      "title": "Create Address Items Request",
      "properties": {
        "items": {
          "type": "array",
          "description": "List of address items to be created"
        }
      },
      "example": {
        "address_items": [
          {
            "tags": [
              "tech",
              "important"
            ],
            "state": "SELANGOR",
            "postal_code": "47400",
            "location": {
              "lng": 101.6292271,
              "lat": 3.1293091
            },
            "external_id": "10",
            "country": "MY",
            "contact_phone": "03-77268216",
            "contact_name": "HL LEE & CO (D'SARA)",
            "contact_email": "",
            "contact_company": "",
            "city": "PETALING JAYA",
            "address2": "1, JALAN SS 20/27 PETALING JAYA",
            "address1": "UNIT 3A 13, 4TH FLOOR, BLOCK C, DAMANSARA INTAN"
          },
          {
            "tags": [
              "marketing",
              "important"
            ],
            "state": "SELANGOR",
            "postal_code": "46050",
            "location": {
              "lng": 101.6467951,
              "lat": 3.1049061
            },
            "external_id": "11",
            "country": "MY",
            "contact_phone": "03-7960 7761",
            "contact_name": "SIMON HUE & ASSOCIATES",
            "contact_email": "",
            "contact_company": "",
            "city": "PETALING JAYA",
            "address2": "18, JALAN PERSIARAN BARAT, PETALING JAYA",
            "address1": "W-09-06 AMCORP BUSINESS SUITE, 9TH FLOOR, MENARA MELAWANGI, AMCORP TRADE CENTRE"
          }
        ]
      },
      "description": "POST body for sender to create address items"
    },
    "RegionsResponse": {
      "type": "object",
      "title": "Regions Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "type": "operational",
            "tag": "poly5",
            "inserted_at": "2021-06-25 03:35:43.514754Z",
            "description": "Sample Region",
            "coordinates": [
              [
                {
                  "lng": 10,
                  "lat": 35
                },
                {
                  "lng": 45,
                  "lat": 45
                },
                {
                  "lng": 40,
                  "lat": 15
                },
                {
                  "lng": 20,
                  "lat": 10
                },
                {
                  "lng": 10,
                  "lat": 35
                }
              ],
              [
                {
                  "lng": 30,
                  "lat": 20
                },
                {
                  "lng": 35,
                  "lat": 35
                },
                {
                  "lng": 20,
                  "lat": 30
                },
                {
                  "lng": 30,
                  "lat": 20
                }
              ]
            ],
            "company_id": 1,
            "color": "red"
          }
        ]
      }
    },
    "SubTaskBulkRequest": {
      "type": "object",
      "title": "Dispatcher SubTask Bulk Complete Response",
      "properties": {
        "task_ids": {
          "type": "array"
        },
        "sub_task_rule_id": {
          "type": "integer"
        },
        "photos": {
          "type": "array"
        },
        "meta": {
          "type": "object"
        },
        "event": {
          "type": "string"
        },
        "completion_data": {
          "type": "object"
        },
        "action": {
          "type": "string"
        }
      },
      "example": {
        "task_ids": [
          2,
          3,
          4,
          5
        ],
        "sub_task_rule_id": 3,
        "photos": [
          "https://s3-ap-southeast-1.amazonaws.com/signature.jpg"
        ],
        "meta": {
          "photo_type": "Proof",
          "photo_title": "Signature"
        },
        "event": "pickup_completed",
        "completion_data": {
          "recipient_name": "recipient",
          "arrival_time": "2018-03-10T03:37:08"
        },
        "action": "upload_photo"
      }
    },
    "TaskExceptionReasonRequest": {
      "type": "object",
      "title": "Task Exception Reason Request",
      "properties": {
        "description": {
          "type": "string"
        },
        "company_id": {
          "type": "integer"
        }
      },
      "example": {
        "description": "Sender not available",
        "company_id": 1
      }
    },
    "WorkerSubTaskRequest": {
      "type": "object",
      "title": "Worker SubTask Request",
      "properties": {
        "task_id": {
          "type": "integer"
        },
        "sub_task_rule_id": {
          "type": "integer"
        },
        "photos": {
          "type": "array"
        },
        "completion_time": {
          "type": "string"
        },
        "completion_location": {
          "type": "object"
        },
        "completion_data": {
          "type": "object"
        }
      },
      "example": {
        "task_id": 2,
        "sub_task_rule_id": 3,
        "photos": [
          "https://s3-ap-southeast-1.amazonaws.com/signature.jpg"
        ],
        "completion_time": "2018-03-10T03:37:08",
        "completion_location": {
          "lng": 1,
          "lat": 1
        },
        "completion_data": {
          "recipient_name": "recipient",
          "arrival_time": "2018-03-10T03:37:08"
        }
      }
    },
    "TaskExceptionReasonsResponse": {
      "type": "object",
      "title": "Task Exception Reasons Response",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array"
        }
      },
      "example": {
        "message": "Got company task exception reasons",
        "data": [
          {
            "description": "Sender not available",
            "company_id": 1
          }
        ]
      }
    },
    "TripAssignRequest": {
      "type": "object",
      "title": "Trip Assign Request",
      "example": {
        "worker_id": 32334,
        "price_currency": "SGD",
        "commission": 23
      }
    },
    "DispatcherCreateWebhookResponse": {
      "type": "object",
      "title": "Webhook Response",
      "properties": {
        "url": {
          "type": "string"
        },
        "updated_at": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "sender_id": {
          "type": "object"
        },
        "secret_token": {
          "type": "string"
        },
        "inserted_at": {
          "type": "string"
        },
        "events": {
          "type": "array"
        },
        "company_id": {
          "type": "integer"
        }
      },
      "example": {
        "url": "https://cuong.free.beeceptor.com",
        "updated_at": "2018-10-23T07:57:27.538169Z",
        "status": "active",
        "secret_token": "AA-BB-CC",
        "inserted_at": "2018-10-23T07:57:27.538169Z",
        "events": [
          "sender.created",
          "payment.completed"
        ],
        "company_id": 1
      },
      "description": "Webhook response",
      "x-tags": [
        "DWebhook"
      ]
    },
    "DispatcherCreateOrderMultiLegRequest": {
      "type": "object",
      "title": "[Dispatcher] CreateOrderMultiLegRequest",
      "example": {
        "steps": [
          {
            "to_time": "2019-04-16T07:29:07.214740Z",
            "state": "Jurbarko raj.",
            "postal_code": "71443",
            "lng": 25.270641999999953,
            "lat": 54.7307254,
            "from_time": "2019-04-16T07:29:07.214740Z",
            "country": "Lithuania",
            "contact_phone": "+37063930131",
            "contact_name": "Karolis Gudiškis",
            "contact_email": "karolisgud@gmail.com",
            "address": "Didlaukio gatvė, Vilnius, Lithuania"
          },
          {
            "to_time": "2019-04-16T07:30:07.214740Z",
            "state": "Jurbarko raj.",
            "postal_code": "71443",
            "lng": 25.266571500000055,
            "lat": 54.7394219,
            "from_time": "2019-04-16T07:30:07.214740Z",
            "country": "Lithuania",
            "contact_phone": "+37063930131",
            "contact_name": "Karolis Gudiškis",
            "contact_email": "karolisgud@gmail.com",
            "address": "Baltupio gatvė, Vilnius, Lithuania"
          },
          {
            "to_time": "2019-04-16T07:31:07.214740Z",
            "state": "Jurbarko raj.",
            "postal_code": "71443",
            "lng": 25.27057339999999,
            "lat": 55.1966923,
            "from_time": "2019-04-16T07:31:07.214740Z",
            "country": "Lithuania",
            "contact_phone": "+37063930131",
            "contact_name": "Karolis Gudiškis",
            "contact_email": "karolisgud@gmail.com",
            "address": "Matijošių sodyba, Lithuania"
          },
          {
            "to_time": "2019-04-16T07:32:07.214740Z",
            "state": "Jurbarko raj.",
            "postal_code": "71443",
            "lng": 25.27057339999999,
            "lat": 55.1966923,
            "from_time": "2019-04-16T07:32:07.214740Z",
            "country": "Lithuania",
            "contact_phone": "+37063930131",
            "contact_name": "Karolis Gudiškis",
            "contact_email": "karolisgud@gmail.com",
            "address": "Matijošių sodyba, Lithuania"
          }
        ],
        "sender_type": "organisation",
        "sender_id": 586,
        "price_currency": "SGD",
        "price_amount": "0",
        "placed_by_user_profile_id": "1741",
        "items": [
          {
            "width": 1,
            "weight": 1,
            "volumetric_weight": 1,
            "volume": 1,
            "service_type_id": 300,
            "service_type": "custom",
            "quantity": 1,
            "payload_type": "document",
            "length": 1,
            "height": 1,
            "external_customer_id3": "TEST MULTILEG2",
            "external_customer_id2": "TEST MULTILEG2",
            "external_customer_id": "TEST MULTILEG2"
          }
        ],
        "item_steps": [
          {
            "type": "pickup",
            "step_sequence": 1,
            "step_group": 1,
            "order_step_id": 0,
            "item_id": 0
          },
          {
            "type": "dropoff",
            "step_sequence": 2,
            "step_group": 1,
            "order_step_id": 1,
            "item_id": 0
          },
          {
            "type": "pickup",
            "step_sequence": 3,
            "step_group": 2,
            "order_step_id": 2,
            "item_id": 0
          },
          {
            "type": "dropoff",
            "step_sequence": 4,
            "step_group": 2,
            "order_step_id": 3,
            "item_id": 0
          }
        ],
        "external_id": "TEST_MULTILEG2"
      },
      "description": "Create order Multileg Request"
    },
    "DispatcherCreateWorkerRequest": {
      "type": "object",
      "title": "Worker Request",
      "required": [
        "vehicle_type_ids",
        "current_vehicle_type_id",
        "password",
        "email",
        "phone",
        "name"
      ],
      "properties": {
        "vehicle_type_ids": {
          "type": "array",
          "description": "Worker's vehicle type ids"
        },
        "tags": {
          "type": "array",
          "description": "Additional tags"
        },
        "phone": {
          "type": "string",
          "description": "Phone number"
        },
        "password": {
          "type": "string",
          "description": "Password"
        },
        "name": {
          "type": "string",
          "description": "Full name"
        },
        "email": {
          "type": "string",
          "description": "Email"
        },
        "current_vehicle_type_id": {
          "type": "integer",
          "description": "Default vehicle type id"
        }
      },
      "example": {
        "vehicle_type_ids": [
          1,
          2
        ],
        "tester": false,
        "tags": [
          "tag1",
          "tag2"
        ],
        "region_ids": [
          1
        ],
        "phone": "+987654322",
        "password": "Password1!",
        "otp_token": "1122334455",
        "national_id": "11335577",
        "name": "Driver",
        "location": {
          "lng": 122.6428429677108,
          "lat": 65.67691234535297
        },
        "email": "contact@test.com",
        "driver_license": "22446688",
        "current_vehicle_type_id": 1
      }
    },
    "DispatcherUpdateVehicleRequest": {
      "type": "object",
      "title": "Vehicle Request",
      "properties": {
        "vehicle_type_id": {
          "type": "integer"
        },
        "vehicle_maker": {
          "type": "string"
        },
        "tags": {
          "type": "array"
        },
        "speed": {
          "type": "integer"
        },
        "plate_number": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "max_load_space_volume": {
          "type": "integer"
        },
        "max_carry_weight": {
          "type": "integer"
        },
        "is_active": {
          "type": "object"
        },
        "external_id": {
          "type": "string"
        },
        "carry_unit": {
          "type": "integer"
        }
      },
      "example": {
        "vehicle_type_id": 62,
        "vehicle_maker": "Toyota",
        "tags": [
          {
            "name": "Car"
          },
          {
            "name": "Truck"
          },
          {
            "name": "Delivery"
          }
        ],
        "speed": 100,
        "plate_number": "X123456",
        "model": "Everest",
        "max_load_space_volume": 900,
        "max_carry_weight": 600,
        "is_active": true,
        "external_id": "1",
        "carry_unit": 50
      },
      "description": "PUT body for update vehicle"
    },
    "TaskTypeMappingResponse": {
      "type": "object",
      "title": "Task type mapping response",
      "example": {
        "slug": "pickup",
        "marker_text": "P",
        "marker_color": "rgb(45,59,75)",
        "id": 1,
        "display_name": "Pickup",
        "company_id": 1
      }
    },
    "DispatcherIndexRoleResponse": {
      "type": "object",
      "title": "Role Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "name": "role_1",
            "inserted_at": "2021-06-25 03:35:43.512709Z",
            "company_id": 123,
            "access_map": {
              "sender": {
                "add": true
              }
            }
          }
        ]
      }
    },
    "DispatcherUpdateUserRequest": {
      "type": "object",
      "title": "User Update Request",
      "required": [
        "phone",
        "name"
      ],
      "properties": {
        "phone": {
          "type": "string",
          "description": "Phone number"
        },
        "password": {
          "type": "string",
          "description": "Password"
        },
        "name": {
          "type": "string",
          "description": "Full name"
        }
      },
      "example": {
        "phone": "+987654330",
        "password": "Password1!",
        "name": "Dispatcher"
      },
      "description": "POST body for updating dispatcher user"
    },
    "DispatcherPartners": {
      "type": "object",
      "title": "Partners Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 2,
          "total_count": 1,
          "limit_value": 2,
          "current_page": 1
        },
        "data": [
          {
            "view_activities_requested_at": "2018-05-22T14:33:57.131041Z",
            "view_activities_enabled_at": "2018-05-22T14:33:57.131041Z",
            "state": "pending",
            "requested_at": "2018-05-22T14:33:57.131041Z",
            "postal_code": "321021",
            "partnership_type": "downstream",
            "country": "Singapore",
            "contact_phone": "+6591245934",
            "contact_name": "Ralston",
            "contact_email": "ralston@xyz.com",
            "company_slug": "yojee-downstream",
            "company_name": "XYZ",
            "city": "Singapore",
            "cip": "CIP-XJSI232KGTDYTDT",
            "address": "77 Robinson road, Singapore."
          }
        ]
      }
    },
    "DispatcherUpdateRoleRequest": {
      "type": "object",
      "title": "Role Update Request",
      "properties": {
        "name": {
          "type": "string",
          "description": "Role name"
        },
        "company_id": {
          "type": "integer",
          "description": "Company ID"
        },
        "access_map": {
          "type": "object",
          "description": "Access Map"
        }
      },
      "example": {
        "updated_at": "2021-06-25 03:35:43.512842Z",
        "name": "role_1",
        "company_id": 123,
        "access_map": {
          "sender": {
            "add": true
          }
        }
      },
      "description": "POST body for updating roles"
    },
    "CompaniesThemeResponse": {
      "type": "object",
      "title": "Driver's companies Response",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array"
        }
      },
      "example": {
        "message": "Got list of companies theme",
        "data": [
          {
            "logo": "https://yojee-uploads-dev.s3.amazonaws.com/uploads/companies/467/logo/467_original_scharff.png?v=63689286187",
            "company_slug": "scharff",
            "brand_color": "#FF7177"
          },
          {
            "logo": "https://s3-ap-southeast-1.amazonaws.com/yojee-public/order_logo.jpg",
            "company_slug": "testcorp-r1",
            "brand_color": "#80c939"
          },
          {
            "logo": "https://s3-ap-southeast-1.amazonaws.com/yojee-public/order_logo.jpg",
            "company_slug": "ups",
            "brand_color": "#301506"
          },
          {
            "logo": "https://s3-ap-southeast-1.amazonaws.com/yojee-public/order_logo.jpg",
            "company_slug": "yojee",
            "brand_color": "#80c939"
          },
          {
            "logo": "https://yojee-uploads-demo.s3.amazonaws.com/uploads/companies/4/logo/4_original_TASMAN%20LOGO_330x60px.png?v=63692636534",
            "company_slug": "tasman",
            "brand_color": "#054875"
          },
          {
            "logo": "https://s3-ap-southeast-1.amazonaws.com/yojee-public/sila_logo.png",
            "company_slug": "sila",
            "brand_color": "#d2232a"
          }
        ]
      }
    },
    "DispatcherInfoResponse": {
      "type": "object",
      "title": "Dispatcher info",
      "properties": {
        "socket_token": {
          "type": "string"
        },
        "role": {
          "type": "object"
        },
        "phone": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "device_token": {
          "type": "string"
        },
        "company": {
          "type": "object"
        }
      },
      "example": {
        "socket_token": "ISO32ADFSANFSKSL",
        "role": {
          "permission": {
            "dispatcher.test.blitz": {
              "role_permission": true,
              "group_features": [
                "Onboarding"
              ],
              "company_permission": "show"
            }
          },
          "name": "Admin",
          "id": 1,
          "access_map": {}
        },
        "phone": "+849039233232",
        "name": "John Doe",
        "id": 1,
        "email": "contact@test.com",
        "device_token": "AJKS13JD322OAFS",
        "company": {}
      }
    },
    "ApplyOperationsResponse": {
      "type": "object",
      "title": "Apply Operations Response",
      "example": {
        "data": [
          {
            "type": "pickup",
            "step_sequence": 1,
            "step_group": 0,
            "service_by_hub_id": 1,
            "order_step": {
              "state": "Singapore",
              "postal_code": 486029,
              "location": {
                "lng": 103.9647923,
                "lat": 1.3326343
              },
              "country": "Singapore",
              "contact_phone": "+6534567890",
              "contact_name": "John",
              "contact_email": "john_smith@test.com",
              "contact_company": "Tester",
              "address": "2 Changi Business Park Crescent"
            },
            "id": 1,
            "address_item_id": 1,
            "address_item": {
              "tags": [],
              "location": {
                "lng": 103.84817049999992,
                "lat": 1.2782636
              },
              "id": 1,
              "address1": "144 Robinson Rd, The Corporate Office, Singapore 068908"
            }
          },
          {
            "type": "dropoff",
            "step_sequence": 2,
            "step_group": 0,
            "service_by_hub_id": 1,
            "operation_id": 1,
            "id": 1,
            "address_item_id": 1,
            "address_item": {
              "tags": [],
              "location": {
                "lng": 103.84817049999992,
                "lat": 1.2782636
              },
              "id": 1,
              "address1": "144 Robinson Rd, The Corporate Office, Singapore 068908"
            }
          },
          {
            "type": "pickup",
            "step_sequence": 3,
            "step_group": 0,
            "service_by_hub_id": 1,
            "operation_id": 1,
            "id": 1,
            "address_item_id": 1,
            "address_item": {
              "tags": [],
              "location": {
                "lng": 103.84817049999992,
                "lat": 1.2782636
              },
              "id": 1,
              "address1": "144 Robinson Rd, The Corporate Office, Singapore 068908"
            }
          },
          {
            "type": "dropoff",
            "step_sequence": 4,
            "step_group": 0,
            "service_by_hub_id": 1,
            "order_step": {
              "state": "Kuala Lumpur",
              "postal_code": 50470,
              "location": {
                "lng": 101.6841484,
                "lat": 3.1343385
              },
              "country": "Malaysia",
              "contact_phone": "+60 016 1234567",
              "contact_name": "Bob",
              "contact_email": "bob@test.com",
              "contact_company": "Tester_kl",
              "address": "Stesen Sentral Kuala Lumpur"
            },
            "id": 1,
            "address_item_id": 1,
            "address_item": {
              "tags": [],
              "location": {
                "lng": 103.84817049999992,
                "lat": 1.2782636
              },
              "id": 1,
              "address1": "144 Robinson Rd, The Corporate Office, Singapore 068908"
            }
          }
        ]
      }
    },
    "DispatcherCreateVehicleRequest": {
      "type": "object",
      "title": "Vehicle Request",
      "properties": {
        "vehicle_type_id": {
          "type": "integer"
        },
        "vehicle_maker": {
          "type": "string"
        },
        "tags": {
          "type": "array"
        },
        "speed": {
          "type": "integer"
        },
        "plate_number": {
          "type": "string"
        },
        "model": {
          "type": "string"
        },
        "max_load_space_volume": {
          "type": "integer"
        },
        "max_carry_weight": {
          "type": "integer"
        },
        "is_active": {
          "type": "object"
        },
        "external_id": {
          "type": "string"
        },
        "carry_unit": {
          "type": "integer"
        }
      },
      "example": {
        "vehicle_type_id": 62,
        "vehicle_maker": "Toyota",
        "tags": [
          {
            "name": "Car"
          },
          {
            "name": "Truck"
          },
          {
            "name": "Delivery"
          }
        ],
        "speed": 100,
        "plate_number": "X123456",
        "model": "Everest",
        "max_load_space_volume": 900,
        "max_carry_weight": 600,
        "is_active": true,
        "external_id": "1",
        "carry_unit": 50
      },
      "description": "POST body for creating new vehicle"
    },
    "CreateEnterpriseUserRequest": {
      "type": "object",
      "title": "Create Enterprise User Request",
      "properties": {
        "phone": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "companies": {
          "type": "object"
        }
      },
      "example": {
        "phone": "+65 12312312",
        "name": "Enterprise User 1",
        "email": "test_enterprise_user@yojee.com",
        "companies": {
          "kn-thai": {
            "role_ids": [
              3,
              4
            ],
            "filter_ids": [
              3,
              4
            ]
          },
          "kn-ph": {
            "role_ids": [
              1,
              2
            ],
            "filter_ids": [
              1,
              2
            ]
          }
        }
      }
    },
    "GetPricesRequest": {
      "type": "object",
      "title": "Get Prices Request",
      "properties": {
        "to_address": {
          "description": "Dropoff address",
          "$ref": "#/definitions/OrderAddress"
        },
        "slug": {
          "type": "string",
          "description": "yojee"
        },
        "item": {
          "$ref": "#/definitions/OrderItem"
        },
        "from_address": {
          "description": "Pickup address",
          "$ref": "#/definitions/OrderAddress"
        }
      },
      "example": {
        "to_address": {
          "zipcode": "189703",
          "location": "1.2976764,103.85701760000006",
          "lng": "103.85701760000006",
          "lat": "1.2976764",
          "country": "Singpore"
        },
        "slug": "yojee",
        "item": {
          "weight": 4
        },
        "from_address": {
          "zipcode": "068896",
          "location": "1.2777689,103.84839149999993",
          "lng": "103.84839149999993",
          "lat": "1.2777689",
          "country": "Singpore"
        }
      },
      "description": "Get the price estimate"
    },
    "BatchCancelledResponse": {
      "type": "object",
      "title": "Batch Response",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      },
      "example": {
        "message": "Batch cancelled.",
        "data": {
          "id": 1
        }
      }
    },
    "AllocationRequest": {
      "type": "object",
      "title": "Allocation Request",
      "example": {
        "_json": [
          {
            "worker_id": 2,
            "tasks": [
              {
                "id": "startFromDepot",
                "eta": "2018-08-20T16:00:00.000Z"
              },
              {
                "polyline": [
                  [
                    103.96689,
                    1.330653
                  ],
                  [
                    103.96689,
                    1.330653
                  ]
                ],
                "id": "46",
                "eta": "2018-08-20T23:45:00.000Z"
              }
            ],
            "polyline": [
              [
                103.96689,
                1.330653
              ],
              [
                103.96689,
                1.330653
              ],
              [
                103.96689,
                1.330653
              ],
              [
                103.96689,
                1.330653
              ]
            ],
            "commission": "23.00"
          },
          {
            "worker_id": 232,
            "tasks": [
              {
                "id": "startFromDepot",
                "eta": "2018-08-20T16:00:00.000Z"
              },
              {
                "polyline": [
                  [
                    103.96689,
                    1.330653
                  ],
                  [
                    103.96689,
                    1.330653
                  ]
                ],
                "id": "1223",
                "eta": "2018-08-20T23:45:00.000Z"
              }
            ],
            "polyline": [
              [
                103.96689,
                1.330653
              ],
              [
                103.96689,
                1.330653
              ],
              [
                103.96689,
                1.330653
              ]
            ],
            "commission": "43.00"
          }
        ]
      }
    },
    "DispatcherVehicleTypeResponse": {
      "type": "object",
      "title": "single vehicle type response",
      "properties": {
        "routing_vehicle_profile_name": {
          "type": "string"
        },
        "routing_vehicle_profile_id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "max_load_space_volume": {
          "type": "integer"
        },
        "max_carry_weight": {
          "type": "integer"
        },
        "id": {
          "type": "integer"
        },
        "company_id": {
          "type": "integer"
        },
        "carry_unit": {
          "type": "integer"
        }
      },
      "example": {
        "routing_vehicle_profile_name": "bicycle",
        "routing_vehicle_profile_id": 4,
        "name": "chenfei",
        "max_load_space_volume": 22,
        "max_carry_weight": 3,
        "id": 2,
        "company_id": 1,
        "carry_unit": 8
      }
    },
    "DispatcherCreateMultipleSendersErrorResponse": {
      "type": "object",
      "title": "Create Multiple Sender Error Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": [
          {
            "message": "The email already exists.",
            "email": "nam@abc.com"
          },
          {
            "message": "The email already exists.",
            "email": "nam@abcd.com"
          }
        ]
      }
    },
    "DispatcherCreateMultipleUsersRequest": {
      "type": "object",
      "title": "Create Multiple users Request",
      "properties": {
        "users": {
          "type": "array"
        }
      },
      "example": {
        "users": [
          {
            "name": "Nam",
            "email": "nam@abc.com"
          },
          {
            "name": "Nam Hoang",
            "email": "nam@abcd.com"
          }
        ]
      }
    },
    "DispatcherCreateUserRequest": {
      "type": "object",
      "title": "User Request",
      "required": [
        "email",
        "phone",
        "name"
      ],
      "properties": {
        "phone": {
          "type": "string",
          "description": "Phone number"
        },
        "name": {
          "type": "string",
          "description": "Full name"
        },
        "email": {
          "type": "string",
          "description": "Email"
        }
      },
      "example": {
        "phone": "+987654330",
        "name": "Dispatcher",
        "email": "contact@test.com"
      },
      "description": "POST body for creating new dispatcher user"
    },
    "DispatcherCreateWebhookRequest": {
      "type": "object",
      "title": "Webhook Request",
      "properties": {
        "url": {
          "type": "string"
        },
        "sender_id": {
          "type": "object"
        },
        "events": {
          "type": "array"
        }
      },
      "example": {
        "url": "https://cuong.free.beeceptor.com",
        "events": [
          "sender.created",
          "payment.completed"
        ]
      }
    },
    "DispatcherCreateWorkerTeamRequest": {
      "type": "object",
      "title": "Worker Team Request",
      "example": {
        "worker_ids": [
          1,
          2,
          3
        ],
        "name": "Changi morning shift"
      }
    },
    "DispatcherSendersResponse": {
      "type": "object",
      "title": "Senders Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 2,
          "total_count": 1,
          "limit_value": 2,
          "current_page": 1
        },
        "data": [
          {
            "sender_user_profile_id": 1,
            "sender_type": "individual",
            "phone": "+8412345611",
            "password": "Password1!",
            "name": "Sender",
            "inserted_at": "2021-06-25 03:35:43.499546Z",
            "id": 5,
            "email": "contact@test.com",
            "billing_address": "80 Robinson Road"
          }
        ]
      }
    },
    "DispatcherVehiclesResponse": {
      "type": "object",
      "title": "Vehicles Response",
      "properties": {
        "pagination": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 1,
          "total_count": 1,
          "limit_value": 10,
          "current_page": 1
        },
        "message": "Got list of company vehicles.",
        "data": [
          {
            "vehicle_type": "Anu's Van",
            "vehicle_maker": "Toyota",
            "tags": [
              "tech",
              "important"
            ],
            "plate_number": "X123456",
            "model": "Everest",
            "id": 8,
            "external_id": "1",
            "company_id": 1
          }
        ]
      }
    },
    "TaskGroupsResponse": {
      "type": "object",
      "title": "TaskGroup Response",
      "properties": {
        "data": {
          "type": "array",
          "description": "List of task group"
        }
      },
      "example": {
        "data": [
          {
            "type": "pickup",
            "to": "2018-03-27T10:00:00.000000Z",
            "task_group_id": 4213,
            "state": "created",
            "start_time": "2018-03-27T10:00:00.000000Z",
            "service_type": "next_day",
            "price": "SGD 10",
            "postal_code": "84184",
            "order_item_tracking_number": "YOJ-229",
            "order_item_id": 229,
            "lng": 103.90331700000002,
            "lat": 1.329095,
            "item": {
              "width": 29,
              "weight": 5,
              "volumetric_weight": 121945,
              "volume": 200,
              "length": 29,
              "height": 29,
              "global_tracking_number": "Y-MEJZPQ"
            },
            "id": 1,
            "from": "2018-03-27T02 =>00 =>00.000000Z",
            "external_id": "ID-1",
            "external_customer_id3": "1345564",
            "external_customer_id2": "545415",
            "external_customer_id": "54418",
            "description": "TEST",
            "country": "Singapore",
            "container_no": "13",
            "contact": {
              "phone": "+6591234567",
              "name": "kris sender"
            },
            "completion_time": "2018-03-26T09 =>49 =>42.679519Z",
            "address_state": "State",
            "address2": "TESTAS",
            "address": "Singapore 400314",
            "additional_info": "Info"
          }
        ]
      }
    },
    "RefreshTokenResponse": {
      "type": "object",
      "title": "RefreshTokenResponse",
      "properties": {
        "token_type": {
          "type": "string"
        },
        "refresh_token": {
          "type": "string"
        },
        "refresh_expires_in": {
          "type": "integer"
        },
        "expires_in": {
          "type": "integer"
        },
        "access_token": {
          "type": "string"
        }
      },
      "example": {
        "token_type": "bearer",
        "refresh_token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9",
        "refresh_expires_in": 604415,
        "expires_in": 900,
        "access_token": "eyJhY2Nlc3NfdHlwZSI6Im1haW4iLCJjb21wYW55X2lkIjoxLCJjb21w"
      }
    },
    "SubTaskResponse": {
      "type": "object",
      "title": "Dispatcher SubTask Response",
      "properties": {
        "task_id": {
          "type": "integer"
        },
        "sub_task_rule_id": {
          "type": "integer"
        },
        "photos": {
          "type": "array"
        },
        "meta": {
          "type": "object"
        },
        "id": {
          "type": "integer"
        },
        "event": {
          "type": "string"
        },
        "completion_time": {
          "type": "string"
        },
        "company_id": {
          "type": "integer"
        },
        "action": {
          "type": "string"
        }
      },
      "example": {
        "task_id": 103,
        "sub_task_rule_id": 21,
        "photos": [
          "https://s3-ap-southeast-1.amazonaws.com/signature.jpg"
        ],
        "meta": {
          "photo_type": "Proof",
          "photo_title": "Signature"
        },
        "id": 21,
        "event": "pickup_completed",
        "completion_time": "2018-03-10T03:37:08",
        "company_id": 136,
        "action": "upload_photo"
      }
    },
    "OrderItemsIndexResponse": {
      "type": "object",
      "title": "OrderItem index Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 2,
          "total_count": 1,
          "limit_value": 2,
          "current_page": 1
        },
        "data": [
          {
            "length": "50",
            "sender_phone": "+6512345678",
            "is_from_transfer": false,
            "task_group_id": 8,
            "from_lat": 1.2800305,
            "price_currency": "SGD",
            "width": "40",
            "quantity": 1,
            "description": "Item A",
            "item_number": 7,
            "tracking_number": "YOJ-PT1SDBX9IJQ0",
            "volume": "16",
            "price_info": "Base price: 10",
            "distance": 1664,
            "from_lng": 103.8492068,
            "created_at": "2020-08-20T03:51:13.359169Z",
            "from_address": "80 Robinson Road",
            "status": "created",
            "order_id": 8,
            "service_type": "same_day",
            "to_lat": 1.2880283,
            "to_address": "60 New Bridge Road",
            "service_type_id": 1,
            "sender_name": "Yojee Ops",
            "height": "40",
            "order_number": "O-5TYYMI6TPJKO",
            "weight": "5.5",
            "allow_transfer": true,
            "task_group_state": "unassigned",
            "recipient_name": "Yojee Ops",
            "id": 8,
            "price_amount": "10.00",
            "recipient_phone": "+6523456789",
            "to_lng": 103.846926
          }
        ]
      }
    },
    "CompanyConfigsResponse": {
      "type": "object",
      "title": "Config Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "rules": {
            "pickup": [
              {
                "title": "Upload image of client",
                "id": 1478,
                "action": "upload_photo"
              }
            ],
            "dropoff": [
              {
                "title": "Upload image of client",
                "id": 1479,
                "action": "upload_photo"
              }
            ]
          },
          "reasons": [
            {
              "reason": "Address is wrong",
              "id": 2
            }
          ],
          "currency": "SGD",
          "company_slug": "yojee"
        }
      }
    },
    "DispatcherRulesResponse": {
      "type": "object",
      "title": "Sub Task Rules Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 2,
          "total_count": 1,
          "limit_value": 1,
          "current_page": 1
        },
        "data": [
          {
            "meta": {
              "photo_type": "signature",
              "photo_title": "Signature of client"
            },
            "event": "pickup_completed",
            "company_id": 1,
            "action": "upload_photo"
          }
        ]
      }
    },
    "DispatcherRemoveWorkersToTeamRequest": {
      "type": "object",
      "title": "Worker Team Add Workers Request",
      "example": {
        "worker_ids": [
          1,
          2,
          3
        ]
      }
    },
    "SavedFilterCreateRequest": {
      "type": "object",
      "title": "Saved Filter Request",
      "example": {
        "service_type_ids": [
          300
        ],
        "sender_ids": [
          1,
          2,
          3
        ],
        "saved_filter": {
          "name": "Express from central Singapore"
        },
        "region_ids": [
          59,
          60
        ],
        "hub_ids": [
          4,
          5
        ]
      }
    },
    "OrderItemsShowResponse": {
      "type": "object",
      "title": "OrderItem Show Response",
      "properties": {
        "progress_session": {
          "type": "object"
        },
        "item_session": {
          "type": "object"
        },
        "delivery_trail": {
          "type": "array"
        }
      },
      "example": {
        "progress_session": [
          {
            "type": "assigned",
            "status": "success"
          },
          {
            "type": "pickup",
            "status": "blank"
          },
          {
            "type": "dropoff",
            "status": "blank"
          }
        ],
        "item_session": {
          "width": 1,
          "weight": 1,
          "status": "scheduled_for_fulfilment",
          "service_type_id": 1,
          "service_type": "same_day",
          "price": "SGD 10",
          "pickup": {
            "time_to": "2018-07-18T12:04:24.205427Z",
            "time_from": "2018-07-18T04:04:24.205427Z",
            "task_id": 65584,
            "state": "Singapore",
            "postal_code": "112233",
            "lng": 103.8481705,
            "lat": 1.2782636,
            "country": "Singapore",
            "contact_phone": "+6581551123",
            "contact_name": "vivek",
            "contact_email": "sender@example.com",
            "contact_company": "Adidas",
            "address2": "160 Robinson Road",
            "address": "80 Robinson Road"
          },
          "payload_type": "Package",
          "order_reference_number": "O-OEZRQLL1ADLU",
          "length": 1,
          "item_id": 33867,
          "is_from_transfer": false,
          "info": "info_test",
          "height": 1,
          "external_id": "External test #1",
          "external_customer_id3": "external_customer_id3_test",
          "external_customer_id2": "external_customer_id2_test",
          "external_customer_id": "external_customer_id_test",
          "editable": false,
          "dropoff": {
            "time_to": "2018-07-18T20:04:24.205427Z",
            "time_from": "2018-07-18T12:04:24.205427Z",
            "task_id": 65585,
            "state": "Singapore",
            "postal_code": "332211",
            "lng": 103.8645118,
            "lat": 1.3153658,
            "country": "Singapore",
            "contact_phone": "+6581551123",
            "contact_name": "vivek",
            "contact_email": "recipient@example.com",
            "contact_company": "Nike",
            "address2": "50 Boon Keng Rd",
            "address": "Boon Keng Rd"
          },
          "description": "Gift",
          "allow_transfer": false
        },
        "delivery_trail": [
          {
            "task_group_id": 42402,
            "state": "accepted",
            "log": [
              {
                "type": "worker_accepted_task_group",
                "logs": [
                  {
                    "inserted_at": "2018-07-18T04:04:24.256048Z",
                    "description": "Item accepted by Mrs. Antone Krajcik (07618671299)"
                  }
                ]
              }
            ]
          }
        ]
      }
    },
    "DispatcherUpdateSenderRequest": {
      "type": "object",
      "title": "Sender Update Request",
      "properties": {
        "phone": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "billing_address": {
          "type": "string"
        }
      },
      "example": {
        "phone": "+8412345611",
        "name": "Sender",
        "email": "contact@test.com",
        "billing_address": "80 Robinson Road"
      }
    },
    "CompanyUpdateSettingTaskExceptionOtherReasonRequest": {
      "type": "object",
      "title": "Company Task Exception Other Reason Settings Request",
      "required": [
        "settings"
      ],
      "properties": {
        "settings": {
          "type": "object",
          "description": "Task exception other reason settings object"
        }
      },
      "example": {
        "task_exception_other_reason": {
          "task_types": [
            "Wrong address"
          ],
          "active": true
        }
      },
      "description": "PUT body for updating company task exception other reason settings"
    },
    "JwtIssueResponse": {
      "type": "object",
      "title": "JWT issue response",
      "required": [
        "jwt"
      ],
      "properties": {
        "jwt": {
          "type": "string",
          "description": "JWT token"
        }
      },
      "example": {
        "jwt": "dfksdfKJSGD*&*&(*DHKJGDHKJ"
      },
      "description": "response from a JWT issue request"
    },
    "DispatchRuleResponse": {
      "type": "object",
      "title": "Dispatch Rule Response",
      "example": {
        "worker_teams": [],
        "worker_id": 593,
        "service_type_id": 300,
        "region_id": 59,
        "name": "Assign same day to Paul",
        "action": 1
      }
    },
    "WaybillTemplateResponse": {
      "type": "object",
      "title": "Waybill template Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "version": "123",
          "one_waybill_per_quantity": true,
          "item_type": "package",
          "is_active": true,
          "id": 81,
          "content": "abc",
          "company_id": 1
        }
      }
    },
    "TrackOrderItemResponse": {
      "type": "object",
      "title": "TrackOrderItemResponse",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": [
          {
            "status": "accepted",
            "order_items": [
              {
                "status": "scheduled_for_fulfilment",
                "service_type": "sameday",
                "order_item_steps": [
                  {
                    "type": "pickup",
                    "to_time": "2019-05-07T01:48:14.000000Z",
                    "state": "created",
                    "from_time": "2019-05-06T17:48:14.000000Z",
                    "contact_phone": "+6581551123",
                    "contact_name": "vivek",
                    "contact_email": "sender@example.com",
                    "contact_company": "Adidas",
                    "address_components": {
                      "state": "Singapore",
                      "postal_code": "112233",
                      "location": {
                        "lng": 103.7647132,
                        "lat": 1.4630478
                      },
                      "country": "Singapore",
                      "address2": "160 Robinson Road",
                      "address": "80 Robinson Road"
                    },
                    "address": "80 Robinson Road"
                  },
                  {
                    "type": "dropoff",
                    "to_time": "2019-05-07T09:48:14.000000Z",
                    "state": "created",
                    "from_time": "2019-05-07T01:48:14.000000Z",
                    "contact_phone": "+6581551123",
                    "contact_name": "vivek",
                    "contact_email": "recipient@example.com",
                    "contact_company": "Nike",
                    "address_components": {
                      "state": "Singapore",
                      "postal_code": "332211",
                      "location": {
                        "lng": 103.7647132,
                        "lat": 1.4630478
                      },
                      "country": "Singapore",
                      "address2": "50 Boon Keng Rd",
                      "address": "Boon Keng Rd"
                    },
                    "address": "Boon Keng Rd"
                  }
                ],
                "order_item_logs": [
                  {
                    "inserted_at": "2019-05-06T09:48:16.854717Z",
                    "event": "worker_accepted_item",
                    "description": "Dropoff at Boon keng rd accepted by Ludwig Graham (+447584471927)"
                  },
                  {
                    "inserted_at": "2019-05-06T09:48:16.856631Z",
                    "event": "worker_accepted_item",
                    "description": "Pickup at 80 robinson road accepted by Ludwig Graham (+447584471927)"
                  }
                ],
                "item_id": 53417,
                "item": {
                  "width": 1,
                  "weight": 1,
                  "quantity": 2,
                  "length": 1,
                  "id": 53417,
                  "height": 1
                }
              }
            ],
            "inserted_at": "2018-03-20T15:18:38.613719"
          }
        ]
      },
      "description": "Response schema for tracking an order item"
    },
    "TemplateUpdateRequest": {
      "type": "object",
      "title": "Company Template Request",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "object",
          "description": "Settings object"
        }
      },
      "example": {
        "id": 87,
        "fields_schema": {
          "pickup_address1": {
            "type": "wrong type",
            "system_required": false,
            "selected": true,
            "required": true,
            "position": 16,
            "name": "Address 1",
            "key": "pickup_address1",
            "default_value": "80 Robinson Road",
            "category": "wrong category"
          }
        }
      },
      "description": "PUT body for updating company settings"
    },
    "WebhookLogResponse": {
      "type": "object",
      "title": "Webhook Response",
      "properties": {
        "webhook_id": {
          "type": "integer"
        },
        "updated_at": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "retried_count": {
          "type": "integer"
        },
        "response_body": {
          "type": "string"
        },
        "inserted_at": {
          "type": "string"
        },
        "http_status_code": {
          "type": "string"
        },
        "event_type": {
          "type": "string"
        },
        "event_id": {
          "type": "string"
        },
        "event": {
          "type": "string"
        }
      },
      "example": {
        "webhook_id": 2,
        "updated_at": "2018-10-23T07:57:27.538169Z",
        "status": "succeeded",
        "retried_count": 1,
        "response_body": "OK",
        "inserted_at": "2018-10-23T07:57:27.538169Z",
        "http_status_code": "200",
        "event_type": "sender.created",
        "event_id": "X2yeIWLZr0qB6L",
        "event": "%{id: 'X2yeIWLZr0qB6L', data: %{}}"
      }
    },
    "RateChargeTypesResponse": {
      "type": "object",
      "title": "RateChargeTypes Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "name": "main",
            "inserted_at": "2021-06-25 03:35:43.545750Z",
            "description": "Base Freight",
            "code": "BFC"
          },
          {
            "name": "handling",
            "inserted_at": "2021-06-25 03:35:43.545769Z",
            "description": "Handling Charges",
            "code": "HC"
          },
          {
            "name": "fuel",
            "inserted_at": "2021-06-25 03:35:43.545775Z",
            "description": "Fuel Charges",
            "code": "FCC"
          },
          {
            "name": "gst",
            "inserted_at": "2021-06-25 03:35:43.545779Z",
            "description": "GST",
            "code": "GST"
          }
        ]
      }
    },
    "HubsResponse": {
      "type": "object",
      "title": "Hubs Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "slug": "2021-06-25 03:35:43.520558Z",
            "shortcode": "2021-06-25 03:35:43.520564Z",
            "regions": [
              "poly5"
            ],
            "properties": {
              "description": "Sample description",
              "address": "80 Robinson Road"
            },
            "name": "Sample Hub",
            "location": {
              "lng": 103.7647132,
              "lat": 1.4630478
            },
            "inserted_at": "2021-06-25 03:35:43.520569Z",
            "company_id": 1,
            "address_item": {
              "tags": [],
              "location": {
                "lng": 103.7647132,
                "lat": 1.4630478
              },
              "id": 465,
              "external_id": "Antonietta Cremin",
              "contact_phone": "+6581551123",
              "contact_name": "Long",
              "address1": "80 Robinson Road"
            }
          }
        ]
      }
    },
    "DispatcherVehicleTypesResponse": {
      "type": "object",
      "title": "vehicle types response",
      "properties": {
        "pagination": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 3,
          "total_count": 9,
          "limit_value": 3,
          "current_page": 1
        },
        "message": "get a list of vehicle types",
        "data": [
          {
            "routing_vehicle_profile_name": "bicycle",
            "routing_vehicle_profile_id": 4,
            "name": "Bicycle",
            "max_load_space_volume": 2,
            "max_carry_weight": 2,
            "id": 1,
            "company_id": 1,
            "carry_unit": 2
          },
          {
            "routing_vehicle_profile_name": "motorcycle",
            "routing_vehicle_profile_id": 3,
            "name": "Motorbike",
            "max_load_space_volume": 2,
            "max_carry_weight": 2,
            "id": 2,
            "company_id": 1,
            "carry_unit": 2
          },
          {
            "routing_vehicle_profile_name": "car",
            "routing_vehicle_profile_id": 2,
            "name": "Car",
            "max_load_space_volume": 2,
            "max_carry_weight": 12,
            "id": 3,
            "company_id": 1,
            "carry_unit": 3
          }
        ]
      }
    },
    "OrderItem": {
      "type": "object",
      "properties": {
        "weight": {
          "type": "integer"
        }
      }
    },
    "ListEnterpriseUsersResponse": {
      "type": "object",
      "title": "Create Enterprise User Request",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 2,
          "total_count": 1,
          "limit_value": 2,
          "current_page": 1
        },
        "data": [
          {
            "user_profile_id": 1,
            "phone": "+6512312312",
            "name": "Enterprise User 1",
            "enterprise_id": 1,
            "email": "test_enterprise_user@yojee.com",
            "companies": {
              "kn-thai": {
                "dispatcher_id": 2,
                "company_name": "KN Thailand",
                "company_id": 2
              },
              "kn-ph": {
                "dispatcher_id": 1,
                "company_name": "KN Philippines",
                "company_id": 1
              }
            }
          }
        ]
      }
    },
    "DispatcherWebhooksResponse": {
      "description": "Response for Webhook",
      "type": "object",
      "x-examples": {
        "example-1": {
          "pagination": {
            "total_pages": 2,
            "total_count": 1,
            "limit_value": 1,
            "current_page": 1
          },
          "data": [
            {
              "url": "https://cuong.free.beeceptor.com",
              "updated_at": "2018-10-23T07:57:27.538169Z",
              "status": "active",
              "secret_token": "AA-BB-CC",
              "inserted_at": "2018-10-23T07:57:27.538169Z",
              "events": [
                "sender.created",
                "payment.completed"
              ],
              "company_id": 1
            }
          ]
        }
      },
      "properties": {
        "data": {
          "type": "array",
          "uniqueItems": true,
          "minItems": 1,
          "items": {
            "type": "object",
            "properties": {
              "url": {
                "type": "string",
                "minLength": 1
              },
              "updated_at": {
                "type": "string",
                "minLength": 1
              },
              "status": {
                "type": "string",
                "minLength": 1
              },
              "secret_token": {
                "type": "string",
                "minLength": 1
              },
              "inserted_at": {
                "type": "string",
                "minLength": 1
              },
              "events": {
                "type": "array",
                "items": {
                  "type": "object"
                }
              },
              "company_id": {
                "type": "number"
              }
            },
            "required": [
              "url",
              "updated_at",
              "status",
              "secret_token",
              "inserted_at",
              "company_id"
            ]
          }
        },
        "pagination": {
          "type": "object",
          "required": [
            "total_pages",
            "total_count",
            "limit_value",
            "current_page"
          ],
          "properties": {
            "total_pages": {
              "type": "number"
            },
            "total_count": {
              "type": "number"
            },
            "limit_value": {
              "type": "number"
            },
            "current_page": {
              "type": "number"
            }
          }
        }
      },
      "required": [
        "data",
        "pagination"
      ],
      "title": "DispatcherWebhookResponse"
    },
    "CompanyThemeResponse": {
      "type": "object",
      "title": "Theme Response",
      "properties": {
        "logo": {
          "type": "string"
        },
        "company_slug": {
          "type": "string"
        },
        "company_id": {
          "type": "integer"
        },
        "brand_color": {
          "type": "string"
        }
      },
      "example": {
        "logo": "https://yojee-v2-uploads-dev.s3.amazonaws.com/uploads/companies/1/logo/1_original_mylogo1.png?v=63727525451",
        "company_slug": "yojee",
        "company_id": 1,
        "brand_color": "#4a90e2"
      }
    },
    "DispatcherVehicleResponse": {
      "type": "object",
      "title": "Vehicle Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "vehicle_type": "Anu's Van",
          "vehicle_maker": "Toyota",
          "tags": [
            {
              "value": "car",
              "name": "Car",
              "id": 24
            },
            {
              "value": "truck",
              "name": "Truck",
              "id": 25
            },
            {
              "value": "delivery",
              "name": "Delivery",
              "id": 26
            }
          ],
          "speed": 100,
          "plate_number": "X123456",
          "model": "Everest",
          "max_load_space_volume": 900,
          "max_carry_weight": 600,
          "is_active": true,
          "id": 8,
          "external_id": "1",
          "company_id": 1,
          "carry_unit": 50
        }
      }
    },
    "DispatcherPartnerCreate": {
      "type": "object",
      "title": "Partner Create Request",
      "required": [
        "partnership_type",
        "contact_name",
        "contact_email",
        "contact_phone",
        "state",
        "postal_code",
        "address",
        "company_name"
      ],
      "properties": {
        "state": {
          "type": "string",
          "description": "State"
        },
        "postal_code": {
          "type": "number",
          "description": "Postal code"
        },
        "partnership_type": {
          "type": "string",
          "description": "Partnership type"
        },
        "contact_phone": {
          "type": "string",
          "description": "Phone number"
        },
        "contact_name": {
          "type": "string",
          "description": "Contact name"
        },
        "contact_email": {
          "type": "string",
          "description": "Email"
        },
        "company_name": {
          "type": "string",
          "description": "Company name"
        },
        "address": {
          "type": "string",
          "description": "Registration address"
        }
      },
      "example": {
        "postal_code": "321021",
        "partnership_type": "downstream",
        "country": "Singapore",
        "contact_phone": "+6591245934",
        "contact_name": "Ralston",
        "contact_email": "ralston@xyz.com",
        "company_name": "XYZ",
        "city": "Singapore",
        "address": "77 Robinson road, Singapore."
      }
    },
    "DispatcherCreateMultipleSendersRequest": {
      "type": "object",
      "title": "Create Multiple Senders Request",
      "properties": {
        "users": {
          "type": "array"
        }
      },
      "example": {
        "users": [
          {
            "name": "Nam",
            "email": "nam@abc.com"
          },
          {
            "name": "Nam Hoang",
            "email": "nam@abcd.com"
          }
        ]
      }
    },
    "DispatcherAssignVehicleRequest": {
      "type": "object",
      "title": "Assign vehicle",
      "properties": {
        "vehicle_id": {
          "type": "integer"
        }
      },
      "example": {
        "vehicle_id": 2
      }
    },
    "ScheduleRequest": {
      "type": "object",
      "title": "Schedule Request",
      "properties": {
        "worker_id": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "start_event_datetime": {
          "type": "string"
        },
        "recurrence_rule": {
          "type": "string"
        },
        "priority": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "end_repeat_datetime": {
          "type": "string"
        },
        "end_event_datetime": {
          "type": "string"
        }
      },
      "example": {
        "worker_id": "1146",
        "type": "worker_on",
        "start_event_datetime": "2020-05-23T01:45:00.000Z",
        "recurrence_rule": "DTSTART:20200523T014517Z\nRRULE:FREQ=DAILY",
        "priority": 0,
        "name": "name schedule",
        "end_repeat_datetime": "2020-06-23T02:45:00.000Z",
        "end_event_datetime": "2020-05-23T02:45:00.000Z"
      }
    },
    "DispatcherCreateCorporateSenderResponse": {
      "type": "object",
      "title": "Corporate Sender Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "phone": "+6598765432",
          "email": "bob@mail.com",
          "access_token": "pCVPeEEUuKnM7geUOcSLY2imA5l6YUdjymkApBDAAGY="
        }
      }
    },
    "GetOtpResponse": {
      "type": "object",
      "title": "Get OTP",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "otp_code": "123456"
        }
      },
      "description": "Response schema for querying OTP"
    },
    "BulkTasksValidateCompletionResponse": {
      "type": "object",
      "title": "Bulk Task Validate Completion response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "message": "Task Completion Validation successful",
        "data": {
          "ok": {
            "task_ids": [
              6,
              7,
              8
            ]
          },
          "errors": [
            {
              "type": "task_not_found",
              "task_ids": [
                -1
              ],
              "message": "Tasks do not exist"
            },
            {
              "type": "task_completed",
              "task_ids": [
                1
              ],
              "message": "Tasks already completed"
            },
            {
              "type": "task_invalidated",
              "task_ids": [
                2,
                3
              ],
              "message": "Tasks not valid"
            },
            {
              "type": "task_failed",
              "task_ids": [
                4
              ],
              "message": "Tasks already failed"
            },
            {
              "type": "task_not_assigned_to_worker",
              "task_ids": [
                5
              ],
              "message": "Task does not belong to worker"
            }
          ]
        }
      }
    },
    "WorkerChatMessagesResponse": {
      "type": "object",
      "title": "Chat Messages Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "messages": [
            {
              "user_profile": {
                "user_profile_id": 299,
                "name": "Demond Terry"
              },
              "inserted_at": "2018-10-23T07:57:27.538169Z",
              "incoming": false,
              "id": 133,
              "created_at": "2018-10-23T07:56:00.0Z",
              "content": {
                "type": "image",
                "text": "it has value if it is not attachment and it's type is 'text'",
                "attachment": {
                  "thumbnail": "https://s3-ap-southeast-1.amazonaws.com/thumbnail_signature.png",
                  "original": "https://s3-ap-southeast-1.amazonaws.com/original_signature.png"
                }
              }
            }
          ],
          "channel": {
            "members": [],
            "id": 154
          }
        }
      }
    },
    "UpdateAddressItemsRequest": {
      "type": "object",
      "title": "Update Address Item Request",
      "properties": {
        "items": {
          "type": "array",
          "description": "List of address items to be updated"
        }
      },
      "example": {
        "address_items": [
          {
            "tags": "vip",
            "id": 1
          },
          {
            "tags": "vip",
            "id": 2
          }
        ]
      },
      "description": "PUT body for sender to update address items"
    },
    "TaskTypeMappingRequest": {
      "type": "object",
      "title": "Dispatcher create task type mapping request",
      "example": {
        "marker_text": "P",
        "marker_color": "rgb(45,59,75)",
        "display_name": "Pickup"
      }
    },
    "DispatcherAddWorkersToTeamRequest": {
      "type": "object",
      "title": "Worker Team Remove Workers Request",
      "example": {
        "worker_ids": [
          1,
          2,
          3
        ]
      }
    },
    "DispatcherSearchTagResponse": {
      "type": "object",
      "title": "Search Tag Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "value": "car",
            "name": "Car",
            "id": 22
          },
          {
            "value": "car",
            "name": "Car",
            "id": 24
          }
        ]
      }
    },
    "HubRequest": {
      "type": "object",
      "title": "Hub Request",
      "properties": {
        "slug": {
          "type": "string"
        },
        "shortcode": {
          "type": "string"
        },
        "regions": {
          "type": "array"
        },
        "properties": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "location": {
          "type": "object"
        },
        "deleted_at": {
          "type": "object"
        },
        "address_item": {
          "type": "object"
        }
      },
      "example": {
        "slug": "2021-06-25 03:35:43.520392Z",
        "shortcode": "2021-06-25 03:35:43.520398Z",
        "regions": [
          "poly5"
        ],
        "properties": {
          "description": "Sample description",
          "address": "80 Robinson Road"
        },
        "name": "Sample Hub",
        "location": {
          "lng": 103.7647132,
          "lat": 1.4630478
        },
        "address_item": {
          "tags": [],
          "location": {
            "lng": 103.7647132,
            "lat": 1.4630478
          },
          "id": 465,
          "external_id": "Antonietta Cremin",
          "contact_phone": "+6581551123",
          "contact_name": "Long",
          "address1": "80 Robinson Road"
        }
      }
    },
    "CreatePaymentRequest": {
      "type": "object",
      "title": "CreatePaymentRequest",
      "properties": {
        "token": {
          "type": "string",
          "description": "Payment token"
        },
        "payment_method": {
          "type": "string",
          "description": "Payment method"
        },
        "order_id": {
          "type": "integer",
          "description": "Order ID"
        },
        "description": {
          "type": "string",
          "description": "Description"
        },
        "currency": {
          "type": "string",
          "description": "Currency"
        },
        "amount": {
          "type": "number",
          "description": "Amount in cents"
        }
      },
      "example": {
        "token": "tok_visa_debit",
        "payment_method": "stripe",
        "order_id": 1,
        "description": "This is a test description",
        "currency": "SGD",
        "amount": 500
      },
      "description": "POST body for making payment"
    },
    "DispatcherWorkersPathResponse": {
      "type": "object",
      "title": "Worker Path History Response",
      "properties": {
        "to": {
          "type": "string"
        },
        "polyline_string": {
          "type": [
            "string",
            "null"
          ]
        },
        "id": {
          "type": "string"
        },
        "from": {
          "type": "string"
        }
      },
      "example": {
        "to": "2019-01-27 23:50:07",
        "ployline_string": "kjlfhsdklfhlksdhf",
        "id": "2",
        "from": "2017-01-27 23:50:07"
      }
    },
    "RateEntriesResponse": {
      "type": "object",
      "title": "RateEntries Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "start_date": "2021-06-25T03:35:43.551170Z",
            "resolution_type": "leg",
            "rate_calculations": [
              {
                "rate_calculation_index": 0,
                "parent_rate_calculation_index": -1,
                "currency": "SGD",
                "calculation_type": "sum"
              },
              {
                "rate_calculation_index": 3,
                "parent_rate_calculation_index": 0,
                "description": "Handling Charges",
                "currency": "SGD",
                "calculation_type": "flat",
                "base": {
                  "currency": "SGD",
                  "amount": 2
                }
              },
              {
                "relative_rate_calculation_index": 1,
                "relative_multiplier": 0.15,
                "rate_calculation_index": 2,
                "parent_rate_calculation_index": 0,
                "description": "Fuel Surcharge",
                "currency": "SGD",
                "calculation_type": "relative"
              },
              {
                "relative_rate_calculation_index": 0,
                "relative_multiplier": 0.2,
                "rate_calculation_index": 4,
                "parent_rate_calculation_index": -1,
                "description": "GST",
                "currency": "SGD",
                "calculation_type": "relative"
              },
              {
                "rate_tables": [
                  {
                    "relative_variable": "quantity",
                    "rate_dimensions": [
                      {
                        "variable_unit": "kilogram",
                        "variable_equality": "greater_than_equal",
                        "variable_data_type": "decimal",
                        "variable_base": "weight",
                        "variable": "weight",
                        "rate_dimension_index": 0,
                        "name": "weight_dim",
                        "calculation_method": "standard",
                        "breakpoints": [
                          "0",
                          "6",
                          "11",
                          "21"
                        ]
                      },
                      {
                        "variable_equality": "greater_than_equal",
                        "variable_data_type": "integer",
                        "variable_base": "quantity",
                        "variable": "quantity",
                        "rate_dimension_index": 1,
                        "name": "quantity_dim",
                        "calculation_method": "standard",
                        "breakpoints": [
                          "1",
                          "2",
                          "3",
                          "4",
                          "20",
                          "100"
                        ]
                      }
                    ],
                    "name": "w_q",
                    "matrix": {
                      "data": [
                        {
                          "value": "12",
                          "index": [
                            0,
                            0
                          ]
                        },
                        {
                          "value": "14",
                          "index": [
                            0,
                            1
                          ]
                        },
                        {
                          "value": "16",
                          "index": [
                            0,
                            2
                          ]
                        },
                        {
                          "value": "18",
                          "index": [
                            0,
                            3
                          ]
                        },
                        {
                          "value": "11",
                          "index": [
                            0,
                            4
                          ]
                        },
                        {
                          "value": "13",
                          "index": [
                            0,
                            5
                          ]
                        },
                        {
                          "value": "15",
                          "index": [
                            1,
                            0
                          ]
                        },
                        {
                          "value": "17",
                          "index": [
                            1,
                            1
                          ]
                        },
                        {
                          "value": "10",
                          "index": [
                            1,
                            2
                          ]
                        },
                        {
                          "value": "12",
                          "index": [
                            1,
                            3
                          ]
                        },
                        {
                          "value": "14",
                          "index": [
                            1,
                            4
                          ]
                        },
                        {
                          "value": "16",
                          "index": [
                            1,
                            5
                          ]
                        },
                        {
                          "value": "7",
                          "index": [
                            2,
                            0
                          ]
                        },
                        {
                          "value": "9",
                          "index": [
                            2,
                            1
                          ]
                        },
                        {
                          "value": "11",
                          "index": [
                            2,
                            2
                          ]
                        },
                        {
                          "value": "13",
                          "index": [
                            2,
                            3
                          ]
                        },
                        {
                          "value": "6",
                          "index": [
                            2,
                            4
                          ]
                        },
                        {
                          "value": "8",
                          "index": [
                            2,
                            5
                          ]
                        },
                        {
                          "value": "10",
                          "index": [
                            3,
                            0
                          ]
                        },
                        {
                          "value": "12",
                          "index": [
                            3,
                            1
                          ]
                        },
                        {
                          "value": "5.5",
                          "index": [
                            3,
                            2
                          ]
                        },
                        {
                          "value": "7.5",
                          "index": [
                            3,
                            3
                          ]
                        },
                        {
                          "value": "9.5",
                          "index": [
                            3,
                            4
                          ]
                        },
                        {
                          "value": "11.5",
                          "index": [
                            3,
                            5
                          ]
                        }
                      ]
                    },
                    "breakpoint_type": "absolute"
                  }
                ],
                "rate_calculation_index": 1,
                "parent_rate_calculation_index": 0,
                "min": {
                  "currency": "SGD",
                  "amount": 2
                },
                "max": {
                  "currency": "SGD",
                  "amount": 20
                },
                "description": "Main Charge",
                "currency": "SGD",
                "calculation_type": "rate_table"
              }
            ],
            "perspective_type": "buy",
            "name": "advanced",
            "load_type": "ftl",
            "inserted_at": "2021-06-25 03:35:43.551183Z",
            "company_id": 1,
            "active": true
          }
        ]
      }
    },
    "DispatcherUpdateConfigurationResponse": {
      "type": "object",
      "title": "Configuration Response",
      "properties": {
        "non_login_img": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "background_color": {
          "type": "string"
        }
      },
      "example": {
        "non_login_img": "https://s3-ap-southeast-1.amazonaws.com/non_login_img.jpg",
        "logo": "https://s3-ap-southeast-1.amazonaws.com/logo.jpg",
        "background_color": "#FFFFFF"
      }
    },
    "DispatcherCreateMultipleWorkersRequest": {
      "type": "object",
      "title": "Create Multiple workers Request",
      "properties": {
        "users": {
          "type": "array"
        }
      },
      "example": {
        "users": [
          {
            "phone": "+84378909987",
            "name": "Nam"
          },
          {
            "phone": "+84378909981",
            "name": "Nam Hoang"
          }
        ]
      }
    },
    "DispatcherUpdateCorporateSenderResponse": {
      "type": "object",
      "title": "Corporate Sender Updated Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "user_profile_id": 123,
          "phone": "+6598765432",
          "name": "Bob",
          "email": "bob@mail.com"
        }
      }
    },
    "ItemTypesResponse": {
      "type": "object",
      "title": "Item Types Response",
      "properties": {
        "pagination": {
          "type": "object"
        },
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 1,
          "total_count": 1,
          "limit_value": 10,
          "current_page": 1
        },
        "message": "Got item types",
        "data": [
          {
            "name": "Package",
            "id": 1024
          }
        ]
      }
    },
    "VerifyOtpResponse": {
      "type": "object",
      "title": "Verify OTP",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "user_profile_id": 1,
          "phone": "+84936362488",
          "id": 1,
          "email": "bob@mail.com",
          "access_token": "T5P2rQrC6KbkPnLE9ebyjskMUTju3vKFBzlAr+bCUpc="
        }
      },
      "description": "Response schema for Verify OTP"
    },
    "DispatcherSenderAdminsRequest": {
      "type": "object",
      "title": "Sender Admins Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 1,
          "total_count": 2,
          "limit_value": 10,
          "current_page": 1
        },
        "data": [
          {
            "title": "Software Engineer",
            "organisations": [
              {
                "slug": "yojee",
                "reg_address": "80 Robinson Road",
                "postal_code": "068908",
                "phone": "+6591245934",
                "name": "Organisation 1",
                "id": 1,
                "country": "Singapore",
                "city": "Singapore"
              },
              {
                "slug": "yojee",
                "postal_code": "068908",
                "phone": "+6591245936",
                "name": "Organisation 2",
                "id": 2,
                "country": "Singapore",
                "city": "Singapore"
              }
            ],
            "name": "Ralston",
            "id": 1
          },
          {
            "title": "Account Manager",
            "organisations": [
              {
                "slug": "yojee",
                "reg_address": "St George's Rd",
                "postal_code": "068908",
                "phone": "+6591245736",
                "name": "Organisation 3",
                "id": 2,
                "country": "Singapore",
                "city": "Singapore"
              }
            ],
            "name": "Sam",
            "id": 16
          }
        ]
      }
    },
    "DispatcherUpdateOrderRequest": {
      "type": "object",
      "title": "DispatcherUpdateOrderRequest",
      "properties": {
        "price_currency": {
          "type": "string",
          "description": "ISO 4217 code currency, e.g: USD"
        },
        "price_amount": {
          "type": "number",
          "description": "Price amount of order, e.g: for 10.12 USD, amount should be 10."
        },
        "external_id": {
          "type": "string",
          "description": "External Order Reference Number"
        }
      },
      "description": "Dispatcher update order request"
    },
    "CompletionLocation": {
      "type": "object",
      "title": "Task Completion Location Request",
      "properties": {
        "location": {
          "type": "object"
        }
      },
      "example": {
        "location": {
          "lng": 122.64,
          "lat": 65.676
        }
      }
    },
    "CreateOperationRequest": {
      "type": "object",
      "title": "Create Operations Request",
      "example": {
        "position_offset": 1,
        "operation_steps": [
          {
            "type": "dropoff",
            "step_group": 0,
            "address_item_id": 1
          },
          {
            "type": "pickup",
            "step_group": 0,
            "address_item_id": 2
          }
        ],
        "name": "test",
        "link_to_previous": true,
        "link_to_next": true
      }
    },
    "DispatcherRuleResponse": {
      "type": "object",
      "title": "Dispatcher Sub Task Request",
      "properties": {
        "task_id": {
          "type": "integer"
        },
        "sub_task_rule_id": {
          "type": "integer"
        },
        "photos": {
          "type": "array"
        },
        "meta": {
          "type": "object"
        },
        "id": {
          "type": "integer"
        },
        "event": {
          "type": "string"
        },
        "completion_time": {
          "type": "string"
        },
        "company_id": {
          "type": "integer"
        },
        "action": {
          "type": "string"
        }
      },
      "example": {
        "task_id": 103,
        "sub_task_rule_id": 21,
        "photos": [
          "https://s3-ap-southeast-1.amazonaws.com/signature.jpg"
        ],
        "meta": {
          "photo_type": "Proof",
          "photo_title": "Signature"
        },
        "id": 21,
        "event": "pickup_completed",
        "completion_time": "2018-03-10T03:37:08",
        "company_id": 136,
        "action": "upload_photo"
      }
    },
    "TaskExceptionReasonResponse": {
      "type": "object",
      "title": "Task Exception Reason Response",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      },
      "example": {
        "message": "ok",
        "data": {
          "description": "Sender not available",
          "company_id": 1
        }
      }
    },
    "DispatcherSettingResponse": {
      "type": "object",
      "title": "Setting Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "settings": {
            "sample settings": "sample value"
          },
          "name": "default",
          "id": 1,
          "company_id": 1
        }
      }
    },
    "BulkActionsRequest": {
      "type": "object",
      "title": "Bulk tasks actions request",
      "properties": {
        "actions": {
          "type": "array"
        }
      },
      "example": {
        "actions": [
          {
            "type": "complete",
            "tasks_ids": [
              315,
              151
            ],
            "params": {
              "151": {
                "location": {
                  "lng": 122.6428429677108,
                  "lat": 65.67691234535297
                },
                "completion_time": "2018-03-10T03:37:08Z",
                "comment": "Second task comment"
              },
              "315": {
                "location": {
                  "lng": 122.6428429677108,
                  "lat": 65.67691234535297
                },
                "completion_time": "2018-03-10T03:37:08Z",
                "comment": "this is a comment for complete a task"
              }
            },
            "id": "random_hash"
          },
          {
            "type": "complete",
            "tasks_ids": [
              316,
              152
            ],
            "params": {
              "152": {
                "location": {
                  "lng": 122.6428429677108,
                  "lat": 65.67691234535297
                },
                "completion_time": "2018-03-11T03:37:08Z",
                "comment": "Second task comment"
              },
              "316": {
                "location": {
                  "lng": 122.6428429677108,
                  "lat": 65.67691234535297
                },
                "completion_time": "2018-03-11T03:37:08Z",
                "comment": "this is a comment for complete a task"
              }
            },
            "id": "random_hash_2"
          }
        ]
      }
    },
    "AddEnterpriseUserCompanyRequest": {
      "type": "object",
      "title": "Add Enterprise User to company request",
      "properties": {
        "kn-thai": {
          "type": "object"
        },
        "kn-ph": {
          "type": "object"
        }
      },
      "example": {
        "kn-thai": {
          "role_ids": [
            3,
            4
          ],
          "filter_ids": [
            3,
            4
          ]
        },
        "kn-ph": {
          "role_ids": [
            1,
            2
          ],
          "filter_ids": [
            1,
            2
          ]
        }
      }
    },
    "CompanyRequest": {
      "type": "object",
      "title": "Company Request",
      "properties": {
        "slug": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "currency": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      },
      "example": {
        "slug": "yojee-123",
        "name": "Yojee 123",
        "currency": "SGD",
        "country": "Singapore"
      }
    },
    "TasksHistoryResponse": {
      "type": "object",
      "title": "Tasks History response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 1,
          "total_count": 1,
          "limit_value": 10,
          "current_page": 1
        },
        "data": [
          {
            "type": "pickup",
            "to": "2018-08-10T21:25:29.621707Z",
            "task_group_id": 55612,
            "state": "completed",
            "service_type": "sameday",
            "order_item_tracking_number": "YOJ-NK5HEMFNPT0",
            "order_item_id": 46134,
            "lng": 103.7647132,
            "lat": 1.4630478,
            "item": {
              "width": 1,
              "weight": 1,
              "volumetric_weight": 10,
              "volume": 200,
              "length": 1,
              "height": 1,
              "global_tracking_number": "Y-QVK4PQ"
            },
            "id": 85945,
            "from": "2018-08-10T13:25:29.621707Z",
            "external_id": "External test #1",
            "external_customer_id3": "external_customer_id3_test",
            "external_customer_id2": "external_customer_id2_test",
            "external_customer_id": "external_customer_id_test",
            "description": "Gift",
            "container_no": "Container test #1",
            "contact": {
              "phone": "+6581551123",
              "name": "vivek",
              "email": "sender@example.com"
            },
            "completion_time": "2018-08-10T05:25:30.328366Z",
            "address": "80 Robinson Road"
          }
        ]
      }
    },
    "DispatcherCorporateSendersResponse": {
      "type": "object",
      "title": "Corporate Senders Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 2,
          "total_count": 1,
          "limit_value": 2,
          "current_page": 1
        },
        "data": [
          {
            "user_profile_id": 1,
            "name": "ABC"
          }
        ]
      }
    },
    "DispatcherCreatePlanRequest": {
      "type": "object",
      "title": "Plan Request",
      "required": [
        "settings",
        "input",
        "uuid"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Plan uuid"
        },
        "settings": {
          "type": "object",
          "description": "Plan settings"
        },
        "output": {
          "type": "object",
          "description": "Plan output"
        },
        "input": {
          "type": "object",
          "description": "Plan input"
        }
      },
      "example": {
        "uuid": "123456789",
        "settings": {
          "sample settings": "sample value"
        },
        "output": {
          "sample output": "sample value"
        },
        "input": {
          "sample input": "sample value"
        }
      },
      "description": "POST body for creating new plan"
    },
    "WaybillTemplateVersionResponse": {
      "type": "object",
      "title": "Waybill template version Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "version": "123",
            "is_active": true,
            "id": 84,
            "company_id": 1
          },
          {
            "version": "123",
            "is_active": false,
            "id": 82,
            "company_id": 1
          }
        ]
      }
    },
    "OrderFieldTemplatesResponse": {
      "type": "object",
      "title": "Order Field Template Response",
      "example": {
        "version": 1,
        "sender_id": 1,
        "id": 1,
        "data": {
          "steps": [
            {
              "to_time": "2020-08-18T18:00:00.000Z",
              "state": "",
              "postal_code": "068908",
              "lng": 103.8481704,
              "lat": 1.2782636,
              "from_time": "2020-08-18T17:00:00.000Z",
              "country": "Singapore",
              "contact_phone": "+65",
              "address": "144 Robinson Road, Singapore"
            }
          ],
          "sender_type": "organisation",
          "sender_id": 1,
          "price_currency": "SGD",
          "placed_by_user_profile_id": "1",
          "items": [
            {
              "width": 1,
              "weight": 1,
              "volumetric_weight": 0.0002,
              "volume": 1,
              "service_type_id": 1,
              "service_type": "same_day",
              "length": 1,
              "height": 1,
              "cod_price_currency": "SGD"
            }
          ],
          "item_steps": [
            {
              "type": "pickup",
              "step_sequence": 1,
              "step_group": 1,
              "order_step_id": 0,
              "item_id": 0
            }
          ],
          "external_id": "abc"
        }
      }
    },
    "ListOperationsResponse": {
      "type": "object",
      "title": "List Operations Response",
      "example": {
        "data": [
          {
            "position_offset": 1,
            "operation_steps": [
              {
                "type": "dropoff",
                "step_sequence": 1,
                "step_group": 0,
                "service_by_hub_id": 1,
                "operation_id": 1,
                "id": 1,
                "address_item_id": 1,
                "address_item": {
                  "tags": [],
                  "location": {
                    "lng": 103.84817049999992,
                    "lat": 1.2782636
                  },
                  "id": 1,
                  "address1": "144 Robinson Rd, The Corporate Office, Singapore 068908"
                }
              },
              {
                "type": "pickup",
                "step_sequence": 2,
                "step_group": 0,
                "service_by_hub_id": 1,
                "operation_id": 1,
                "id": 1,
                "address_item_id": 1,
                "address_item": {
                  "tags": [],
                  "location": {
                    "lng": 103.84817049999992,
                    "lat": 1.2782636
                  },
                  "id": 1,
                  "address1": "144 Robinson Rd, The Corporate Office, Singapore 068908"
                }
              }
            ],
            "name": "Singapore to Malaysia",
            "link_to_previous": 345,
            "link_to_next": "scheduled",
            "id": 1
          }
        ]
      }
    },
    "DispatcherCreateWorkerTeamResponse": {
      "type": "object",
      "title": "Worker Team Response",
      "example": {
        "name": "Changi morning shift",
        "id": 17834,
        "created_at": "2018-08-21T23:45:00.000000Z"
      }
    },
    "DispatcherPlanResponse": {
      "type": "object",
      "title": "Plan Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "uuid": "123456789",
          "settings": {
            "sample settings": "sample value"
          },
          "output": {
            "sample output": "sample value"
          },
          "input": {
            "sample input": "sample value"
          },
          "id": 1,
          "company_id": 1
        }
      }
    },
    "WaybillTemplateCreateRequest": {
      "type": "object",
      "title": "Waybill template Request",
      "properties": {
        "version": {
          "type": "string"
        },
        "item_type": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      },
      "example": {
        "version": "123",
        "item_type": "package",
        "content": "abc"
      },
      "description": "POST body for creating new waybill_template"
    },
    "DispatcherCreateSettingRequest": {
      "type": "object",
      "title": "Setting Request",
      "required": [
        "settings",
        "name"
      ],
      "properties": {
        "settings": {
          "type": "object",
          "description": "Setting settings"
        },
        "name": {
          "type": "string",
          "description": "Setting name"
        }
      },
      "example": {
        "settings": {
          "sample settings": "sample value"
        },
        "name": "default"
      },
      "description": "POST body for creating new setting"
    },
    "BulkCompletionStatus": {
      "type": "object",
      "title": "Bulk Completion Status",
      "properties": {
        "type": {
          "type": "string"
        },
        "tracking_numbers": {
          "type": "array"
        },
        "location": {
          "type": "object"
        },
        "completion_time": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      },
      "example": {
        "data": {
          "total": 100,
          "status": "completed",
          "processed": 100,
          "logs": []
        }
      }
    },
    "DispatcherCreateOrderRequest": {
      "type": "object",
      "title": "[Dispatcher] Create Order Request",
      "required": [
        "placed_by_user_profile_id",
        "sender_type",
        "sender_id",
        "item_steps",
        "steps",
        "items"
      ],
      "properties": {
        "steps": {
          "type": "array",
          "description": "List of delivery details for pick up and drop off steps"
        },
        "sender_type": {
          "type": "string",
          "description": "Sender Type"
        },
        "sender_id": {
          "type": "integer",
          "description": "Sender ID"
        },
        "price_currency": {
          "type": "string",
          "description": "Order currency"
        },
        "price_amount": {
          "type": "number",
          "description": "Order price"
        },
        "placed_by_user_profile_id": {
          "type": "string",
          "description": "User profile id of the dispatcher"
        },
        "items": {
          "type": "array",
          "description": "List of items to be sent"
        },
        "item_steps": {
          "type": "array",
          "description": "List of item steps"
        },
        "external_id": {
          "type": "string",
          "description": "User profile id of the user"
        },
        "container_no": {
          "type": "string",
          "description": "User profile id of the user"
        }
      },
      "example": {
        "steps": [
          {
            "to_time": "2019-09-16T06:00:00.000Z",
            "state": "",
            "quantity": 50,
            "postal_code": "",
            "lng": 103.84979090000002,
            "lat": 1.2804208,
            "from_time": "2019-09-16T02:00:00.000Z",
            "country": "Singapore",
            "address": "144 Robinson Road, Singapore"
          },
          {
            "to_time": "2019-09-16T10:00:00.000Z",
            "state": "",
            "quantity": 50,
            "postal_code": "068898",
            "lng": 103.84920669999997,
            "lat": 1.2800304,
            "from_time": "2019-09-16T06:00:00.000Z",
            "country": "Singapore",
            "address": "80 Robinson Road, Singapore"
          }
        ],
        "sender_type": "organisation",
        "sender_id": 4,
        "price_currency": "SGD",
        "price_amount": "0",
        "placed_by_user_profile_id": "3",
        "items": [
          {
            "width": 1,
            "weight": 1,
            "volumetric_weight": 0.0002,
            "volume": 1,
            "service_type_id": 1,
            "service_type": "same_day",
            "price_amount": "0",
            "payload_type": "document",
            "length": 1,
            "height": 1
          }
        ],
        "item_steps": [
          {
            "type": "pickup",
            "order_step_id": 0,
            "item_id": 0
          },
          {
            "type": "dropoff",
            "order_step_id": 1,
            "item_id": 0
          }
        ],
        "external_id": "my-external-order-id"
      },
      "description": "POST body for dispatcher to create an order"
    },
    "SubTaskRequest": {
      "type": "object",
      "title": "Dispatcher SubTask Request",
      "properties": {
        "task_id": {
          "type": "integer"
        },
        "sub_task_rule_id": {
          "type": "integer"
        },
        "photos": {
          "type": "array"
        },
        "completion_data": {
          "type": "object"
        }
      },
      "example": {
        "task_id": 2,
        "sub_task_rule_id": 3,
        "photos": [
          "https://s3-ap-southeast-1.amazonaws.com/signature.jpg"
        ],
        "completion_data": {
          "recipient_name": "recipient",
          "arrival_time": "2018-03-10T03:37:08"
        }
      }
    },
    "DispatcherCreateServiceTypeRequest": {
      "type": "object",
      "title": "Dispatcher create service type request",
      "properties": {
        "window_size": {
          "type": "integer"
        },
        "task_type_sequence": {
          "type": "array"
        },
        "slots": {
          "type": "array"
        },
        "sla_time": {
          "type": "integer"
        },
        "pricing_model_uuid": {
          "type": "string"
        },
        "preassign": {
          "type": "object"
        },
        "point2point": {
          "type": "object"
        },
        "operation_id": {
          "type": "object"
        },
        "non_operating_days": {
          "type": "array"
        },
        "name": {
          "type": "string"
        },
        "min_window_size": {
          "type": "integer"
        },
        "lead_time": {
          "type": "integer"
        },
        "key": {
          "type": "string"
        },
        "isolate_tasks": {
          "type": "object"
        },
        "description": {
          "type": "string"
        }
      },
      "example": {
        "window_size": 240,
        "task_type_sequence": [
          [
            "pickup",
            "dropoff"
          ]
        ],
        "slots": [
          {
            "to": "14:00:00",
            "task_types": [
              "pickup",
              "dropoff"
            ],
            "from": "10:00:00"
          },
          {
            "to": "18:00:00",
            "task_types": [
              "pickup",
              "dropoff"
            ],
            "from": "14:00:00"
          },
          {
            "to": "22:00:00",
            "task_types": [
              "pickup",
              "dropoff"
            ],
            "from": "18:00:00"
          }
        ],
        "sla_time": 960,
        "pricing_model_uuid": "514067d0-c825-11e7-a0a0-37e338dc8269",
        "preassign": false,
        "point2point": true,
        "non_operating_days": [
          1,
          2
        ],
        "name": "Same Day",
        "min_window_size": 180,
        "lead_time": 60,
        "key": "same_day",
        "isolate_tasks": false,
        "description": "same day service type"
      }
    },
    "GetPricesResponse": {
      "type": "object",
      "title": "Get price response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": [
          {
            "type": "express",
            "success": true,
            "msg": {
              "surcharges": {
                "CBD": 2
              },
              "price": 20,
              "pickup_zip": "068896",
              "dropoff_zip": "189703",
              "base_price": 18
            }
          },
          {
            "type": "same_day",
            "success": true,
            "msg": {
              "surcharges": {
                "CBD": 2
              },
              "price": 12,
              "pickup_zip": "068896",
              "dropoff_zip": "189703",
              "base_price": 10
            }
          },
          {
            "type": "next_day",
            "success": true,
            "msg": {
              "surcharges": {
                "CBD": 2
              },
              "price": 9,
              "pickup_zip": "068896",
              "dropoff_zip": "189703",
              "base_price": 7
            }
          }
        ]
      }
    },
    "VersionRequest": {
      "type": "object",
      "title": "App version Info Request",
      "properties": {
        "current_installed_version": {
          "type": "integer"
        }
      },
      "example": {
        "current_installed_version": 500
      },
      "description": "Check if app update is required"
    },
    "DispatcherChatMessagesResponse": {
      "type": "object",
      "title": "Chat Messages Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "messages": [
            {
              "user_profile": {
                "user_profile_id": 299,
                "name": "Demond Terry"
              },
              "inserted_at": "2018-10-23T07:57:27.538169Z",
              "incoming": false,
              "id": 133,
              "created_at": "2018-10-23T07:56:00.0Z",
              "content": {
                "type": "image",
                "text": "it has value if it is not attachment and it's type is 'text'",
                "attachment": {
                  "thumbnail": "https://s3-ap-southeast-1.amazonaws.com/thumbnail_signature.png",
                  "original": "https://s3-ap-southeast-1.amazonaws.com/original_signature.png"
                }
              }
            }
          ],
          "channel": {
            "members": [],
            "id": 154
          }
        }
      }
    },
    "DispatcherRouteScheduleResponse": {
      "type": "object",
      "title": "Create Route Schedule Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "worker_id": 1,
          "route_schedule_points": [
            {
              "route_schedule_id": 2,
              "position": 0,
              "location": {
                "lng": 103.819836,
                "lat": 1.352083
              },
              "id": 5,
              "duration": 900,
              "day_offset": 0,
              "arrival_time": "15:00:00",
              "address_item_id": 1,
              "address": "80 robinson road"
            }
          ],
          "name": "test",
          "id": 2,
          "company_id": 1
        }
      },
      "description": "Create route schedule response"
    },
    "CompanyUpdateDisplaySettingsRequest": {
      "type": "object",
      "title": "Company Display Settings Request",
      "required": [
        "settings"
      ],
      "properties": {
        "settings": {
          "type": "object",
          "description": "Display Settings object"
        }
      },
      "example": {
        "sender_access": {
          "invoice.show": true
        },
        "admin_copy": {
          "orders.show.external_id_title": "External Order ID",
          "orders.show.ccu_name_title": "Client company user name",
          "items.show.order_id_title": "Order ID",
          "items.show.info_title": "Additional Remarks",
          "items.show.external_customer_id_title": "External Item ID",
          "items.show.external_customer_id3_title": "External Item ID 3",
          "items.show.external_customer_id2_title": "External Item ID 2",
          "default.weight_unit": "kg",
          "default.unit": "cm"
        },
        "admin_access": {
          "items.show.service_type": true,
          "items.show.external_customer_id3": false,
          "items.show.external_customer_id2": false,
          "items.show.external_customer_id": false
        }
      },
      "description": "PUT body for updating company display_settings"
    },
    "CompanyUpdateSettingsRequest": {
      "type": "object",
      "title": "Company Setting Request",
      "required": [
        "settings"
      ],
      "properties": {
        "settings": {
          "type": "object",
          "description": "Settings object"
        }
      },
      "example": {
        "settings": {
          "delivery_options": {
            "time_window": {
              "pickup": {
                "to": 18,
                "from": 10
              },
              "dropoff": {
                "to": 22,
                "from": 14
              }
            },
            "pickup_allowance": 2,
            "max_weight": 50,
            "advance_bookings": 14
          }
        }
      },
      "description": "PUT body for updating company settings"
    },
    "EnterpriseUserResponse": {
      "type": "object",
      "title": "Enterprise User Response",
      "properties": {
        "user_profile_id": {
          "type": "integer"
        },
        "phone": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "enterprise_id": {
          "type": "integer"
        },
        "email": {
          "type": "string"
        },
        "companies": {
          "type": "object"
        }
      },
      "example": {
        "user_profile_id": 1,
        "phone": "+6512312312",
        "name": "Enterprise User 1",
        "enterprise_id": 1,
        "email": "test_enterprise_user@yojee.com",
        "companies": {
          "kn-thai": {
            "dispatcher_id": 2,
            "company_name": "KN Thailand",
            "company_id": 2
          },
          "kn-ph": {
            "dispatcher_id": 1,
            "company_name": "KN Philippines",
            "company_id": 1
          }
        }
      }
    },
    "DispatcherCreateRoleRequest": {
      "type": "object",
      "title": "Role Request",
      "properties": {
        "name": {
          "type": "string",
          "description": "Role name"
        },
        "company_id": {
          "type": "integer",
          "description": "Company ID"
        },
        "access_map": {
          "type": "object",
          "description": "Access Map"
        }
      },
      "example": {
        "name": "role_1",
        "company_id": 123,
        "access_map": {
          "sender": {
            "add": true
          }
        }
      },
      "description": "POST body for creating new role"
    },
    "OrderAddress": {
      "type": "object",
      "properties": {
        "zipcode": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "lng": {
          "type": "string"
        },
        "lat": {
          "type": "string"
        },
        "country": {
          "type": "string"
        }
      }
    },
    "JwtControlTowerRequest": {
      "type": "object",
      "title": "control tower JWT request",
      "properties": {
        "partner_cip": {
          "type": "string"
        }
      },
      "example": {
        "partner_cip": "CIP-1515454555"
      }
    },
    "AuthResponse": {
      "type": "object",
      "title": "AuthResponse",
      "properties": {
        "user_profile_id": {
          "type": "integer"
        },
        "phone": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "jwt": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "auth_infos": {
          "type": "object"
        },
        "access_token": {
          "type": "string"
        }
      },
      "example": {
        "user_profile_id": 1,
        "phone": "+6598765432",
        "name": "Bob Doe",
        "jwt": "dfksdfKJSGD*&*&(*DHKJGDHKJ",
        "email": "bob@mail.com",
        "auth_infos": {
          "worker_infos": {
            "yojee": [
              {
                "company_slug": "yojee",
                "company_name": "Yojee"
              }
            ]
          },
          "sender_infos": {
            "yojee": [
              {
                "sender_organisation_slug": "aceflyers",
                "sender_organisation_name": "Aceflyers",
                "company_slug": "yojee",
                "company_name": "Yojee"
              }
            ]
          },
          "dispatcher_infos": {
            "yojee": [
              {
                "company_slug": "yojee",
                "company_name": "Yojee"
              }
            ]
          }
        },
        "access_token": "pCVPeEEUuKnM7geUOcSLY2imA5l6YUdjymkApBDAAGY="
      }
    },
    "WorkerResponse": {
      "type": "object",
      "title": "Worker Response",
      "properties": {
        "status": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "avatar": {
          "type": "string"
        }
      },
      "example": {
        "status": "on_duty",
        "id": 1,
        "avatar": "https://s3-ap-southeast-1.amazonaws.com/signature.jpg"
      }
    },
    "OrderItemsUpdateRequest": {
      "type": "object",
      "title": "Order Item Update Request",
      "properties": {
        "width": {
          "type": "object"
        },
        "weight": {
          "type": "object"
        },
        "service_type": {
          "type": "string"
        },
        "quantity": {
          "type": "integer"
        },
        "price_currency": {
          "type": "string"
        },
        "price_amount": {
          "type": "string"
        },
        "payload_type": {
          "type": "string"
        },
        "length": {
          "type": "object"
        },
        "info": {
          "type": "string"
        },
        "height": {
          "type": "object"
        },
        "external_customer_id3": {
          "type": "string"
        },
        "external_customer_id2": {
          "type": "string"
        },
        "external_customer_id": {
          "type": "string"
        },
        "dropoff": {
          "type": "object"
        },
        "description": {
          "type": "string"
        }
      },
      "example": {
        "width": 1,
        "weight": 1,
        "service_type": "same_day",
        "quantity": 5,
        "price_currency": "SGD",
        "price_amount": "10.00",
        "payload_type": "Updated document",
        "length": 1,
        "info": "info_test",
        "height": 1,
        "external_customer_id3": "changed_external_customer_id3",
        "external_customer_id2": "changed_external_customer_id2",
        "external_customer_id": "changed_external_customer_id",
        "dropoff": {
          "to_time": "2021-06-26T03:35:43.486444Z",
          "state": "Singapore",
          "postal_code": "332211",
          "lng": 103.8469761,
          "lat": 1.2880209,
          "from_time": "2021-06-25T19:35:43.486444Z",
          "country": "Singapore",
          "contact_phone": "+6581551123",
          "contact_name": "vivek",
          "contact_email": "recipient@example.com",
          "contact_company": "Nike",
          "address2": "#04-01",
          "address": "58 New Bridge Road"
        },
        "description": "Updated Gift"
      }
    },
    "OrderItemsUpdateMultiRequest": {
      "type": "object",
      "title": "Order Item Update multi leg Request",
      "properties": {
        "width": {
          "type": "integer"
        },
        "weight": {
          "type": "integer"
        },
        "update_steps": {
          "type": "array"
        },
        "service_type": {
          "type": "string"
        },
        "sequence": {
          "type": "array"
        },
        "quantity": {
          "type": "integer"
        },
        "price_currency": {
          "type": "string"
        },
        "price_amount": {
          "type": "string"
        },
        "payload_type": {
          "type": "string"
        },
        "new_steps": {
          "type": "array"
        },
        "length": {
          "type": "integer"
        },
        "info": {
          "type": "string"
        },
        "height": {
          "type": "integer"
        },
        "external_customer_id3": {
          "type": "string"
        },
        "external_customer_id2": {
          "type": "string"
        },
        "external_customer_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "delete_steps": {
          "type": "array"
        }
      },
      "example": {
        "width": 22222222,
        "weight": 2,
        "update_steps": [
          {
            "to_time": "2019-04-09T08=>05=>15.382333Z",
            "state": "Singapore",
            "postal_code": "332211",
            "lng": 103.8469761,
            "lat": 1.2880209,
            "id": "3",
            "from_time": "2019-04-09T00=>05=>15.382333Z",
            "country": "Singapore",
            "contact_phone": "+6581551123",
            "contact_name": "vivek",
            "contact_email": "recipient@example.com",
            "contact_company": "Nike",
            "address2": "#04-01",
            "address": "58 New Bridge Roadgagagagaga"
          }
        ],
        "service_type": "same_day",
        "sequence": [
          {
            "step_sequence": 8,
            "step_group": 8,
            "id": 4
          },
          {
            "step_sequence": 9,
            "step_group": 9,
            "id": "new_0"
          },
          {
            "step_sequence": 10,
            "step_group": 10,
            "id": "new_1"
          }
        ],
        "quantity": 5,
        "price_currency": "SGD",
        "price_amount": "10.00",
        "payload_type": "Updated document",
        "new_steps": [
          {
            "type": "pickup",
            "to_time": "2019-04-09T08=>05=>15.382333Z",
            "state": "Singapore",
            "postal_code": "332211",
            "lng": 103.8469761,
            "lat": 1.2880209,
            "from_time": "2019-04-09T00=>05=>15.382333Z",
            "country": "Singapore",
            "contact_phone": "+6581551123",
            "contact_name": "vivek",
            "contact_email": "recipient@example.com",
            "contact_company": "Nike",
            "address2": "#04-01",
            "address": "58 New Bridge Road"
          },
          {
            "type": "dropoff",
            "to_time": "2019-04-09T08=>05=>15.382333Z",
            "state": "Singapore",
            "postal_code": "332211",
            "lng": 103.8469761,
            "lat": 1.2880209,
            "from_time": "2019-04-09T00=>05=>15.382333Z",
            "country": "Singapore",
            "contact_phone": "+6581551123",
            "contact_name": "vivek",
            "contact_email": "recipient@example.com",
            "contact_company": "Nike",
            "address2": "#04-01",
            "address": "58 New Bridge Road"
          }
        ],
        "length": 2,
        "info": "info_test",
        "height": 2,
        "external_customer_id3": "changed_external_customer_id3",
        "external_customer_id2": "changed_external_customer_id2",
        "external_customer_id": "changed_external_customer_id",
        "description": "this is the description test test",
        "delete_steps": [
          10
        ]
      }
    },
    "SenderCreateOrderRequest": {
      "type": "object",
      "title": "[Sender] Create Order Request",
      "properties": {
        "steps": {
          "type": "array",
          "description": "List of delivery details for pick up and drop off steps"
        },
        "sender_type": {
          "type": "string",
          "description": "Sender Type"
        },
        "sender_id": {
          "type": "integer",
          "description": "Sender ID"
        },
        "price_currency": {
          "type": "string",
          "description": "Order currency"
        },
        "price_amount": {
          "type": "number",
          "description": "Order price"
        },
        "items": {
          "type": "array",
          "description": "List of items to be sent"
        },
        "item_steps": {
          "type": "array",
          "description": "List of item steps"
        }
      },
      "example": {
        "steps": [
          {
            "to_time": "2021-06-25T19:35:43.427842Z",
            "state": "Singapore",
            "postal_code": "112233",
            "lng": 103.7647132,
            "lat": 1.4630478,
            "from_time": "2021-06-25T11:35:43.427842Z",
            "country": "sg",
            "contact_phone": "+6581551123",
            "contact_name": "vivek",
            "contact_email": "sender@example.com",
            "contact_company": "Adidas",
            "address2": "160 Robinson Road",
            "address": "80 Robinson Road"
          },
          {
            "to_time": "2021-06-26T03:35:43.427842Z",
            "state": "Singapore",
            "postal_code": "332211",
            "lng": 103.7647132,
            "lat": 1.4630478,
            "from_time": "2021-06-25T19:35:43.427842Z",
            "country": "Singapore",
            "contact_phone": "+6581551123",
            "contact_name": "vivek",
            "contact_email": "recipient@example.com",
            "contact_company": "Nike",
            "address2": "50 Boon Keng Rd",
            "address": "Boon Keng Rd"
          }
        ],
        "sender_type": "organisation",
        "sender_id": 1,
        "price_currency": "SGD",
        "price_amount": 10,
        "items": [
          {
            "width": 1,
            "weight": 1,
            "volumetric_weight": 10,
            "volume": 200,
            "service_type": "same_day",
            "quantity": 2,
            "price_info": "Surcharge 2.00",
            "price_amount": "10.00",
            "payload_type": "Package",
            "length": 1,
            "info": "info_test",
            "height": 1,
            "external_customer_id3": "external_customer_id3_test",
            "external_customer_id2": "external_customer_id2_test",
            "external_customer_id": "external_customer_id_test",
            "description": "Gift"
          }
        ],
        "item_steps": [
          {
            "type": "pickup",
            "order_step_id": 0,
            "item_id": 0
          },
          {
            "type": "dropoff",
            "order_step_id": 1,
            "item_id": 0
          }
        ],
        "external_id": "External test #1",
        "container_no": "Container test #1"
      },
      "description": "POST body for sender to create an order"
    },
    "IndexAddressItemsResponse": {
      "type": "object",
      "title": "Address Items List/Search Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 1,
          "total_count": 2,
          "limit_value": 10,
          "current_page": 1
        },
        "data": [
          {
            "tags": [
              "tech",
              "important"
            ],
            "state": "SELANGOR",
            "postal_code": "47400",
            "location": {
              "lng": 101.6292271,
              "lat": 3.1293091
            },
            "id": 1,
            "external_id": "10",
            "country": "MY",
            "contact_phone": "03-77268216",
            "contact_name": "HL LEE & CO (D'SARA)",
            "contact_email": "",
            "contact_company": "",
            "city": "PETALING JAYA",
            "address2": "1, JALAN SS 20/27 PETALING JAYA",
            "address1": "UNIT 3A 13, 4TH FLOOR, BLOCK C, DAMANSARA INTAN"
          },
          {
            "tags": [
              "marketing",
              "important"
            ],
            "state": "SELANGOR",
            "postal_code": "46050",
            "location": {
              "lng": 101.6467951,
              "lat": 3.1049061
            },
            "id": 2,
            "external_id": "11",
            "country": "MY",
            "contact_phone": "03-7960 7761",
            "contact_name": "SIMON HUE & ASSOCIATES",
            "contact_email": "",
            "contact_company": "",
            "city": "PETALING JAYA",
            "address2": "18, JALAN PERSIARAN BARAT, PETALING JAYA",
            "address1": "W-09-06 AMCORP BUSINESS SUITE, 9TH FLOOR, MENARA MELAWANGI, AMCORP TRADE CENTRE"
          }
        ]
      }
    },
    "DispatcherOrganisationResponse": {
      "type": "object",
      "title": "Organisation Details",
      "properties": {
        "user_profiles": {
          "type": "array"
        },
        "sender": {
          "type": "object"
        },
        "reg_address": {
          "type": "string"
        },
        "postal_code": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "extension": {
          "type": "object"
        },
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        }
      },
      "example": {
        "user_profiles": [
          {
            "user_profile_id": 1,
            "phone": "Sender Phone",
            "name": "Sender Name",
            "email": "sender-email@example.com"
          },
          {
            "user_profile_id": 2,
            "phone": "+6533445566",
            "name": "Corporate User 2",
            "email": "corporate-user-2@example.com"
          }
        ],
        "sender": {
          "user_profile_id": 1,
          "phone": "Sender Phone",
          "name": "Sender Name",
          "email": "sender-email@example.com",
          "billing_address": "Sender billing address"
        },
        "reg_address": "77 Robinson road, Singapore.",
        "postal_code": "321021",
        "phone": "+6591240934",
        "name": "FEDEX",
        "id": 3,
        "country": "Singapore",
        "city": "Singapore"
      }
    },
    "DispatcherMasterVehicleTypesResponse": {
      "type": "object",
      "title": "master vehicle types response",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array"
        }
      },
      "example": {
        "message": "master types",
        "data": [
          {
            "name": "pedestrian",
            "id": 1
          },
          {
            "name": "bicycle",
            "id": 2
          },
          {
            "name": "motorcycle",
            "id": 3
          },
          {
            "name": "car",
            "id": 4
          }
        ]
      }
    },
    "InfoResponse": {
      "type": "object",
      "title": "Driver's info Response",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      },
      "example": {
        "message": "Got driver's info.",
        "data": {
          "vehicles": [
            {
              "name": "Truck",
              "id": 1
            },
            {
              "name": "Boat",
              "id": 2
            }
          ],
          "status": "on_duty",
          "phone": "+849032230423",
          "national_id_photo_front": "https://s3-ap-southeast-1.amazonaws.com/front.jpg",
          "national_id_photo_back": "https://s3-ap-southeast-1.amazonaws.com/back.jpg",
          "national_id": "392454151445",
          "name": "John Doe",
          "id": 1,
          "email": "john@gmail.com",
          "driver_license_photo_front": "https://s3-ap-southeast-1.amazonaws.com/front.jpg",
          "driver_license_photo_back": "https://s3-ap-southeast-1.amazonaws.com/back.jpg",
          "driver_license": "RIND1515454",
          "device_token": "AI73LASYS93SDKD",
          "current_vehicle_type_id": 2,
          "avatar": "https://s3-ap-southeast-1.amazonaws.com/avatar.jpg"
        }
      }
    },
    "DispatcherCreateMultipleUsersErrorResponse": {
      "type": "object",
      "title": "Create Multiple user Error Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": [
          {
            "message": "The email already exists.",
            "email": "nam@abc.com"
          },
          {
            "message": "The email already exists.",
            "email": "nam@abcd.com"
          }
        ]
      }
    },
    "DispatcherCreateWorkerResponse": {
      "type": "object",
      "title": "Worker Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "vehicle_type_registers": [
            {
              "name": "Bike",
              "id": 1
            },
            {
              "name": "Car",
              "id": 2
            }
          ],
          "vehicle_type_ids": [
            1
          ],
          "user_profile_id": 1,
          "tester": false,
          "tags": [
            {
              "value": "pickup",
              "name": "pickup",
              "id": 1,
              "external_id": "21321321"
            }
          ],
          "regions": [],
          "phone": "+987654322",
          "password": "Password1!",
          "otp_token": "1122334455",
          "national_id_photo_front": "https://yojee-uploads-demo.s3.amazonaws.com/uploads/accounts/128817/national_id/128817_original_updated-national-id-front.png",
          "national_id_photo_back": "https://yojee-uploads-demo.s3.amazonaws.com/uploads/accounts/128817/national_id/128817_original_updated-national-id-back.png",
          "national_id": "11335577",
          "name": "Driver",
          "location": {
            "lng": 122.6428429677108,
            "lat": 65.67691234535297
          },
          "inserted_at": "2021-06-25 03:35:43.497194Z",
          "email": "contact@test.com",
          "driver_license_photo_front": "https://yojee-uploads-demo.s3.amazonaws.com/uploads/accounts/128817/driver_license/128817_original_updated-driver-license-front.png?v=63701553117",
          "driver_license_photo_back": "https://yojee-uploads-demo.s3.amazonaws.com/uploads/accounts/128817/driver_license/128817_original_updated-driver-license-back.png?v=63701553117",
          "driver_license": "22446688",
          "distance_away": 1100,
          "current_vehicle_type_id": 1,
          "company_id": 1,
          "access_token": "4h/PrR5vu9uVevso3fNv2RPTLQJech3BJ/pNJhWBnfE="
        }
      }
    },
    "GetOrderPricesResponse": {
      "type": "object",
      "title": "Get Multi Price Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "success": true,
        "order_items": [
          {
            "success": true,
            "price_meta": {
              "pickup_surcharges": {
                "CBD": 2
              },
              "dropoff_surcharges": {
                "CBD": 2
              },
              "discount": 1,
              "base_price": 12
            },
            "price_info": "Surcharges: $2 + $1, Discount -$1",
            "price": 14
          },
          {
            "success": true,
            "price_meta": {
              "pickup_surcharges": {
                "CBD": 2
              },
              "dropoff_surcharges": {
                "CBD": 2
              },
              "discount": 1,
              "base_price": 16
            },
            "price_info": "Surcharges: $2 + $1, Discount -$1",
            "price": 18
          }
        ]
      }
    },
    "TrackOrderResponse": {
      "type": "object",
      "title": "TrackOrderResponse",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": [
          {
            "tracking_number": "O-SK1LAUPOQXJF",
            "status": "created",
            "price": "SGD 10",
            "order_items": [
              {
                "status": "scheduled_for_fulfilment",
                "service_type": "sameday",
                "order_item_steps": [
                  {
                    "type": "pickup",
                    "to_time": "2019-05-07T01:48:14.000000Z",
                    "state": "created",
                    "from_time": "2019-05-06T17:48:14.000000Z",
                    "contact_phone": "+6581551123",
                    "contact_name": "vivek",
                    "contact_email": "sender@example.com",
                    "contact_company": "Adidas",
                    "address_components": {
                      "state": "Singapore",
                      "postal_code": "112233",
                      "location": {
                        "lng": 103.7647132,
                        "lat": 1.4630478
                      },
                      "country": "Singapore",
                      "address2": "160 Robinson Road",
                      "address": "80 Robinson Road"
                    },
                    "address": "80 Robinson Road"
                  },
                  {
                    "type": "dropoff",
                    "to_time": "2019-05-07T09:48:14.000000Z",
                    "state": "created",
                    "from_time": "2019-05-07T01:48:14.000000Z",
                    "contact_phone": "+6581551123",
                    "contact_name": "vivek",
                    "contact_email": "recipient@example.com",
                    "contact_company": "Nike",
                    "address_components": {
                      "state": "Singapore",
                      "postal_code": "332211",
                      "location": {
                        "lng": 103.7647132,
                        "lat": 1.4630478
                      },
                      "country": "Singapore",
                      "address2": "50 Boon Keng Rd",
                      "address": "Boon Keng Rd"
                    },
                    "address": "Boon Keng Rd"
                  }
                ],
                "order_item_logs": [
                  {
                    "inserted_at": "2019-05-06T09:48:16.854717Z",
                    "event": "worker_accepted_item",
                    "description": "Dropoff at Boon keng rd accepted by Ludwig Graham (+447584471927)"
                  },
                  {
                    "inserted_at": "2019-05-06T09:48:16.856631Z",
                    "event": "worker_accepted_item",
                    "description": "Pickup at 80 robinson road accepted by Ludwig Graham (+447584471927)"
                  }
                ],
                "item_id": 53417,
                "item": {
                  "width": 1,
                  "weight": 1,
                  "quantity": 2,
                  "length": 1,
                  "id": 53417,
                  "height": 1
                }
              }
            ],
            "number": "bmFvQTA1c3dybS9sNWdnOUVSdEZlZz09",
            "inserted_at": "2018-03-20T15:18:38.613719",
            "external_id": "EXT-21382093",
            "description": "Gift",
            "container_no": "CON-83773878"
          }
        ]
      },
      "description": "Response schema for tracking an order"
    },
    "CreateAddressItemsResponse": {
      "type": "object",
      "title": "Address Items Creation Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "message": "Created Address Items",
        "data": [
          {
            "id": 1
          },
          {
            "id": 2
          }
        ]
      }
    },
    "CompanyVehicleTypesResponse": {
      "type": "object",
      "title": "Vehicle types info Response",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "array"
        }
      },
      "example": {
        "message": "Got vehicle types",
        "data": [
          {
            "name": "Pedestrian",
            "id": 1
          },
          {
            "name": "Bicycle",
            "id": 2
          }
        ]
      }
    },
    "DispatcherUpdateCorporateSenderRequest": {
      "type": "object",
      "title": "Corporate Sender Request",
      "properties": {
        "title": {
          "type": "string"
        },
        "sender_type": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "billing_address": {
          "type": "string"
        }
      },
      "example": {
        "title": "Engineer",
        "sender_type": "organisation",
        "phone": "+6598765432",
        "name": "Ralston",
        "email": "secondary_account@abc.com",
        "billing_address": "77 Robinson road, Singapore."
      }
    },
    "DispatcherOrdersResponse": {
      "type": "object",
      "title": "Orders Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 2,
          "total_count": 1,
          "limit_value": 2,
          "current_page": 1
        },
        "data": [
          {
            "tracking_number": "O-M1RHTJHJZGKX",
            "status": "created",
            "sender_type": "organisation",
            "sender_id": 1,
            "price_currency": "SGD",
            "price_amount": 0,
            "number": "Z1QxNVRKUWwvKzUzc00wUkJEeXZUUT09",
            "inserted_at": "2021-06-25 03:35:43.484422Z",
            "access_token": "4h/PrR5vu9uVevso3fNv2RPTLQJech3BJ/pNJhWBnfE="
          }
        ]
      }
    },
    "DispatcherChatMessageResponse": {
      "type": "object",
      "title": "Chat Message Response",
      "properties": {
        "user_profile": {
          "type": "object"
        },
        "inserted_at": {
          "type": "string"
        },
        "incoming": {
          "type": "object"
        },
        "id": {
          "type": "integer"
        },
        "created_at": {
          "type": "string"
        },
        "content": {
          "type": "object"
        }
      },
      "example": {
        "user_profile": {
          "user_profile_id": 299,
          "name": "Demond Terry"
        },
        "inserted_at": "2018-10-23T07:57:27.538169Z",
        "incoming": false,
        "id": 133,
        "created_at": "2018-10-23T07:56:00.0Z",
        "content": {
          "type": "image",
          "text": "it has value if it is not attachment and it's type is 'text'",
          "attachment": {
            "thumbnail": "https://s3-ap-southeast-1.amazonaws.com/thumbnail_signature.png",
            "original": "https://s3-ap-southeast-1.amazonaws.com/original_signature.png"
          }
        }
      }
    },
    "BulkActionsStatus": {
      "type": "object",
      "title": "Bulk Actions Status",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "total": 3,
          "status": "completed",
          "results": {
            "random_hash3": {
              "success": false,
              "errors": [
                {
                  "type": "task_completed",
                  "task_ids": [
                    3211
                  ],
                  "message": "Tasks already completed"
                }
              ]
            },
            "random_hash2": {
              "success": false,
              "errors": [
                {
                  "type": "task_completed",
                  "task_ids": [
                    3082
                  ],
                  "message": "Tasks already completed"
                }
              ]
            },
            "random_hash": {
              "success": true
            }
          },
          "processed": 3
        }
      }
    },
    "DispatcherCreateRuleRequest": {
      "type": "object",
      "title": "Sub Task Rule Request",
      "properties": {
        "meta": {
          "type": "object"
        },
        "event": {
          "type": "string"
        },
        "deleted_at": {
          "type": "object"
        },
        "company_id": {
          "type": "integer"
        },
        "action": {
          "type": "string"
        }
      },
      "example": {
        "meta": {
          "photo_type": "signature",
          "photo_title": "Signature of client"
        },
        "event": "pickup_completed",
        "company_id": 1,
        "action": "upload_photo"
      }
    },
    "ItemTypeResponse": {
      "type": "object",
      "title": "Item Type Response",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      },
      "example": {
        "message": "Got item type",
        "data": {
          "name": "Package",
          "id": 1024
        }
      }
    },
    "DispatcherPartnerTransferCreateResponse": {
      "type": "object",
      "title": "Partner Transfer Order Create Response",
      "example": {
        "order_numbers": [
          "O-SZAAGLEETLCV",
          "O-P8QMABTJWDW1"
        ],
        "message": "Transfer Order(s) created successfully"
      }
    },
    "DispatcherUpdateVehicleTypeRequest": {
      "type": "object",
      "title": "single vehicle type response",
      "properties": {
        "routing_vehicle_profile_id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "max_load_space_volume": {
          "type": "integer"
        },
        "max_carry_weight": {
          "type": "integer"
        },
        "carry_unit": {
          "type": "integer"
        }
      },
      "example": {
        "routing_vehicle_profile_id": 4,
        "name": "chenfei",
        "max_load_space_volume": 22,
        "max_carry_weight": 3,
        "carry_unit": 8
      }
    },
    "WorkerSubTaskResponse": {
      "type": "object",
      "title": "Worker SubTask Response",
      "properties": {
        "task_id": {
          "type": "integer"
        },
        "sub_task_rule_id": {
          "type": "integer"
        },
        "photos": {
          "type": "array"
        },
        "meta": {
          "type": "object"
        },
        "event": {
          "type": "string"
        },
        "completion_time": {
          "type": "string"
        },
        "completion_location": {
          "type": "object"
        },
        "completion_data": {
          "type": "object"
        },
        "action": {
          "type": "string"
        }
      },
      "example": {
        "task_id": 2,
        "sub_task_rule_id": 3,
        "photos": [
          "https://s3-ap-southeast-1.amazonaws.com/signature.jpg"
        ],
        "meta": {
          "photo_type": "Proof",
          "photo_title": "Signature"
        },
        "event": "pickup_completed",
        "completion_time": "2018-03-10T03:37:08",
        "completion_location": {
          "lng": 1,
          "lat": 1
        },
        "completion_data": {
          "recipient_name": "recipient",
          "arrival_time": "2018-03-10T03:37:08"
        },
        "action": "upload_photo"
      }
    },
    "BroadcastRequest": {
      "type": "object",
      "title": "Broadcast Request",
      "properties": {
        "worker_team_ids": {
          "type": "array"
        },
        "timeout_in_minutes": {
          "type": "integer"
        },
        "task_group_ids": {
          "type": "array"
        },
        "price_currency": {
          "type": "string"
        },
        "price_amount": {
          "type": "integer"
        }
      },
      "example": {
        "worker_team_ids": [
          12
        ],
        "timeout_in_minutes": 20,
        "task_group_ids": [
          1,
          2
        ],
        "price_currency": "SGD",
        "price_amount": 500
      }
    },
    "AcceptRejectLocation": {
      "type": "object",
      "title": "Task Completion Location Request",
      "properties": {
        "location": {
          "type": "object"
        }
      },
      "example": {
        "location": {
          "lng": 122.64,
          "lat": 65.676
        }
      }
    },
    "DispatcherUpdateServiceTypeRequest": {
      "type": "object",
      "title": "Dispatcher update service type request",
      "properties": {
        "operation_id": {
          "type": "integer"
        },
        "non_operating_days": {
          "type": "array"
        }
      },
      "example": {
        "operation_id": 1,
        "non_operating_days": [
          1,
          2
        ]
      }
    },
    "StopResponse": {
      "type": "object",
      "title": "Stops response",
      "properties": {
        "pagination": {
          "type": "object"
        },
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 1,
          "total_count": 2,
          "limit_value": 10,
          "current_page": 1
        },
        "data": [
          {
            "to": "2018-11-14T06:00:00.000000Z",
            "postal_code": "068896",
            "order_number": "O-D3VHSKDORDNM",
            "lng": 103.8209837,
            "lat": 1.2942236,
            "id": 3586,
            "from": "2018-11-14T02:00:00.000000Z",
            "country": "Singapore",
            "contact": {
              "phone": "+6531591335",
              "name": "Yojee Ops",
              "email": "contact@test.com",
              "company": "yojee"
            },
            "address_state": "Singapore",
            "address2": "#03-01",
            "address": "59 South Park Road"
          }
        ]
      }
    },
    "WorkerLocationUpdateRequest": {
      "type": "object",
      "title": "Location Update Request",
      "properties": {
        "lng": {
          "type": "object"
        },
        "lat": {
          "type": "object"
        }
      },
      "example": {
        "lng": 122.6428429677108,
        "lat": 65.67691234535297
      }
    },
    "BulkTaskCompletionRequestByDispatcher": {
      "type": "object",
      "title": "Task Completion Bulk Request",
      "properties": {
        "task_ids": {
          "type": "array"
        }
      },
      "example": {
        "task_ids": [
          1,
          2,
          3
        ]
      }
    },
    "HubResponse": {
      "type": "object",
      "title": "Hub Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "slug": "2021-06-25 03:35:43.520510Z",
          "shortcode": "2021-06-25 03:35:43.520517Z",
          "regions": [
            "poly5"
          ],
          "properties": {
            "description": "Sample description",
            "address": "80 Robinson Road"
          },
          "name": "Sample Hub",
          "location": {
            "lng": 103.7647132,
            "lat": 1.4630478
          },
          "inserted_at": "2021-06-25 03:35:43.520522Z",
          "company_id": 1,
          "address_item": {
            "tags": [],
            "location": {
              "lng": 103.7647132,
              "lat": 1.4630478
            },
            "id": 465,
            "external_id": "Antonietta Cremin",
            "contact_phone": "+6581551123",
            "contact_name": "Long",
            "address1": "80 Robinson Road"
          }
        }
      }
    },
    "TripsResponse": {
      "type": "object",
      "title": "Trips Response",
      "example": {
        "pagination": {
          "total_pages": 1,
          "total_count": 2,
          "limit_value": 10,
          "current_page": 1
        },
        "data": [
          {
            "worker_name": "Ralston",
            "worker_id": 345,
            "status": "scheduled",
            "start_time": "2018-08-20T23:45:00.000000Z",
            "start_location": {
              "lng": 102.3211,
              "lat": 1.23445
            },
            "start_address": "80 Robinson Road, Singapore",
            "name": "Trip on Dec 14",
            "id": 17834,
            "end_time": "2018-08-21T23:45:00.000000Z",
            "end_location": {
              "lng": 102.3211,
              "lat": 1.23445
            },
            "end_address": "10, Anson Road"
          }
        ]
      }
    },
    "GetSlotsResponse": {
      "type": "object",
      "title": "Get Slots Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "14:00-18:00": [
          {
            "pickup_to": "2020-10-27T18:00:00.000Z",
            "pickup_from": "2020-10-27T14:00:00.000Z",
            "dropoff_to": "2020-10-27T22:00:00.000Z",
            "dropoff_from": "2020-10-27T18:00:00.000Z"
          }
        ],
        "10:00-14:00": [
          {
            "pickup_to": "2020-10-27T14:00:00.000Z",
            "pickup_from": "2020-10-27T10:00:00.000Z",
            "dropoff_to": "2020-10-27T18:00:00.000Z",
            "dropoff_from": "2020-10-27T14:00:00.000Z"
          },
          {
            "pickup_to": "2020-10-27T14:00:00.000Z",
            "pickup_from": "2020-10-27T10:00:00.000Z",
            "dropoff_to": "2020-10-27T22:00:00.000Z",
            "dropoff_from": "2020-10-27T18:00:00.000Z"
          }
        ]
      },
      "description": "Get a list of booking slots"
    },
    "CompaniesResponse": {
      "type": "object",
      "title": "Driver's companies Response",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      },
      "example": {
        "message": "Got list of worker's companies",
        "data": {
          "companies": [
            {
              "title": "yojee",
              "theme": "yojee",
              "show_service_type": 1,
              "default_lang": "en",
              "company_slug": "yojee"
            }
          ]
        }
      }
    },
    "CompanyInfoResponse": {
      "type": "object",
      "title": "Company Settings Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "slug": "yojee",
          "settings": {
            "delivery_options": {
              "time_window": {
                "pickup": {
                  "to": 18,
                  "from": 10
                },
                "dropoff": {
                  "to": 22,
                  "from": 14
                }
              },
              "pickup_allowance": 2,
              "max_weight": 50,
              "advance_bookings": 14
            }
          },
          "organisation_id": 1,
          "name": "Yojee",
          "id": 1,
          "extension_schema": {
            "orders": {
              "required": [],
              "properties": {
                "load_type": {
                  "type": "string",
                  "title": "Load Type"
                }
              }
            }
          },
          "events": [
            "pickup_completed",
            "dropoff_completed"
          ],
          "display_settings": {
            "sender_access": {
              "invoice.show": true
            },
            "admin_copy": {
              "orders.show.external_id_title": "External Order ID",
              "orders.show.ccu_name_title": "Client company user name",
              "items.show.order_id_title": "Order ID",
              "default.unit": "cm"
            },
            "admin_access": {
              "workers.delete": false,
              "tracking.show_waybill": true,
              "order_items.index": true,
              "orders.update.price": false,
              "batches": false,
              "task_groups.broadcast": true,
              "items.show.service_type": true,
              "reports": true,
              "senders.show": true,
              "orders.update.external_id": false,
              "orders.create": true,
              "workers.update": true,
              "senders.index": true,
              "orders.show.price": true,
              "organisation_senders.create": true,
              "step_items.show.volume": false,
              "partners.create": true,
              "partners.update": true,
              "organisations.update": true,
              "orders.show.container_no": false,
              "orders.show.load_quantity": false,
              "task_groups.unassigned": true,
              "batches.create": false,
              "workers.index": true,
              "task_groups.assigned": true,
              "organisations.index": true,
              "invoices.show": true,
              "senders.create": true,
              "network": false,
              "orders": true,
              "workers.create": true,
              "partners.transfer": false,
              "items.update.external_customer_id": false,
              "partners.index": true,
              "orders.update": true,
              "items.show.external_customer_id2": false,
              "items.show.info": false,
              "orders.show.external_id": true,
              "dashboard": false,
              "task_groups": true,
              "partners.show": true,
              "senders.delete": false,
              "senders.update": true,
              "senders": true,
              "tracking.show_price": false,
              "orders.index": true,
              "order_items": true,
              "user_guide": false,
              "organisation_senders.index": true,
              "items.show.external_customer_id": false,
              "settings": true,
              "tracking.show_invoice": false,
              "manifests.show": false,
              "dispatchers.senders": true,
              "items.show.external_customer_id3": false,
              "settings.show.driver_management": false,
              "settings.show.create_new_user": false,
              "workers": true,
              "workers.show": true,
              "partners.delete": false,
              "items.update": false,
              "partners": true
            }
          },
          "actions": [
            "upload_photo",
            "upload_signature"
          ]
        }
      }
    },
    "DispatcherCreateMultipleSendersResponse": {
      "type": "object",
      "title": "Create Multiple Sender Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": [
          {
            "user_profile_id": 3499,
            "sender_type": "individual",
            "name": "Nam",
            "inserted_at": "2019-12-09T02:51:25.411608Z",
            "id": 1027,
            "email": "nam@abc.com"
          },
          {
            "user_profile_id": 3500,
            "sender_type": "individual",
            "name": "Nam Hoang",
            "inserted_at": "2019-12-09T02:51:25.831985Z",
            "id": 1028,
            "email": "nam@abcd.com"
          }
        ]
      }
    },
    "SpokeRequest": {
      "type": "object",
      "title": "Spoke Request",
      "properties": {
        "properties": {
          "type": "object"
        },
        "pessimistic_estimated_duration": {
          "type": "integer"
        },
        "origin_hub_id": {
          "type": "integer"
        },
        "optimistic_estimated_duration": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "modality": {
          "type": "string"
        },
        "destination_hub_id": {
          "type": "integer"
        }
      },
      "example": {
        "properties": {},
        "pessimistic_estimated_duration": 40,
        "origin_hub_id": 1,
        "optimistic_estimated_duration": 40,
        "name": "spoker",
        "modality": "road",
        "destination_hub_id": 2
      }
    },
    "DispatcherSubTasksResponse": {
      "type": "object",
      "title": "Dispatcher Sub Tasks Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 2,
          "total_count": 1,
          "limit_value": 1,
          "current_page": 1
        },
        "data": [
          {
            "task_id": 103,
            "sub_task_rule_id": 21,
            "photos": [
              "https://s3-ap-southeast-1.amazonaws.com/signature.jpg"
            ],
            "meta": {
              "photo_type": "Proof",
              "photo_title": "Signature"
            },
            "id": 21,
            "event": "pickup_completed",
            "completion_time": "2018-03-10T03:37:08",
            "company_id": 136,
            "action": "upload_photo"
          }
        ]
      }
    },
    "DeleteAddressItemsResponse": {
      "type": "object",
      "title": "Address Items Deletion Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "message": "Deleted Address Items",
        "data": [
          {
            "id": 1
          },
          {
            "id": 2
          }
        ]
      }
    },
    "DispatcherCancelOrderRequest": {
      "type": "object",
      "title": "DispatcherCancelOrderRequest",
      "properties": {
        "order_number": {
          "type": "string",
          "description": "order number"
        },
        "external_id": {
          "type": "string",
          "description": "order external id"
        }
      },
      "example": {
        "order_number": "O-WU3UQAYXPCSW",
        "external_id": "111111000000000"
      },
      "description": "Dispatcher Cancel Order Request - requires order external id or order number"
    },
    "TripCreateRequest": {
      "type": "object",
      "title": "Trip Request",
      "example": {
        "vehicle_type_id": 3,
        "tasks": [
          {
            "id": "startFromDepot",
            "eta": "2018-08-20T16:00:00.000Z"
          },
          {
            "polyline": [
              [
                103.96689,
                1.330653
              ],
              [
                103.96689,
                1.330653
              ]
            ],
            "id": "46",
            "eta": "2018-08-20T23:45:00.000Z"
          }
        ],
        "start_time": "2018-08-20T23:45:00.000Z",
        "start_location": {
          "lng": 102.3211,
          "lat": 1.23445
        },
        "start_address": "80 Robinson Road, Singapore",
        "polyline": [
          [
            103.96689,
            1.330653
          ],
          [
            103.96689,
            1.330653
          ],
          [
            103.96689,
            1.330653
          ],
          [
            103.96689,
            1.330653
          ]
        ],
        "name": "Trip on Dec 14",
        "end_time": "2018-08-21T23:45:00.000Z",
        "end_location": {
          "lng": 102.3211,
          "lat": 1.23445
        },
        "end_address": "10, Anson Road"
      }
    },
    "WebhookLogsResponse": {
      "type": "object",
      "title": "Webhooks Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 2,
          "total_count": 1,
          "limit_value": 1,
          "current_page": 1
        },
        "data": [
          {
            "webhook_id": 2,
            "updated_at": "2018-10-23T07:57:27.538169Z",
            "status": "succeeded",
            "retried_count": 1,
            "response_body": "OK",
            "inserted_at": "2018-10-23T07:57:27.538169Z",
            "http_status_code": "200",
            "event_type": "sender.created",
            "event_id": "X2yeIWLZr0qB6L",
            "event": "%{id: 'X2yeIWLZr0qB6L', data: %{}}"
          }
        ]
      }
    },
    "DispatcherUpdateSettingRequest": {
      "type": "object",
      "title": "Setting Update Request",
      "required": [
        "settings",
        "name"
      ],
      "properties": {
        "settings": {
          "type": "object",
          "description": "Setting settings"
        },
        "name": {
          "type": "string",
          "description": "Setting name"
        }
      },
      "example": {
        "settings": {
          "sample settings": "sample value"
        },
        "name": "default"
      },
      "description": "POST body for updating setting"
    },
    "DispatcherWorkersResponse": {
      "type": "object",
      "title": "Workers Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 2,
          "total_count": 1,
          "limit_value": 2,
          "current_page": 1
        },
        "data": [
          {
            "vehicle_type_registers": [
              {
                "name": "Bike",
                "id": 1
              },
              {
                "name": "Car",
                "id": 2
              }
            ],
            "vehicle_type_ids": [
              1
            ],
            "user_profile_id": 1,
            "tester": false,
            "tags": [
              {
                "value": "pickup",
                "name": "pickup",
                "id": 1,
                "external_id": "21321321"
              }
            ],
            "region_ids": [
              1
            ],
            "phone": "+987654322",
            "password": "Password1!",
            "otp_token": "1122334455",
            "national_id_photo_front": "https://yojee-uploads-demo.s3.amazonaws.com/uploads/accounts/128817/national_id/128817_original_updated-national-id-front.png",
            "national_id_photo_back": "https://yojee-uploads-demo.s3.amazonaws.com/uploads/accounts/128817/national_id/128817_original_updated-national-id-back.png",
            "national_id": "11335577",
            "name": "Driver",
            "location": {
              "lng": 122.6428429677108,
              "lat": 65.67691234535297
            },
            "inserted_at": "2021-06-25 03:35:43.505425Z",
            "email": "contact@test.com",
            "driver_license_photo_front": "https://yojee-uploads-demo.s3.amazonaws.com/uploads/accounts/128817/driver_license/128817_original_updated-driver-license-front.png?v=63701553117",
            "driver_license_photo_back": "https://yojee-uploads-demo.s3.amazonaws.com/uploads/accounts/128817/driver_license/128817_original_updated-driver-license-back.png?v=63701553117",
            "driver_license": "22446688",
            "distance_away": 1100,
            "current_vehicle_type_id": 1,
            "company_id": 1,
            "access_token": "4h/PrR5vu9uVevso3fNv2RPTLQJech3BJ/pNJhWBnfE="
          }
        ]
      }
    },
    "DispatchRuleCreateRequest": {
      "type": "object",
      "title": "Dispatch Rule Request",
      "example": {
        "worker_team_ids": [],
        "worker_id": 593,
        "timeout_in_minutes": 15,
        "service_type_id": 300,
        "region_id": 59,
        "price_currency": "SGD",
        "price_amount": 1.2,
        "name": "Assign same day to Paul",
        "action": 1
      }
    },
    "CompanyItemTypesResponse": {
      "type": "object",
      "title": "Company Item Types Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "message": "Got company item types",
        "data": [
          {
            "name": "Package",
            "id": 1024
          }
        ]
      }
    },
    "SigninRequest": {
      "type": "object",
      "title": "SigninRequest",
      "properties": {
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "example": {
        "password": "Password1!",
        "email": "long@yojee.com"
      }
    },
    "DispatcherPartnerTransferCreate": {
      "type": "object",
      "title": "Partner Transfer Order Create Request",
      "required": [
        "partnership_type",
        "contact_name",
        "contact_email",
        "contact_phone",
        "state",
        "postal_code",
        "address",
        "company_name"
      ],
      "properties": {
        "state": {
          "type": "string",
          "description": "State"
        },
        "postal_code": {
          "type": "number",
          "description": "Postal code"
        },
        "partnership_type": {
          "type": "string",
          "description": "Partnership type"
        },
        "contact_phone": {
          "type": "string",
          "description": "Phone number"
        },
        "contact_name": {
          "type": "string",
          "description": "Contact name"
        },
        "contact_email": {
          "type": "string",
          "description": "Email"
        },
        "company_name": {
          "type": "string",
          "description": "Company name"
        },
        "address": {
          "type": "string",
          "description": "Registration address"
        }
      },
      "example": {
        "tracking_numbers": [
          "YOJ-NHLZA0V3PT0"
        ],
        "price_currency": "USD",
        "price_amount": "1.00",
        "partner_cip": "CIP-RTNKAUJLQ3LWRGRA"
      }
    },
    "StatisticsResponse": {
      "type": "object",
      "title": "Statistics Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "tasks": {
              "failed": 0,
              "completed": 1,
              "assigned": 0,
              "accepted": 1
            },
            "income": "10.00",
            "date": "2018-03-31"
          }
        ]
      }
    },
    "TemplateResponse": {
      "type": "object",
      "title": "Company Template Response",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "object",
          "description": "Template object"
        }
      },
      "example": {
        "message": "Got company's template.",
        "data": {
          "id": 87,
          "fields_schema": {
            "length": {
              "type": "positive_decimal",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 5,
              "name": "Length",
              "key": "length",
              "id": 6,
              "category": "item"
            },
            "pickup_contact_phone": {
              "type": "phone",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 24,
              "name": "Pickup Contact Phone",
              "key": "pickup_contact_phone",
              "id": 25,
              "category": "pickup"
            },
            "dropoff_contact_email": {
              "type": "email",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 36,
              "name": "Dropoff Contact Email",
              "key": "dropoff_contact_email",
              "id": 37,
              "category": "dropoff"
            },
            "info": {
              "type": "string",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 13,
              "name": "Info",
              "key": "info",
              "id": 14,
              "category": "item"
            },
            "pickup_longitude": {
              "type": "longitude",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 18,
              "name": "Pickup Longitude",
              "key": "pickup_longitude",
              "id": 19,
              "category": "pickup"
            },
            "payload_type": {
              "type": "string",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 3,
              "name": "Payload Type",
              "key": "payload_type",
              "id": 4,
              "category": "item"
            },
            "width": {
              "type": "positive_decimal",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 6,
              "name": "Width",
              "key": "width",
              "id": 7,
              "category": "item"
            },
            "dropoff_to": {
              "type": "datetime",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 33,
              "name": "Dropoff To",
              "key": "dropoff_to",
              "id": 34,
              "category": "dropoff"
            },
            "description": {
              "type": "string",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 2,
              "name": "Description",
              "key": "description",
              "id": 3,
              "category": "item"
            },
            "dropoff_from": {
              "type": "datetime",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 32,
              "name": "Dropoff From",
              "key": "dropoff_from",
              "id": 33,
              "category": "dropoff"
            },
            "dropoff_address1": {
              "type": "address",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 26,
              "name": "Dropoff Address 1",
              "key": "dropoff_address1",
              "id": 27,
              "category": "dropoff"
            },
            "volume": {
              "type": "positive_decimal",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 8,
              "name": "Volume",
              "key": "volume",
              "id": 9,
              "category": "item"
            },
            "pickup_address1": {
              "type": "address",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 15,
              "name": "Pickup Address 1",
              "key": "pickup_address1",
              "id": 16,
              "category": "pickup"
            },
            "external_customer_id3": {
              "type": "string",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 12,
              "name": "External Customer ID 3",
              "key": "external_customer_id3",
              "id": 13,
              "category": "item"
            },
            "dropoff_contact_name": {
              "type": "string",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 34,
              "name": "Dropoff Contact Name",
              "key": "dropoff_contact_name",
              "id": 35,
              "category": "dropoff"
            },
            "external_customer_id2": {
              "type": "string",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 11,
              "name": "External Customer ID 2",
              "key": "external_customer_id2",
              "id": 12,
              "category": "item"
            },
            "service_type": {
              "type": "service_type",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 14,
              "name": "Service Type",
              "key": "service_type",
              "id": 15,
              "category": "item"
            },
            "pickup_to": {
              "type": "datetime",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 22,
              "name": "Pickup To",
              "key": "pickup_to",
              "id": 23,
              "category": "pickup"
            },
            "dropoff_address2": {
              "type": "address",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 27,
              "name": "Dropoff Address 2",
              "key": "dropoff_address2",
              "id": 28,
              "category": "dropoff"
            },
            "pickup_address2": {
              "type": "address",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 16,
              "name": "Pickup Address 2",
              "key": "pickup_address2",
              "id": 17,
              "category": "pickup"
            },
            "height": {
              "type": "positive_decimal",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 7,
              "name": "Height",
              "key": "height",
              "id": 8,
              "category": "item"
            },
            "container_no": {
              "type": "string",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 1,
              "name": "Container No.",
              "key": "container_no",
              "id": 2,
              "category": "order"
            },
            "dropoff_contact_phone": {
              "type": "phone",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 35,
              "name": "Dropoff Contact Phone",
              "key": "dropoff_contact_phone",
              "id": 36,
              "category": "dropoff"
            },
            "pickup_from": {
              "type": "datetime",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 21,
              "name": "Pickup From",
              "key": "pickup_from",
              "id": 22,
              "category": "pickup"
            },
            "dropoff_latitude": {
              "type": "latitude",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 28,
              "name": "Dropoff Latitude",
              "key": "dropoff_latitude",
              "id": 29,
              "category": "dropoff"
            },
            "weight": {
              "type": "positive_decimal",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 4,
              "name": "Weight",
              "key": "weight",
              "id": 5,
              "category": "item"
            },
            "volumetric_weight": {
              "type": "positive_decimal",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 9,
              "name": "Volumetric Weight",
              "key": "volumetric_weight",
              "id": 10,
              "category": "item"
            },
            "external_id": {
              "type": "string",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 0,
              "name": "External ID",
              "key": "external_id",
              "id": 1,
              "category": "order"
            },
            "dropoff_zipcode": {
              "type": "zipcode",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 31,
              "name": "Dropoff Zipcode",
              "key": "dropoff_zipcode",
              "id": 32,
              "category": "dropoff"
            },
            "pickup_contact_email": {
              "type": "email",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 25,
              "name": "Pickup Contact Email",
              "key": "pickup_contact_email",
              "id": 26,
              "category": "pickup"
            },
            "dropoff_country": {
              "type": "country",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 30,
              "name": "Dropoff Country",
              "key": "dropoff_country",
              "id": 31,
              "category": "dropoff"
            },
            "pickup_contact_name": {
              "type": "string",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 23,
              "name": "Pickup Contact Name",
              "key": "pickup_contact_name",
              "id": 24,
              "category": "pickup"
            },
            "pickup_latitude": {
              "type": "latitude",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 17,
              "name": "Pickup Latitude",
              "key": "pickup_latitude",
              "id": 18,
              "category": "pickup"
            },
            "dropoff_longitude": {
              "type": "longitude",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 29,
              "name": "Dropoff Longitude",
              "key": "dropoff_longitude",
              "id": 30,
              "category": "dropoff"
            },
            "pickup_zipcode": {
              "type": "zipcode",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 20,
              "name": "Pickup Zipcode",
              "key": "pickup_zipcode",
              "id": 21,
              "category": "pickup"
            },
            "pickup_country": {
              "type": "country",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 19,
              "name": "Pickup Country",
              "key": "pickup_country",
              "id": 20,
              "category": "pickup"
            },
            "external_customer_id": {
              "type": "string",
              "system_required": false,
              "selected": false,
              "required": false,
              "position": 10,
              "name": "External Customer Id",
              "key": "external_customer_id",
              "id": 11,
              "category": "item"
            }
          },
          "company_id": 132
        }
      },
      "description": "Company Template Response"
    },
    "JwtControlTowerIssueResponse": {
      "type": "object",
      "title": "JWT of control tower issue of control tower response",
      "required": [
        "downstream_company_slug",
        "jwt"
      ],
      "properties": {
        "jwt": {
          "type": "string",
          "description": "JWT token"
        },
        "downstream_company_slug": {
          "type": "string",
          "description": "Downstream company slug"
        }
      },
      "example": {
        "jwt": "dfksdfKJSGD*&*&(*DHKJGDHKJ",
        "downstream_company_slug": "yojee_downstream_partner"
      },
      "description": "response from a JWT of control tower issue request"
    },
    "SpokesResponse": {
      "type": "object",
      "title": "Spokes Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "properties": {},
            "pessimistic_estimated_duration": 40,
            "origin_hub_id": 1,
            "optimistic_estimated_duration": 40,
            "name": "spoker",
            "modality": "road",
            "inserted_at": "2021-06-25 03:35:43.522097Z",
            "destination_hub_id": 2,
            "company_id": 1
          }
        ]
      }
    },
    "OperationResponse": {
      "type": "object",
      "title": "Operation Response",
      "example": {
        "position_offset": 1,
        "operation_steps": [
          {
            "type": "dropoff",
            "step_sequence": 1,
            "step_group": 0,
            "service_by_hub_id": 1,
            "operation_id": 1,
            "id": 1,
            "address_item_id": 1,
            "address_item": {
              "tags": [],
              "location": {
                "lng": 103.84817049999992,
                "lat": 1.2782636
              },
              "id": 1,
              "address1": "144 Robinson Rd, The Corporate Office, Singapore 068908"
            }
          },
          {
            "type": "pickup",
            "step_sequence": 2,
            "step_group": 0,
            "service_by_hub_id": 1,
            "operation_id": 1,
            "id": 1,
            "address_item_id": 1,
            "address_item": {
              "tags": [],
              "location": {
                "lng": 103.84817049999992,
                "lat": 1.2782636
              },
              "id": 1,
              "address1": "144 Robinson Rd, The Corporate Office, Singapore 068908"
            }
          }
        ],
        "name": "Singapore to Malaysia",
        "link_to_previous": 345,
        "link_to_next": "scheduled",
        "id": 1
      }
    },
    "DispatcherOrderResponse": {
      "type": "object",
      "title": "Order Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "tracking_number": "O-M1RHTJHJZGKX",
          "status": "created",
          "sender_type": "organisation",
          "sender_id": 1,
          "price_currency": "SGD",
          "price_amount": 0,
          "order_items": [
            {
              "status": "assigned",
              "service_type": "next_day",
              "item": {
                "width": 53,
                "weight": 4,
                "volumetric_weight": 595508,
                "volume": 200,
                "tracking_number": "Y-CTBVPQ",
                "payload_type": "Package",
                "length": 53,
                "height": 53,
                "description": ""
              },
              "inserted_at": "2018-03-08T08:45:38.632070"
            }
          ],
          "number": "Z1QxNVRKUWwvKzUzc00wUkJEeXZUUT09",
          "inserted_at": "2021-06-25 03:35:43.484479Z",
          "access_token": "4h/PrR5vu9uVevso3fNv2RPTLQJech3BJ/pNJhWBnfE="
        }
      }
    },
    "CompanyUploadAssetsResponse": {
      "type": "object",
      "title": "Company Assets Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": "https://s3.us-east-1.amazonaws.com/test/uploads/companies/334/334_logo.png"
      }
    },
    "VersionResponse": {
      "type": "object",
      "title": "App version Info Response",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "message": "App version Response",
          "data": {
            "update_required": true,
            "minimum_installed_version": 500,
            "current_installed_version": 499
          }
        }
      },
      "description": "Check if app update is required"
    },
    "TasksResponse": {
      "type": "object",
      "title": "Tasks response",
      "properties": {
        "pagination": {
          "type": "object"
        },
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 1,
          "total_count": 2,
          "limit_value": 10,
          "current_page": 1
        },
        "data": [
          {
            "type": "pickup",
            "to": "2018-03-22T16:14:06.000000Z",
            "task_group_id": 2353,
            "sub_tasks": {},
            "state": "failed",
            "start_time": "2018-03-22T16:14:06.000000Z",
            "service_type": "sameday",
            "postal_code": "12345",
            "position": 0,
            "order_item_tracking_number": "YOJ-UUXOUKPNPT0",
            "order_item_id": 303,
            "lng": 106.6913373,
            "lat": 10.785092,
            "item": {
              "width": 1,
              "weight": 1,
              "volumetric_weight": 10,
              "volume": 200,
              "length": 1,
              "height": 1,
              "global_tracking_number": "YOJ-UUXOUKPNPT0"
            },
            "id": 551,
            "from": "2018-03-22T15:14:06.000000Z",
            "external_id": "12345",
            "external_customer_id3": "10644",
            "external_customer_id2": "5854977",
            "external_customer_id": "415454",
            "description": "Gift",
            "country": "Singapore",
            "container_no": "123",
            "contact": {
              "phone": "+6581551123",
              "name": "jens"
            },
            "completion_time": "2018-03-22T16:14:06.000000Z",
            "all_tracking_numbers": [
              "YOJ-NCTXAUNBPT0",
              "YOJ-CXBWWVRNPT0"
            ],
            "address_state": "State",
            "address2": "Address 2",
            "address": "40 Pham Ngoc Thach P6, Q3, HCM 1",
            "additional_info": "info"
          }
        ]
      }
    },
    "UpdateAddressItemsResponse": {
      "type": "object",
      "title": "Address Items Update Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "message": "Updated Address Items",
        "data": [
          {
            "id": 1
          },
          {
            "id": 2
          }
        ]
      }
    },
    "DispatcherCreateRuleResponse": {
      "type": "object",
      "title": "Sub Task Rule Response",
      "properties": {
        "meta": {
          "type": "object"
        },
        "event": {
          "type": "string"
        },
        "deleted_at": {
          "type": "object"
        },
        "company_id": {
          "type": "integer"
        },
        "action": {
          "type": "string"
        }
      },
      "example": {
        "meta": {
          "photo_type": "signature",
          "photo_title": "Signature of client"
        },
        "event": "pickup_completed",
        "company_id": 1,
        "action": "upload_photo"
      }
    },
    "DispatcherCreateMultipleWorkersErrorResponse": {
      "type": "object",
      "title": "Create Multiple worker Error Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": [
          {
            "phone": "+84378909987",
            "message": "The phone already exists."
          },
          {
            "phone": "+84378909981",
            "message": "The phone already exists."
          }
        ]
      }
    },
    "RegionRequest": {
      "type": "object",
      "title": "Region Request",
      "properties": {
        "type": {
          "type": "string"
        },
        "tag": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "coordinates": {
          "type": "array"
        },
        "color": {
          "type": "string"
        }
      },
      "example": {
        "type": "operational",
        "tag": "poly5",
        "description": "Sample Region",
        "coordinates": [
          [
            {
              "lng": 10,
              "lat": 35
            },
            {
              "lng": 45,
              "lat": 45
            },
            {
              "lng": 40,
              "lat": 15
            },
            {
              "lng": 20,
              "lat": 10
            },
            {
              "lng": 10,
              "lat": 35
            }
          ],
          [
            {
              "lng": 30,
              "lat": 20
            },
            {
              "lng": 35,
              "lat": 35
            },
            {
              "lng": 20,
              "lat": 30
            },
            {
              "lng": 30,
              "lat": 20
            }
          ]
        ],
        "color": "red"
      }
    },
    "OrderItemsHierarchyResponse": {
      "type": "object",
      "title": "OrderItem hierarchy Response",
      "example": [
        {
          "order_item_id": 7750,
          "consolidations": [
            {
              "quantity": 12,
              "order_item_id": 9890,
              "deconsolidated_at": "2019-09-24T10:43:56.899566",
              "deconsolidated": true,
              "consolidations": [
                {
                  "quantity": 10,
                  "order_item_id": 9905,
                  "deconsolidated_at": "2019-09-24T10:43:56.899566",
                  "deconsolidated": true,
                  "consolidations": [
                    {
                      "quantity": 5,
                      "order_item_id": 7307,
                      "deconsolidated_at": "2019-09-24T10:43:56.899566",
                      "deconsolidated": true,
                      "consolidations": [],
                      "consolidated_at": "2019-09-23T10:43:56.899566"
                    },
                    {
                      "quantity": 7,
                      "order_item_id": 9878,
                      "deconsolidated": false,
                      "consolidations": [],
                      "consolidated_at": "2019-09-23T10:43:56.899566"
                    }
                  ],
                  "consolidated_at": "2019-09-23T10:43:56.899566"
                }
              ],
              "consolidated_at": "2019-09-23T10:43:56.899566"
            }
          ]
        }
      ]
    },
    "TripResponse": {
      "type": "object",
      "title": "Trip Response",
      "example": {
        "worker_name": "Ralston",
        "worker_id": 345,
        "status": "scheduled",
        "start_time": "2018-08-20T23:45:00.000000Z",
        "start_location": {
          "lng": 102.3211,
          "lat": 1.23445
        },
        "start_address": "80 Robinson Road, Singapore",
        "polyline": [
          [
            103.96689,
            1.330653
          ],
          [
            103.96689,
            1.330653
          ],
          [
            103.96689,
            1.330653
          ],
          [
            103.96689,
            1.330653
          ]
        ],
        "name": "Trip on Dec 14",
        "id": 17834,
        "end_time": "2018-08-21T23:45:00.000000Z",
        "end_location": {
          "lng": 102.3211,
          "lat": 1.23445
        },
        "end_address": "10, Anson Road"
      }
    },
    "BroadcastResponse": {
      "type": "object",
      "title": "Broadcast Response",
      "properties": {
        "timeout_in_minutes": {
          "type": "integer"
        },
        "task_group_id": {
          "type": "integer"
        },
        "status": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "expires_at": {
          "type": "string"
        },
        "accepted_at": {
          "type": "object"
        }
      },
      "example": {
        "timeout_in_minutes": 20,
        "task_group_id": 2,
        "status": "sent",
        "price": "SGD 500",
        "id": 1,
        "expires_at": "2018-05-28T08:45:38.632070"
      }
    },
    "DispatcherUpdateWebhookRequest": {
      "type": "object",
      "title": "Webhook Request",
      "properties": {
        "url": {
          "type": "string"
        },
        "events": {
          "type": "array"
        }
      },
      "example": {
        "url": "https://cuong.free.beeceptor.com",
        "events": [
          "sender.created",
          "payment.completed"
        ]
      }
    },
    "EtaRequest": {
      "type": "object",
      "title": "Eta Request",
      "example": {
        "tasks": [
          {
            "id": 12233,
            "eta": "2018-08-20T16:00:00.000Z"
          },
          {
            "id": 12234,
            "eta": "2018-08-20T23:45:00.000Z"
          }
        ]
      }
    },
    "DispatcherPartnerResponse": {
      "type": "object",
      "title": "Partner Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "view_activities_requested_at": "2018-05-22T14:33:57.131041Z",
          "view_activities_enabled_at": "2018-05-22T14:33:57.131041Z",
          "state": "pending",
          "requested_at": "2018-05-22T14:33:57.131041Z",
          "postal_code": "321021",
          "partnership_type": "downstream",
          "country": "Singapore",
          "contact_phone": "+6591245934",
          "contact_name": "Ralston",
          "contact_email": "ralston@xyz.com",
          "company_slug": "yojee-downstream",
          "company_name": "XYZ",
          "city": "Singapore",
          "cip": "CIP-XJSI232KGTDYTDT",
          "address": "77 Robinson road, Singapore."
        }
      }
    },
    "IndexCompanySubscriptionInvoicesResponse": {
      "type": "object",
      "title": "Company subscription invoices",
      "example": {
        "data": [
          {
            "status": "paid",
            "provider_type": "stripe",
            "price": "sgd 20",
            "period_start": "2020-01-29T08:11:07Z",
            "period_end": "2020-01-29T08:11:07Z",
            "paid_at": "2020-01-29T08:11:08Z",
            "description": "1 Users × Yojee Blitz (at $20.00 / month)",
            "currency": "sgd",
            "created_at": "2020-01-29T08:11:07Z",
            "amount": 20
          }
        ]
      },
      "description": "GET response for listing subscription invoices"
    },
    "SavedFilterUpdateRequest": {
      "type": "object",
      "title": "Saved Filter Request",
      "example": {
        "service_type_ids": [
          300
        ],
        "sender_ids": [
          1,
          2,
          3
        ],
        "saved_filter": {
          "name": "Express from central Singapore"
        },
        "region_ids": [
          59,
          60
        ],
        "id": 1,
        "hub_ids": [
          4,
          5
        ]
      }
    },
    "OrderItemsLogsResponse": {
      "type": "object",
      "title": "OrderItem logs Response",
      "properties": {
        "task_log": {
          "type": "array"
        },
        "task_group_log": {
          "type": "array"
        },
        "order_item_log": {
          "type": "array"
        },
        "item_log": {
          "type": "array"
        }
      },
      "example": {
        "task_log": [
          {
            "inserted_at": "2018-08-25T04:29:05.931535Z",
            "event": "task_completed",
            "description": "Pickup completed by Hau Vo Worker 2 (+84979202707) at Thai An 3 Apartments, Đường Nguyễn Văn Quá, Đông Hưng Thuận, District 12, Ho Chi Minh City, Vietnam, at N.A."
          },
          {
            "inserted_at": "2018-08-25T04:30:55.413681Z",
            "event": "task_completed",
            "description": "Dropoff completed by Hau Vo Worker 2 (+84979202707) at Nhà Hát Thành Phố, Bến Nghé, District 1, Ho Chi Minh City, Vietnam, at N.A."
          }
        ],
        "task_group_log": [
          {
            "inserted_at": "2018-08-25T04:25:16.467462Z",
            "event": "assign_worker",
            "description": "Item assigned to Hau Vo Worker 2 (+84979202707) by Yojee Development for SGD10.00"
          },
          {
            "inserted_at": "2018-08-25T04:25:21.716739Z",
            "event": "worker_accepted_task_group",
            "description": "Item accepted by Hau Vo Worker 2 (+84979202707)"
          },
          {
            "inserted_at": "2018-08-25T04:30:55.453536Z",
            "event": "worker_completed_task_group",
            "description": "Item completed by Hau Vo Worker 2 (+84979202707)"
          }
        ],
        "order_log": [
          {
            "inserted_at": "2018-08-25T04:24:44.583929Z",
            "event": "order_created",
            "description": "Order created"
          },
          {
            "inserted_at": "2018-08-25T04:30:55.433057Z",
            "event": "order_completed",
            "description": "Order completed"
          }
        ],
        "order_item_log": [
          {
            "inserted_at": "2018-08-25T04:25:21.695050Z",
            "event": "worker_accepted_item",
            "description": "Dropoff at Nhà hát thành phố, bến nghé, district 1, ho chi minh city, vietnam accepted by Hau Vo Worker 2 (+84979202707)"
          },
          {
            "inserted_at": "2018-08-25T04:25:21.705880Z",
            "event": "worker_accepted_item",
            "description": "Pickup at Thai an 3 apartments, đường nguyễn văn quá, đông hưng thuận, district 12, ho chi minh city, vietnam accepted by Hau Vo Worker 2 (+84979202707)"
          },
          {
            "inserted_at": "2018-08-25T04:29:05.942288Z",
            "event": "pickup_completed",
            "description": "Pickup task completed by Hau Vo Worker 2 (+84979202707) at Thai An 3 Apartments, Đường Nguyễn Văn Quá, Đông Hưng Thuận, District 12, Ho Chi Minh City, Vietnam, at N.A."
          },
          {
            "inserted_at": "2018-08-25T04:30:55.436040Z",
            "event": "dropoff_completed",
            "description": "Dropoff task completed by Hau Vo Worker 2 (+84979202707) at Nhà Hát Thành Phố, Bến Nghé, District 1, Ho Chi Minh City, Vietnam, at N.A."
          }
        ]
      }
    },
    "DispatcherUpdateWorkerRequest": {
      "type": "object",
      "title": "Worker Update Request",
      "properties": {
        "vehicle_type_ids": {
          "type": "array"
        },
        "tester": {
          "type": "object"
        },
        "tags": {
          "type": "array"
        },
        "regions": {
          "type": "array"
        },
        "phone": {
          "type": "string"
        },
        "otp_token": {
          "type": "string"
        },
        "national_id_photo_front": {
          "type": "object"
        },
        "national_id_photo_back": {
          "type": "object"
        },
        "national_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "location": {
          "type": "object"
        },
        "email": {
          "type": "string"
        },
        "driver_license_photo_front": {
          "type": "object"
        },
        "driver_license": {
          "type": "string"
        },
        "current_vehicle_type_id": {
          "type": "integer"
        }
      },
      "example": {
        "vehicle_type_ids": [
          1,
          2
        ],
        "tester": true,
        "tags": [
          "tag1",
          "tag2"
        ],
        "regions": [
          1,
          2
        ],
        "phone": "+987654322",
        "otp_token": "TNUSTU2YF7BCDOYR",
        "national_id": "11335577",
        "name": "Driver",
        "location": {
          "lng": 122.6428429677108,
          "lat": 65.67691234535297
        },
        "email": "contact@test.com",
        "driver_license": "22446688",
        "current_vehicle_type_id": 1
      }
    },
    "DispatcherCreateMultipleWorkersResponse": {
      "type": "object",
      "title": "Create Multiple worker Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": [
          {
            "user_profile_id": 3499,
            "phone": "+84378909987",
            "name": "Nam",
            "inserted_at": "2019-12-09T02:51:25.411608Z",
            "id": 1027
          },
          {
            "user_profile_id": 3500,
            "phone": "+84378909981",
            "name": "Nam Hoang",
            "inserted_at": "2019-12-09T02:51:25.831985Z",
            "id": 1028
          }
        ]
      }
    },
    "VerifyPhoneOtpWithJwtResponse": {
      "type": "object",
      "title": "Verify OTP with JWT",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "yojee": {
            "user_profile_id": 1,
            "phone": "+840000000",
            "name": "Name",
            "jwt_tokens": {
              "refresh_token": "JIUzI1NiIsInR5cCI6IkpXVCJ9",
              "access_token": "dfksdfKJSGD*&*&(*DHKJGDHKJ"
            },
            "email": "email@mail.com",
            "company_slug": "yojee",
            "company_name": "Yojee"
          }
        }
      },
      "description": "Response schema for Verify OTP with JWT"
    },
    "SavedFilterResponse": {
      "type": "object",
      "title": "Saved Filter Response",
      "example": {
        "service_type": [
          {
            "name": "Car",
            "id": 3
          }
        ],
        "senders": [
          {
            "name": "Cuong",
            "id": 4
          }
        ],
        "regions": [
          {
            "name": "Jurong",
            "id": 2
          }
        ],
        "name": "Express from central Singapore",
        "id": 1,
        "hubs": [
          {
            "name": "hub1",
            "id": 5
          }
        ],
        "company_id": 1
      }
    },
    "DispatchRulesResponse": {
      "type": "object",
      "title": "Dispatch Rules Response",
      "example": {
        "data": [
          {
            "worker_teams": [],
            "worker_id": 593,
            "service_type_id": 300,
            "region_id": 59,
            "name": "Assign same day to Paul",
            "action": 1
          }
        ]
      }
    },
    "DispatcherIndexSettingResponse": {
      "type": "object",
      "title": "Settings Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "type": "object",
            "title": "Setting Response",
            "properties": {
              "data": {
                "type": "object"
              }
            },
            "example": {
              "data": {
                "settings": {
                  "sample settings": "sample value"
                },
                "name": "default",
                "id": 1,
                "company_id": 1
              }
            }
          }
        ]
      }
    },
    "RegionResponse": {
      "type": "object",
      "title": "Region Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "type": "operational",
          "tag": "poly5",
          "inserted_at": "2021-06-25 03:35:43.514672Z",
          "description": "Sample Region",
          "coordinates": [
            [
              {
                "lng": 10,
                "lat": 35
              },
              {
                "lng": 45,
                "lat": 45
              },
              {
                "lng": 40,
                "lat": 15
              },
              {
                "lng": 20,
                "lat": 10
              },
              {
                "lng": 10,
                "lat": 35
              }
            ],
            [
              {
                "lng": 30,
                "lat": 20
              },
              {
                "lng": 35,
                "lat": 35
              },
              {
                "lng": 20,
                "lat": 30
              },
              {
                "lng": 30,
                "lat": 20
              }
            ]
          ],
          "company_id": 1,
          "color": "red"
        }
      }
    },
    "AssignedTaskGroupsIndexResponse": {
      "type": "object",
      "title": "Assigned TaskGroup index Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 1,
          "total_count": 2,
          "limit_value": 25,
          "current_page": 1
        },
        "data": [
          {
            "worker": {
              "status": "on_duty",
              "name": "Ms. Jamarcus Jones",
              "id": 33955,
              "contract": "employee"
            },
            "task_group_logs": [
              {
                "inserted_at": "2018-07-18T09:58:59.585437Z",
                "id": 26523,
                "event": "assign_worker",
                "description": "Task Group assigned to Ms. Jamarcus Jones (+447450913761) by Eldon Cormier"
              }
            ],
            "state": "assigned",
            "items": [
              {
                "width": 1,
                "tracking_number": "YOJ-NLNPME93PT0",
                "tasks": [
                  {
                    "type": "pickup",
                    "to": "2018-07-18T17:58:58.565876Z",
                    "task_logs": [],
                    "task_group_id": 43771,
                    "state": "created",
                    "order_step_id": 65256,
                    "order_item_step_sequence": 1,
                    "order_item_id": 36311,
                    "lng": 103.7647132,
                    "lat": 1.4630478,
                    "id": 67695,
                    "from": "2018-07-18T09:58:58.565876Z",
                    "description": "Gift",
                    "contact": {
                      "phone": "+6581551123",
                      "name": "vivek",
                      "email": "sender@example.com"
                    },
                    "address_details": {
                      "state": "Singapore",
                      "postal_code": "112233",
                      "country": "Singapore",
                      "address2": "160 Robinson Road",
                      "address": "80 Robinson Road"
                    },
                    "address": "80 Robinson Road, 160 Robinson Road, Singapore, 112233, Singapore"
                  },
                  {
                    "type": "dropoff",
                    "to": "2018-07-19T01:58:58.565876Z",
                    "task_logs": [],
                    "task_group_id": 43771,
                    "state": "created",
                    "order_step_id": 65257,
                    "order_item_step_sequence": 2,
                    "order_item_id": 36311,
                    "lng": 103.7647132,
                    "lat": 1.4630478,
                    "id": 67696,
                    "from": "2018-07-18T17:58:58.565876Z",
                    "description": "Gift",
                    "contact": {
                      "phone": "+6581551123",
                      "name": "vivek",
                      "email": "recipient@example.com"
                    },
                    "address_details": {
                      "state": "Singapore",
                      "postal_code": "332211",
                      "country": "Singapore",
                      "address2": "50 Boon Keng Rd",
                      "address": "Boon Keng Rd"
                    },
                    "address": "Boon Keng Rd, 50 Boon Keng Rd, Singapore, 332211, Singapore"
                  }
                ],
                "progress_session": [
                  {
                    "type": "assigned",
                    "status": "blank"
                  },
                  {
                    "type": "pickup",
                    "status": "blank"
                  },
                  {
                    "type": "dropoff",
                    "status": "blank"
                  }
                ],
                "order_item_id": 36311,
                "length": 1,
                "height": 1,
                "description": "Gift"
              }
            ],
            "id": 43771
          }
        ]
      }
    },
    "RateChargeTypeResponse": {
      "type": "object",
      "title": "RateChargeType Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "name": "main",
          "inserted_at": "2021-06-25 03:35:43.545812Z",
          "description": "Base Freight",
          "code": "BFC"
        }
      }
    },
    "DispatcherCreateSenderRequest": {
      "type": "object",
      "title": "Sender Request",
      "properties": {
        "sender_type": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "billing_address": {
          "type": "string"
        }
      },
      "example": {
        "sender_type": "individual",
        "phone": "+8412345611",
        "password": "Password1!",
        "name": "Sender",
        "email": "contact@test.com",
        "billing_address": "80 Robinson Road"
      }
    },
    "ListTaskTypeMappingsResponse": {
      "type": "object",
      "title": "List task type mappings response",
      "example": [
        {
          "slug": "pickup",
          "marker_text": "P",
          "marker_color": "rgb(45,59,75)",
          "id": 1,
          "display_name": "Pickup",
          "company_id": 1
        },
        {
          "slug": "dropoff",
          "marker_text": "D",
          "marker_color": "rgb(54,134,231)",
          "id": 2,
          "display_name": "Dropoff",
          "company_id": 1
        }
      ]
    },
    "SavedFiltersResponse": {
      "type": "object",
      "title": "Saved Filters Response",
      "example": {
        "data": [
          {
            "service_type": [
              {
                "name": "Car",
                "id": 3
              }
            ],
            "senders": [
              {
                "name": "Cuong",
                "id": 4
              }
            ],
            "regions": [
              {
                "name": "Jurong",
                "id": 2
              }
            ],
            "name": "Express from central Singapore",
            "id": 1,
            "hubs": [
              {
                "name": "hub1",
                "id": 5
              }
            ],
            "company_id": 1
          }
        ]
      }
    },
    "DispatcherUpdateOrganisationRequest": {
      "type": "object",
      "title": "Organisation Details",
      "properties": {
        "user_profiles": {
          "type": "array"
        },
        "sender": {
          "type": "object"
        },
        "reg_address": {
          "type": "string"
        },
        "postal_code": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "id": {
          "type": "integer"
        },
        "extension": {
          "type": "object"
        },
        "country": {
          "type": "string"
        },
        "city": {
          "type": "string"
        }
      },
      "example": {
        "user_profiles": [
          {
            "user_profile_id": 1,
            "phone": "Sender Phone",
            "name": "Sender Name",
            "email": "sender-email@example.com"
          },
          {
            "user_profile_id": 2,
            "phone": "+6533445566",
            "name": "Corporate User 2",
            "email": "corporate-user-2@example.com"
          }
        ],
        "sender": {
          "user_profile_id": 1,
          "phone": "Sender Phone",
          "name": "Sender Name",
          "email": "sender-email@example.com",
          "billing_address": "Sender billing address"
        },
        "reg_address": "77 Robinson road, Singapore.",
        "postal_code": "321021",
        "phone": "+6591240934",
        "name": "FEDEX",
        "id": 3,
        "country": "Singapore",
        "city": "Singapore"
      }
    },
    "TaskMetaResponse": {
      "type": "object",
      "title": "Tasks Meta response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "start_of_day": "2019-03-02T16:00:00.000000Z",
            "end_of_day": "2019-03-03T15:59:59.000000Z",
            "count": 34
          },
          {
            "start_of_day": "2019-03-12T16:00:00.000000Z",
            "end_of_day": "2019-03-13T15:59:59.000000Z",
            "count": 34
          },
          {
            "start_of_day": "2019-12-23T16:00:00.000000Z",
            "end_of_day": "2019-12-24T15:59:59.000000Z",
            "count": 2
          }
        ]
      }
    },
    "OptionsRequest": {
      "type": "object",
      "title": "Options Request",
      "properties": {
        "create_worker": {
          "type": "object"
        },
        "create_individual_sender": {
          "type": "object"
        },
        "create_example_tasks": {
          "type": "object"
        },
        "create_custom_service_type": {
          "type": "object"
        },
        "create_corp_sender": {
          "type": "object"
        }
      },
      "example": {
        "create_worker": false,
        "create_individual_sender": false,
        "create_example_tasks": false,
        "create_custom_service_type": true,
        "create_corp_sender": true
      }
    },
    "RateEntryRequest": {
      "type": "object",
      "title": "RateEntry Request",
      "properties": {
        "start_date": {
          "type": "string"
        },
        "resolution_type": {
          "type": "string"
        },
        "rate_calculations": {
          "type": "array"
        },
        "perspective_type": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "load_type": {
          "type": "string"
        },
        "active": {
          "type": "object"
        }
      },
      "example": {
        "start_date": "2021-06-25T03:35:43.550720Z",
        "resolution_type": "leg",
        "rate_calculations": [
          {
            "rate_calculation_index": 0,
            "parent_rate_calculation_index": -1,
            "currency": "SGD",
            "calculation_type": "sum"
          },
          {
            "rate_calculation_index": 3,
            "parent_rate_calculation_index": 0,
            "description": "Handling Charges",
            "currency": "SGD",
            "calculation_type": "flat",
            "base": {
              "currency": "SGD",
              "amount": 2
            }
          },
          {
            "relative_rate_calculation_index": 1,
            "relative_multiplier": 0.15,
            "rate_calculation_index": 2,
            "parent_rate_calculation_index": 0,
            "description": "Fuel Surcharge",
            "currency": "SGD",
            "calculation_type": "relative"
          },
          {
            "relative_rate_calculation_index": 0,
            "relative_multiplier": 0.2,
            "rate_calculation_index": 4,
            "parent_rate_calculation_index": -1,
            "description": "GST",
            "currency": "SGD",
            "calculation_type": "relative"
          },
          {
            "rate_tables": [
              {
                "relative_variable": "quantity",
                "rate_dimensions": [
                  {
                    "variable_unit": "kilogram",
                    "variable_equality": "greater_than_equal",
                    "variable_data_type": "decimal",
                    "variable_base": "weight",
                    "variable": "weight",
                    "rate_dimension_index": 0,
                    "name": "weight_dim",
                    "calculation_method": "standard",
                    "breakpoints": [
                      "0",
                      "6",
                      "11",
                      "21"
                    ]
                  },
                  {
                    "variable_equality": "greater_than_equal",
                    "variable_data_type": "integer",
                    "variable_base": "quantity",
                    "variable": "quantity",
                    "rate_dimension_index": 1,
                    "name": "quantity_dim",
                    "calculation_method": "standard",
                    "breakpoints": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "20",
                      "100"
                    ]
                  }
                ],
                "name": "w_q",
                "matrix": {
                  "data": [
                    {
                      "value": "12",
                      "index": [
                        0,
                        0
                      ]
                    },
                    {
                      "value": "14",
                      "index": [
                        0,
                        1
                      ]
                    },
                    {
                      "value": "16",
                      "index": [
                        0,
                        2
                      ]
                    },
                    {
                      "value": "18",
                      "index": [
                        0,
                        3
                      ]
                    },
                    {
                      "value": "11",
                      "index": [
                        0,
                        4
                      ]
                    },
                    {
                      "value": "13",
                      "index": [
                        0,
                        5
                      ]
                    },
                    {
                      "value": "15",
                      "index": [
                        1,
                        0
                      ]
                    },
                    {
                      "value": "17",
                      "index": [
                        1,
                        1
                      ]
                    },
                    {
                      "value": "10",
                      "index": [
                        1,
                        2
                      ]
                    },
                    {
                      "value": "12",
                      "index": [
                        1,
                        3
                      ]
                    },
                    {
                      "value": "14",
                      "index": [
                        1,
                        4
                      ]
                    },
                    {
                      "value": "16",
                      "index": [
                        1,
                        5
                      ]
                    },
                    {
                      "value": "7",
                      "index": [
                        2,
                        0
                      ]
                    },
                    {
                      "value": "9",
                      "index": [
                        2,
                        1
                      ]
                    },
                    {
                      "value": "11",
                      "index": [
                        2,
                        2
                      ]
                    },
                    {
                      "value": "13",
                      "index": [
                        2,
                        3
                      ]
                    },
                    {
                      "value": "6",
                      "index": [
                        2,
                        4
                      ]
                    },
                    {
                      "value": "8",
                      "index": [
                        2,
                        5
                      ]
                    },
                    {
                      "value": "10",
                      "index": [
                        3,
                        0
                      ]
                    },
                    {
                      "value": "12",
                      "index": [
                        3,
                        1
                      ]
                    },
                    {
                      "value": "5.5",
                      "index": [
                        3,
                        2
                      ]
                    },
                    {
                      "value": "7.5",
                      "index": [
                        3,
                        3
                      ]
                    },
                    {
                      "value": "9.5",
                      "index": [
                        3,
                        4
                      ]
                    },
                    {
                      "value": "11.5",
                      "index": [
                        3,
                        5
                      ]
                    }
                  ]
                },
                "breakpoint_type": "absolute"
              }
            ],
            "rate_calculation_index": 1,
            "parent_rate_calculation_index": 0,
            "min": {
              "currency": "SGD",
              "amount": 2
            },
            "max": {
              "currency": "SGD",
              "amount": 20
            },
            "description": "Main Charge",
            "currency": "SGD",
            "calculation_type": "rate_table"
          }
        ],
        "perspective_type": "buy",
        "name": "advanced",
        "load_type": "ftl",
        "active": true
      }
    },
    "DispatcherOrganisationsResponse": {
      "type": "object",
      "title": "Organisations Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 2,
          "total_count": 1,
          "limit_value": 2,
          "current_page": 1
        },
        "data": [
          {
            "sender_id": 1,
            "reg_address": "77 Robinson road, Singapore.",
            "postal_code": "321021",
            "phone": "+6591245934",
            "name": "ABC",
            "id": 1,
            "country": "Singapore",
            "city": "Singapore"
          }
        ]
      }
    },
    "DispatcherPartnershipInfoUpdate": {
      "type": "object",
      "title": "Partnership Info Update Request",
      "properties": {
        "contact_phone": {
          "type": "string"
        },
        "contact_name": {
          "type": "string"
        },
        "contact_email": {
          "type": "string"
        }
      },
      "example": {
        "contact_phone": "+6591245934",
        "contact_name": "Ralston",
        "contact_email": "ralston@xyz.com"
      }
    },
    "ValidateOrderResponse": {
      "type": "object",
      "title": "[Sender] ValidateOrderResponse",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "errors": {
            "items": {
              "0": {
                "steps": {
                  "0": {
                    "contact_phone": {
                      "msg": "is invalid",
                      "data": "+652"
                    }
                  }
                },
                "item_info": {
                  "service_type": {
                    "msg": "is invalid",
                    "data": "same_day modified"
                  }
                }
              }
            }
          }
        }
      },
      "description": "Validate order errors response"
    },
    "CreateItemTypeRequest": {
      "type": "object",
      "title": "Create Item Type Request",
      "properties": {
        "name": {
          "type": "string"
        },
        "billing_name": {
          "type": "string"
        }
      },
      "example": {
        "name": "Package",
        "billing_name": "Package"
      }
    },
    "TaskGroupResponse": {
      "type": "object",
      "title": "TaskGroup Response",
      "properties": {
        "type": {
          "type": "string"
        },
        "to": {
          "type": "string"
        },
        "task_group_id": {
          "type": "integer"
        },
        "state": {
          "type": "string"
        },
        "start_time": {
          "type": "string"
        },
        "service_type": {
          "type": "string"
        },
        "price": {
          "type": "string"
        },
        "postal_code": {
          "type": "string"
        },
        "order_item_tracking_number": {
          "type": "string"
        },
        "order_item_id": {
          "type": "integer"
        },
        "lng": {
          "type": "object"
        },
        "lat": {
          "type": "object"
        },
        "item": {
          "type": "object"
        },
        "id": {
          "type": "integer"
        },
        "from": {
          "type": "string"
        },
        "external_id": {
          "type": "string"
        },
        "external_customer_id3": {
          "type": "string"
        },
        "external_customer_id2": {
          "type": "string"
        },
        "external_customer_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "country": {
          "type": "string"
        },
        "container_no": {
          "type": "string"
        },
        "contact": {
          "type": "object"
        },
        "completion_time": {
          "type": "string"
        },
        "address_state": {
          "type": "string"
        },
        "address2": {
          "type": "string"
        },
        "address": {
          "type": "string"
        },
        "additional_info": {
          "type": "string"
        }
      },
      "example": {
        "type": "pickup",
        "to": "2018-03-27T10:00:00.000000Z",
        "task_group_id": 4213,
        "state": "created",
        "start_time": "2018-03-27T10:00:00.000000Z",
        "service_type": "next_day",
        "price": "SGD 10",
        "postal_code": "84184",
        "order_item_tracking_number": "YOJ-229",
        "order_item_id": 229,
        "lng": 103.90331700000002,
        "lat": 1.329095,
        "item": {
          "width": 29,
          "weight": 5,
          "volumetric_weight": 121945,
          "volume": 200,
          "length": 29,
          "height": 29,
          "global_tracking_number": "Y-MEJZPQ"
        },
        "id": 1,
        "from": "2018-03-27T02 =>00 =>00.000000Z",
        "external_id": "ID-1",
        "external_customer_id3": "1345564",
        "external_customer_id2": "545415",
        "external_customer_id": "54418",
        "description": "TEST",
        "country": "Singapore",
        "container_no": "13",
        "contact": {
          "phone": "+6591234567",
          "name": "kris sender"
        },
        "completion_time": "2018-03-26T09 =>49 =>42.679519Z",
        "address_state": "State",
        "address2": "TESTAS",
        "address": "Singapore 400314",
        "additional_info": "Info"
      }
    },
    "VerifyPhoneOtpResponse": {
      "type": "object",
      "title": "Verify OTP",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "yojee": {
            "user_profile_id": 1,
            "phone": "+840000000",
            "name": "Name",
            "email": "email@mail.com",
            "company_slug": "yojee",
            "company_name": "Yojee",
            "access_token": "5WDbYhzPnx94asCscWmv9FXJUUDolDeEgwM4QV62Qh38="
          }
        }
      },
      "description": "Response schema for Verify OTP"
    },
    "DispatcherPartnershipInfo": {
      "type": "object",
      "title": "Partnership Info",
      "properties": {
        "discovery_mode": {
          "type": "object"
        },
        "contact_phone": {
          "type": "string"
        },
        "contact_name": {
          "type": "string"
        },
        "contact_email": {
          "type": "string"
        },
        "cip": {
          "type": "string"
        }
      },
      "example": {
        "discovery_mode": false,
        "contact_phone": "+6591245934",
        "contact_name": "Ralston",
        "contact_email": "ralston@xyz.com",
        "cip": "CIP-JSUUWH907EOOE"
      }
    },
    "UnassignedTaskGroupsIndexResponse": {
      "type": "object",
      "title": "Unassigned TaskGroup index Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 1,
          "total_count": 2,
          "limit_value": 25,
          "current_page": 1
        },
        "data": [
          {
            "task_group_logs": [],
            "state": "unassigned",
            "order_steps": [
              {
                "type": "pickup",
                "to_time": "2018-07-18T17:57:06.698170Z",
                "sequence": 1,
                "lng": 103.7647132,
                "lat": 1.4630478,
                "item_count": 1,
                "id": 65254,
                "from_time": "2018-07-18T09:57:06.698170Z",
                "first_item": {
                  "width": 1,
                  "tracking_number": "YOJ-C3JHBZLRPT0",
                  "order_item_id": 36310,
                  "length": 1,
                  "height": 1,
                  "external_id": "External test #1",
                  "external_customer_id3": "external_customer_id3_test",
                  "external_customer_id2": "external_customer_id2_test",
                  "external_customer_id": "external_customer_id_test",
                  "description": "Gift",
                  "container_no": "Container test #1"
                },
                "contact": {
                  "phone": "+6581551123",
                  "name": "vivek",
                  "email": "sender@example.com"
                },
                "address_details": {
                  "state": "Singapore",
                  "postal_code": "112233",
                  "country": "Singapore",
                  "address2": "160 Robinson Road",
                  "address": "80 Robinson Road"
                },
                "address": "80 Robinson Road, 160 Robinson Road, Singapore, 112233, Singapore"
              },
              {
                "type": "dropoff",
                "to_time": "2018-07-19T01:57:06.698170Z",
                "sequence": 2,
                "lng": 103.7647132,
                "lat": 1.4630478,
                "item_count": 1,
                "id": 65255,
                "from_time": "2018-07-18T17:57:06.698170Z",
                "first_item": {
                  "width": 1,
                  "tracking_number": "YOJ-C3JHBZLRPT0",
                  "order_item_id": 36310,
                  "length": 1,
                  "height": 1,
                  "external_id": "External test #1",
                  "external_customer_id3": "external_customer_id3_test",
                  "external_customer_id2": "external_customer_id2_test",
                  "external_customer_id": "external_customer_id_test",
                  "description": "Gift",
                  "container_no": "Container test #1"
                },
                "contact": {
                  "phone": "+6581551123",
                  "name": "vivek",
                  "email": "recipient@example.com"
                },
                "address_details": {
                  "state": "Singapore",
                  "postal_code": "332211",
                  "country": "Singapore",
                  "address2": "50 Boon Keng Rd",
                  "address": "Boon Keng Rd"
                },
                "address": "Boon Keng Rd, 50 Boon Keng Rd, Singapore, 332211, Singapore"
              }
            ],
            "id": 43770
          }
        ]
      }
    },
    "RatingResponse": {
      "type": "object",
      "title": "Rating Response",
      "properties": {
        "total": {
          "type": "object"
        },
        "payloads": {
          "type": "array"
        },
        "errors": {
          "type": "array"
        },
        "charges": {
          "type": "array"
        }
      },
      "example": {
        "total": {
          "currency": "SGD",
          "amount": "13.440000000"
        },
        "payloads": [],
        "errors": [],
        "charges": [
          {
            "success": true,
            "rate_entry_id": 1,
            "rate_calculation_index": 4,
            "parent_rate_calculation_index": -1,
            "charge": {
              "currency": "SGD",
              "amount": "2.240000000"
            },
            "calculation_type": "relative",
            "calculation_description": "GST"
          },
          {
            "success": true,
            "rate_entry_id": 1,
            "rate_calculation_index": 0,
            "parent_rate_calculation_index": -1,
            "charge": {
              "currency": "SGD",
              "amount": "11.20000000"
            },
            "calculation_type": "sum"
          },
          {
            "success": true,
            "rate_entry_id": 1,
            "rate_calculation_index": 2,
            "parent_rate_calculation_index": 0,
            "charge": {
              "currency": "SGD",
              "amount": "1.20"
            },
            "calculation_type": "relative",
            "calculation_description": "Fuel Surcharge"
          },
          {
            "success": true,
            "rate_entry_id": 1,
            "rate_calculation_index": 1,
            "parent_rate_calculation_index": 0,
            "charge": {
              "currency": "SGD",
              "amount": "8"
            },
            "calculation_type": "rate_table",
            "calculation_description": "Main Charge"
          },
          {
            "success": true,
            "rate_entry_id": 1,
            "rate_calculation_index": 3,
            "parent_rate_calculation_index": 0,
            "charge": {
              "currency": "SGD",
              "amount": "2.00000000"
            },
            "calculation_type": "flat",
            "calculation_description": "Handling Charges"
          }
        ]
      }
    },
    "GetOrderPricesRequest": {
      "type": "object",
      "title": "Get Multi Prices Request",
      "properties": {
        "to_address": {
          "description": "Dropoff address",
          "$ref": "#/definitions/OrderAddress"
        },
        "slug": {
          "type": "string",
          "description": "yojee"
        },
        "item": {
          "$ref": "#/definitions/OrderItem"
        },
        "from_address": {
          "description": "Pickup address",
          "$ref": "#/definitions/OrderAddress"
        }
      },
      "example": {
        "slug": "yojee",
        "order_items": [
          {
            "to_address": {
              "zipcode": "189703",
              "location": "1.2976764,103.85701760000006",
              "lng": "103.85701760000006",
              "lat": "1.2976764",
              "country": "Singpore"
            },
            "service_type": "same_day",
            "item": {
              "weight": 4
            },
            "from_address": {
              "zipcode": "068896",
              "location": "1.2777689,103.84839149999993",
              "lng": "103.84839149999993",
              "lat": "1.2777689",
              "country": "Singpore"
            }
          },
          {
            "to_address": {
              "zipcode": "189703",
              "location": "1.2976764,103.85701760000006",
              "lng": "103.85701760000006",
              "lat": "1.2976764",
              "country": "Singpore"
            },
            "service_type": "same_day",
            "item": {
              "weight": 10
            },
            "from_address": {
              "zipcode": "068896",
              "location": "1.2777689,103.84839149999993",
              "lng": "103.84839149999993",
              "lat": "1.2777689",
              "country": "Singpore"
            }
          }
        ]
      },
      "description": "Get the multiple items price estimate"
    },
    "DispatcherCreateRoleResponse": {
      "type": "object",
      "title": "Role Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "name": "role_1",
          "inserted_at": "2021-06-25 03:35:43.512762Z",
          "company_id": 123,
          "access_map": {
            "sender": {
              "add": true
            }
          }
        }
      }
    },
    "StopsResponse": {
      "type": "object",
      "title": "Stops response",
      "properties": {
        "pagination": {
          "type": "object"
        },
        "data": {
          "type": "array"
        }
      },
      "example": {
        "pagination": {
          "total_pages": 1,
          "total_count": 2,
          "limit_value": 10,
          "current_page": 1
        },
        "data": [
          {
            "to": "2018-11-14T06:00:00.000000Z",
            "postal_code": "068896",
            "order_number": "O-D3VHSKDORDNM",
            "lng": 103.8209837,
            "lat": 1.2942236,
            "id": 3586,
            "from": "2018-11-14T02:00:00.000000Z",
            "country": "Singapore",
            "contact": {
              "phone": "+6531591335",
              "name": "Yojee Ops",
              "email": "contact@test.com",
              "company": "yojee"
            },
            "address_state": "Singapore",
            "address2": "#03-01",
            "address": "59 South Park Road"
          }
        ]
      }
    },
    "DispatcherUpdateConfigurationRequest": {
      "type": "object",
      "title": "Configuration Request",
      "properties": {
        "non_login_img": {
          "type": "string"
        },
        "logo": {
          "type": "string"
        },
        "background_color": {
          "type": "string"
        }
      },
      "example": {
        "non_login_img": "File Upload",
        "logo": "File Upload",
        "background_color": "#FFFFFF"
      }
    },
    "DispatcherRequest": {
      "type": "object",
      "title": "Dispatcher Request",
      "properties": {
        "phone": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        }
      },
      "example": {
        "phone": "+6512345433",
        "password": "abcyojee",
        "name": "Mido",
        "email": "contact@test.com"
      }
    },
    "DispatcherCreateVehicleTypeRequest": {
      "type": "object",
      "title": "vehicle type create request",
      "properties": {
        "routing_vehicle_profile_id": {
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "max_load_space_volume": {
          "type": "integer"
        },
        "max_carry_weight": {
          "type": "integer"
        },
        "carry_unit": {
          "type": "integer"
        }
      },
      "example": {
        "routing_vehicle_profile_id": 4,
        "name": "chenfei",
        "max_load_space_volume": 22,
        "max_carry_weight": 3,
        "carry_unit": 8
      }
    },
    "DispatcherUpdateRuleRequest": {
      "type": "object",
      "title": "Sub Task Rule Request",
      "properties": {
        "meta": {
          "type": "object"
        },
        "event": {
          "type": "string"
        },
        "deleted_at": {
          "type": "object"
        },
        "company_id": {
          "type": "integer"
        },
        "action": {
          "type": "string"
        }
      },
      "example": {
        "meta": {
          "photo_type": "signature",
          "photo_title": "Signature of client"
        },
        "event": "pickup_completed",
        "company_id": 1,
        "action": "upload_photo"
      }
    },
    "RateEntryResponse": {
      "type": "object",
      "title": "RateEntry Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "start_date": "2021-06-25T03:35:43.550932Z",
          "resolution_type": "leg",
          "rate_calculations": [
            {
              "rate_calculation_index": 0,
              "parent_rate_calculation_index": -1,
              "currency": "SGD",
              "calculation_type": "sum"
            },
            {
              "rate_calculation_index": 3,
              "parent_rate_calculation_index": 0,
              "description": "Handling Charges",
              "currency": "SGD",
              "calculation_type": "flat",
              "base": {
                "currency": "SGD",
                "amount": 2
              }
            },
            {
              "relative_rate_calculation_index": 1,
              "relative_multiplier": 0.15,
              "rate_calculation_index": 2,
              "parent_rate_calculation_index": 0,
              "description": "Fuel Surcharge",
              "currency": "SGD",
              "calculation_type": "relative"
            },
            {
              "relative_rate_calculation_index": 0,
              "relative_multiplier": 0.2,
              "rate_calculation_index": 4,
              "parent_rate_calculation_index": -1,
              "description": "GST",
              "currency": "SGD",
              "calculation_type": "relative"
            },
            {
              "rate_tables": [
                {
                  "relative_variable": "quantity",
                  "rate_dimensions": [
                    {
                      "variable_unit": "kilogram",
                      "variable_equality": "greater_than_equal",
                      "variable_data_type": "decimal",
                      "variable_base": "weight",
                      "variable": "weight",
                      "rate_dimension_index": 0,
                      "name": "weight_dim",
                      "calculation_method": "standard",
                      "breakpoints": [
                        "0",
                        "6",
                        "11",
                        "21"
                      ]
                    },
                    {
                      "variable_equality": "greater_than_equal",
                      "variable_data_type": "integer",
                      "variable_base": "quantity",
                      "variable": "quantity",
                      "rate_dimension_index": 1,
                      "name": "quantity_dim",
                      "calculation_method": "standard",
                      "breakpoints": [
                        "1",
                        "2",
                        "3",
                        "4",
                        "20",
                        "100"
                      ]
                    }
                  ],
                  "name": "w_q",
                  "matrix": {
                    "data": [
                      {
                        "value": "12",
                        "index": [
                          0,
                          0
                        ]
                      },
                      {
                        "value": "14",
                        "index": [
                          0,
                          1
                        ]
                      },
                      {
                        "value": "16",
                        "index": [
                          0,
                          2
                        ]
                      },
                      {
                        "value": "18",
                        "index": [
                          0,
                          3
                        ]
                      },
                      {
                        "value": "11",
                        "index": [
                          0,
                          4
                        ]
                      },
                      {
                        "value": "13",
                        "index": [
                          0,
                          5
                        ]
                      },
                      {
                        "value": "15",
                        "index": [
                          1,
                          0
                        ]
                      },
                      {
                        "value": "17",
                        "index": [
                          1,
                          1
                        ]
                      },
                      {
                        "value": "10",
                        "index": [
                          1,
                          2
                        ]
                      },
                      {
                        "value": "12",
                        "index": [
                          1,
                          3
                        ]
                      },
                      {
                        "value": "14",
                        "index": [
                          1,
                          4
                        ]
                      },
                      {
                        "value": "16",
                        "index": [
                          1,
                          5
                        ]
                      },
                      {
                        "value": "7",
                        "index": [
                          2,
                          0
                        ]
                      },
                      {
                        "value": "9",
                        "index": [
                          2,
                          1
                        ]
                      },
                      {
                        "value": "11",
                        "index": [
                          2,
                          2
                        ]
                      },
                      {
                        "value": "13",
                        "index": [
                          2,
                          3
                        ]
                      },
                      {
                        "value": "6",
                        "index": [
                          2,
                          4
                        ]
                      },
                      {
                        "value": "8",
                        "index": [
                          2,
                          5
                        ]
                      },
                      {
                        "value": "10",
                        "index": [
                          3,
                          0
                        ]
                      },
                      {
                        "value": "12",
                        "index": [
                          3,
                          1
                        ]
                      },
                      {
                        "value": "5.5",
                        "index": [
                          3,
                          2
                        ]
                      },
                      {
                        "value": "7.5",
                        "index": [
                          3,
                          3
                        ]
                      },
                      {
                        "value": "9.5",
                        "index": [
                          3,
                          4
                        ]
                      },
                      {
                        "value": "11.5",
                        "index": [
                          3,
                          5
                        ]
                      }
                    ]
                  },
                  "breakpoint_type": "absolute"
                }
              ],
              "rate_calculation_index": 1,
              "parent_rate_calculation_index": 0,
              "min": {
                "currency": "SGD",
                "amount": 2
              },
              "max": {
                "currency": "SGD",
                "amount": 20
              },
              "description": "Main Charge",
              "currency": "SGD",
              "calculation_type": "rate_table"
            }
          ],
          "perspective_type": "buy",
          "name": "advanced",
          "load_type": "ftl",
          "inserted_at": "2021-06-25 03:35:43.550941Z",
          "company_id": 1,
          "active": true
        }
      }
    },
    "DispatcherCreateOrderResponse": {
      "type": "object",
      "title": "[Dispatcher] CreateOrderResponse",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "status": "created",
          "sender_id": 4,
          "price": {
            "currency": "SGD",
            "amount": "0"
          },
          "placed_by_user_profile_id": 3,
          "paid": false,
          "order_items": [
            {
              "tracking_number": "YOJ-YLPLJ4BDRHQW",
              "id": 4
            }
          ],
          "number": "O-ZDEQXQXLKNY1",
          "inserted_at": "2019-09-16T03:41:40.455934Z",
          "id": 5,
          "display_price": "SGD 0"
        }
      },
      "description": "Create order response"
    },
    "DispatcherUpdateWorkerTeamRequest": {
      "type": "object",
      "title": "Worker Team Update Request",
      "example": {
        "name": "Changi morning shift 8 am"
      }
    },
    "SenderCreateOrderResponse": {
      "type": "object",
      "title": "[Sender] CreateOrderResponse",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "status": "created",
          "sender_id": 471,
          "price": {
            "currency": "SGD",
            "amount": "10"
          },
          "placed_by_user_profile_id": 1313,
          "paid": false,
          "order_items": {
            "tracking_number": "YOJ-WC9DC3V3PT0",
            "id": 17258
          },
          "number": "O-VWJ1WE5KAW5U",
          "inserted_at": "2018-09-26T14: 55: 40.781628Z",
          "id": 3472,
          "display_price": "SGD 10"
        }
      },
      "description": "Create order response"
    },
    "BulkTaskCompletionRequest": {
      "type": "object",
      "title": "Task Completion Bulk Request",
      "properties": {
        "type": {
          "type": "string"
        },
        "tracking_numbers": {
          "type": "array"
        },
        "location": {
          "type": "object"
        },
        "completion_time": {
          "type": "string"
        },
        "comment": {
          "type": "string"
        }
      },
      "example": {
        "type": "pickup",
        "tracking_numbers": [
          "YOJ-YXFCYNNRPT0",
          "YOJ-YXFCYNNRPT8",
          "YOJ-YXFCYNNRPT0"
        ],
        "location": {
          "lng": 122.6428429677108,
          "lat": 65.67691234535297
        },
        "completion_time": "2018-03-10T03:37:08Z",
        "comment": "this is a comment for complete a task"
      }
    },
    "SpokeResponse": {
      "type": "object",
      "title": "Spoke Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "properties": {},
          "pessimistic_estimated_duration": 40,
          "origin_hub_id": 1,
          "optimistic_estimated_duration": 40,
          "name": "spoker",
          "modality": "road",
          "inserted_at": "2021-06-25 03:35:43.522055Z",
          "destination_hub_id": 2,
          "company_id": 1
        }
      }
    },
    "ValidateOrderRequest": {
      "type": "object",
      "title": "[Sender] Validate Order Request",
      "required": [
        "items"
      ],
      "properties": {
        "price_currency": {
          "type": "string",
          "description": "Order currency"
        },
        "price_amount": {
          "type": "number",
          "description": "Order price"
        },
        "items": {
          "type": "array",
          "description": "List of items to be sent"
        }
      },
      "example": {
        "slug": "yojee",
        "price_currency": "SGD",
        "price_amount": "15.00",
        "items": [
          {
            "steps": [
              {
                "type": "pickup",
                "to_time": "2019-12-11T07:00:00.000Z",
                "state": "",
                "postal_code": "039803",
                "lng": 103.8631368,
                "lat": 1.2892988,
                "from_time": "2019-12-11T03:00:00.000Z",
                "country": "Singapore",
                "contact_phone": "+652",
                "contact_name": "yojee contact name",
                "contact_email": "yojee@gmail.com",
                "contact_company": "contact company",
                "city": "Singapore",
                "address2": "address2 singapore",
                "address": "Raffles Avenue, Singapore Flyer, Singapore"
              },
              {
                "type": "dropoff",
                "to_time": "2019-12-11T11:00:00.000Z",
                "state": "",
                "postal_code": "486150",
                "lng": 103.95953699999995,
                "lat": 1.3335251,
                "from_time": "2019-12-11T07:00:00.000Z",
                "country": "Singapore",
                "contact_phone": "+651265434656",
                "contact_name": "yojee dropoff",
                "contact_email": "yojeedropoff@gmail.com",
                "contact_company": "contact dropoff company",
                "city": "Singapore",
                "address2": "unit no dropoff address2",
                "address": "Expo Drive, Singapore Expo, Singapore"
              }
            ],
            "item_info": {
              "width": 3,
              "weight": 3,
              "volumetric_weight": 1,
              "volume": 60,
              "service_type": "same_day modified",
              "quantity": "1",
              "price_info": "Base price: 12, Surcharge: 3",
              "price_amount": "15",
              "payload_type": "",
              "length": 4,
              "info": "additional info",
              "height": 5,
              "external_customer_id3": "external id 3",
              "external_customer_id2": "external id 2",
              "external_customer_id": "external id",
              "description": "description",
              "cod_price_currency": "SGD",
              "cod_price_amount": "46"
            }
          }
        ]
      },
      "description": "POST body for sender to validate an order"
    },
    "DispatcherIndexPlanResponse": {
      "type": "object",
      "title": "Plans Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "type": "object",
            "title": "Plan Response",
            "properties": {
              "data": {
                "type": "object"
              }
            },
            "example": {
              "data": {
                "uuid": "123456789",
                "settings": {
                  "sample settings": "sample value"
                },
                "output": {
                  "sample output": "sample value"
                },
                "input": {
                  "sample input": "sample value"
                },
                "id": 1,
                "company_id": 1
              }
            }
          }
        ]
      }
    },
    "DispatcherCreateSenderResponse": {
      "type": "object",
      "title": "Sender Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "sender_user_profile_id": 1,
          "sender_type": "individual",
          "phone": "+8412345611",
          "password": "Password1!",
          "name": "Sender",
          "inserted_at": "2021-06-25 03:35:43.499277Z",
          "id": 5,
          "email": "contact@test.com",
          "billing_address": "80 Robinson Road"
        }
      }
    },
    "RateChargeTypesRequest": {
      "type": "object",
      "title": "RateChargeTypes Request",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "rate_charge_types": [
          {
            "name": "main",
            "description": "Base Freight",
            "code": "BFC"
          },
          {
            "name": "handling",
            "description": "Handling Charges",
            "code": "HC"
          },
          {
            "name": "fuel",
            "description": "Fuel Charges",
            "code": "FCC"
          },
          {
            "name": "gst",
            "description": "GST",
            "code": "GST"
          }
        ]
      }
    },
    "DispatcherCreateOrganisationRequest": {
      "type": "object",
      "title": "Organisation Request",
      "properties": {
        "title": {
          "type": "string"
        },
        "sender_type": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "payment_option": {
          "type": "string"
        },
        "organisation": {
          "type": "object"
        },
        "name": {
          "type": "string"
        },
        "gst_no": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "business_reg_no": {
          "type": "string"
        },
        "billing_address": {
          "type": "string"
        }
      },
      "example": {
        "title": "Engineer",
        "sender_type": "organisation",
        "phone": "+6598765432",
        "payment_option": "monthly_billing",
        "organisation": {
          "reg_address": "77 Robinson road, Singapore.",
          "postal_code": "321021",
          "phone": "+6591245934",
          "name": "ABC",
          "country": "Singapore",
          "city": "Singapore"
        },
        "name": "Ralston",
        "gst_no": "2AS9890",
        "email": "primary_account@abc.com",
        "business_reg_no": "ABC1235M",
        "billing_address": "77 Robinson road, Singapore."
      }
    },
    "ApplyOperationsRequest": {
      "type": "object",
      "title": "Apply Operations Request",
      "example": {
        "step_list": [
          {
            "type": "pickup",
            "step_sequence": 1,
            "step_group": 0,
            "service_by_hub_id": 1,
            "order_step": {
              "state": "Singapore",
              "postal_code": 486029,
              "location": {
                "lng": 103.9647923,
                "lat": 1.3326343
              },
              "country": "Singapore",
              "contact_phone": "+6534567890",
              "contact_name": "John",
              "contact_email": "john_smith@test.com",
              "contact_company": "Tester",
              "address": "2 Changi Business Park Crescent"
            },
            "id": 1,
            "address_item_id": 1,
            "address_item": {
              "tags": [],
              "location": {
                "lng": 103.84817049999992,
                "lat": 1.2782636
              },
              "id": 1,
              "address1": "144 Robinson Rd, The Corporate Office, Singapore 068908"
            }
          },
          {
            "type": "dropoff",
            "step_sequence": 2,
            "step_group": 0,
            "service_by_hub_id": 1,
            "order_step": {
              "state": "Kuala Lumpur",
              "postal_code": 50470,
              "location": {
                "lng": 101.6841484,
                "lat": 3.1343385
              },
              "country": "Malaysia",
              "contact_phone": "+60 016 1234567",
              "contact_name": "Bob",
              "contact_email": "bob@test.com",
              "contact_company": "Tester_kl",
              "address": "Stesen Sentral Kuala Lumpur"
            },
            "id": 1,
            "address_item_id": 1,
            "address_item": {
              "tags": [],
              "location": {
                "lng": 103.84817049999992,
                "lat": 1.2782636
              },
              "id": 1,
              "address1": "144 Robinson Rd, The Corporate Office, Singapore 068908"
            }
          }
        ],
        "operation_list": [
          1
        ]
      }
    },
    "DispatcherRouteScheduleRequest": {
      "type": "object",
      "title": "Create Route Schedule Request",
      "required": [
        "route_schedule_points",
        "worker_id",
        "name"
      ],
      "properties": {
        "worker_id": {
          "type": "integer",
          "description": "Worker ID"
        },
        "route_schedule_points": {
          "type": "array",
          "description": "List of route schedule points"
        },
        "name": {
          "type": "string",
          "description": "Route Schedule name"
        }
      },
      "example": {
        "worker_id": 1,
        "route_schedule_points": [
          {
            "arrival_time": "15:00:00",
            "address_item_id": 1
          }
        ],
        "name": "test"
      },
      "description": "POST body for sender to create a route schedule"
    },
    "DispatcherIndexUserResponse": {
      "type": "object",
      "title": "Users Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "user_profile": 1,
            "phone": "+987654330",
            "name": "Dispatcher",
            "inserted_at": "2021-06-25 03:35:43.490353Z",
            "email": "contact@test.com",
            "company_id": 1
          }
        ]
      }
    },
    "SenderSearchRouteScheduleResponse": {
      "type": "object",
      "title": "Search Route Schedules Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "worker_id": 1,
            "route_schedule_points": [
              {
                "route_schedule_id": 2,
                "position": 0,
                "location": {
                  "lng": 1,
                  "lat": 1
                },
                "id": 1,
                "duration": 1800,
                "departure_datetime": "2019-07-30T03:00:00.000000Z",
                "day_offset": 0,
                "arrival_datetime": "2019-07-30T03:30:34.000000Z",
                "address_item_id": 1,
                "address": "80 Robinson Road"
              }
            ],
            "name": "test",
            "id": 2,
            "company_id": 1
          }
        ]
      }
    },
    "OrderItemsJobsResponse": {
      "type": "object",
      "title": "OrderItem Jobs Response",
      "example": {
        "data": [
          {
            "source_order_item_step_id": 19721,
            "metadata": {
              "consol": "1234"
            },
            "id": 3,
            "destination_order_item_step_id": 19722
          }
        ]
      }
    },
    "ServiceTypeResponse": {
      "type": "object",
      "title": "Service type response",
      "example": {
        "window_size": 240,
        "task_type_sequence": [
          [
            "pickup",
            "dropoff"
          ]
        ],
        "slots": [
          {
            "to": "14:00:00",
            "task_types": [
              "pickup",
              "dropoff"
            ],
            "from": "10:00:00"
          },
          {
            "to": "18:00:00",
            "task_types": [
              "pickup",
              "dropoff"
            ],
            "from": "14:00:00"
          },
          {
            "to": "22:00:00",
            "task_types": [
              "pickup",
              "dropoff"
            ],
            "from": "18:00:00"
          }
        ],
        "sla_time": 960,
        "pricing_model_uuid": "514067d0-c825-11e7-a0a0-37e338dc8269",
        "preassign": false,
        "point2point": true,
        "non_operating_days": [
          1,
          2
        ],
        "name": "Same Day",
        "min_window_size": 180,
        "lead_time": 60,
        "key": "same_day",
        "isolate_tasks": false,
        "id": 1,
        "description": "same day service type"
      }
    },
    "DispatcherCreateUserResponse": {
      "type": "object",
      "title": "User Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "user_profile": 1,
          "phone": "+987654330",
          "name": "Dispatcher",
          "inserted_at": "2021-06-25 03:35:43.490404Z",
          "email": "contact@test.com",
          "company_id": 1
        }
      }
    },
    "DispatcherIndexRouteScheduleResponse": {
      "type": "object",
      "title": "Route Schedules List Response",
      "properties": {
        "data": {
          "type": "array"
        }
      },
      "example": {
        "data": [
          {
            "worker_id": 1,
            "route_schedule_points": [
              {
                "route_schedule_id": 2,
                "position": 0,
                "location": {
                  "lng": 103.819836,
                  "lat": 1.352083
                },
                "id": 5,
                "duration": 900,
                "day_offset": 0,
                "arrival_time": "15:00:00",
                "address_item_id": 1,
                "address": "80 robinson road"
              }
            ],
            "name": "test",
            "id": 2,
            "company_id": 1
          }
        ]
      }
    },
    "ListTimeslotCapacityResponse": {
      "type": "object",
      "title": "TimeslotCapacityResponse",
      "example": {
        "version": "00822ff",
        "timestamp": "2020-03-28T08:50:14Z",
        "data": [
          {
            "to_datetime": "2020-03-26T00:15:00Z",
            "remaining_units": 0,
            "hub_id": 80,
            "from_datetime": "2020-03-26T00:00:00Z"
          },
          {
            "to_datetime": "2020-03-26T01:15:00Z",
            "remaining_units": 0,
            "hub_id": 80,
            "from_datetime": "2020-03-26T01:00:00Z"
          }
        ],
        "code": 200
      },
      "description": "Response schema for listing timeslot capacity"
    },
    "WorkerSubTaskBulkRequest": {
      "type": "object",
      "title": "Worker SubTask Bulk Complete Response",
      "properties": {
        "task_ids": {
          "type": "array"
        },
        "sub_task_rule_id": {
          "type": "integer"
        },
        "photos": {
          "type": "array"
        },
        "meta": {
          "type": "object"
        },
        "event": {
          "type": "string"
        },
        "completion_time": {
          "type": "string"
        },
        "completion_location": {
          "type": "object"
        },
        "completion_data": {
          "type": "object"
        },
        "action": {
          "type": "string"
        }
      },
      "example": {
        "task_ids": [
          2,
          3,
          4,
          5
        ],
        "sub_task_rule_id": 3,
        "photos": [
          "https://s3-ap-southeast-1.amazonaws.com/signature.jpg"
        ],
        "meta": {
          "photo_type": "Proof",
          "photo_title": "Signature"
        },
        "event": "pickup_completed",
        "completion_time": "2018-03-10T03:37:08",
        "completion_location": {
          "lng": 1,
          "lat": 1
        },
        "completion_data": {
          "recipient_name": "recipient",
          "arrival_time": "2018-03-10T03:37:08"
        },
        "action": "upload_photo"
      }
    },
    "CompanyServiceTypesResponse": {
      "type": "object",
      "title": "Company Service Types Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "message": "Got company service types",
        "data": {
          "operation_id": 1,
          "name": "Same Day",
          "key": "same_day",
          "id": 1024,
          "company_id": 601
        }
      }
    },
    "DispatcherCreateOrganisationResponse": {
      "type": "object",
      "title": "Organisation Response",
      "properties": {
        "data": {
          "type": "object"
        }
      },
      "example": {
        "data": {
          "phone": "+6598765432",
          "email": "bob@mail.com",
          "access_token": "pCVPeEEUuKnM7geUOcSLY2imA5l6YUdjymkApBDAAGY="
        }
      }
    },
    "BatchContinueResponse": {
      "type": "object",
      "title": "Batch Response",
      "properties": {
        "message": {
          "type": "string"
        },
        "data": {
          "type": "object"
        }
      },
      "example": {
        "message": "Batch upload processing.",
        "data": {
          "id": 1
        }
      }
    },
    "DispatcherUpdatePlanRequest": {
      "type": "object",
      "title": "Plan Update Request",
      "required": [
        "output",
        "uuid"
      ],
      "properties": {
        "uuid": {
          "type": "string",
          "description": "Plan uuid"
        },
        "settings": {
          "type": "object",
          "description": "Plan settings"
        },
        "output": {
          "type": "object",
          "description": "Plan output"
        },
        "input": {
          "type": "object",
          "description": "Plan input"
        }
      },
      "example": {
        "uuid": "123456789",
        "settings": {
          "sample settings": "sample value"
        },
        "output": {
          "sample output": "sample value"
        },
        "input": {
          "sample input": "sample value"
        }
      },
      "description": "POST body for updating plan"
    },
    "DispatcherWorkerTeamsResponse": {
      "type": "object",
      "title": "Worker Teams Response",
      "example": {
        "pagination": {
          "total_pages": 1,
          "total_count": 2,
          "limit_value": 10,
          "current_page": 1
        },
        "data": [
          {
            "name": "Changi morning shift 8",
            "id": 17834,
            "created_at": "2018-08-21T23:45:00.000000Z"
          }
        ]
      }
    }
  }
}